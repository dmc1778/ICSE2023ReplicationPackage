[{
"de3a48013a35bf6ebfba7fb4c5408339e57010cb": [
{
    "line_num": 246,
    "line_str": "#if !defined(_WIN32) || !defined(C10_BUILD_SHARED_LIBS)",
    "file_path": "torch/csrc/autograd/engine.cpp",
    "previous_commits": [
        [
            "1c958f8ef94e70efd420170642945fa9db99bf10",
            246,
            "#if !defined(_WIN32) || !defined(C10_BUILD_SHARED_LIBS)"
        ]
    ]
}
]
},{
"0fa551f0ab9ecd99456f2b718c3735a84f10f75a": [
{
    "line_num": 232,
    "line_str": "int64_t linear_warmup_num_iter = this->template GetSingleArgument<int>(",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "3bc014ecf2a1badee5b1aa19e8b99273134f9590",
            232,
            "int64_t linear_warmup_num_iter = this->template GetSingleArgument<int>("
        ]
    ]
},
{
    "line_num": 200,
    "line_str": "int64_t linear_warmup_num_iter = this->template GetSingleArgument<int>(",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "784c4a91ea3023c8c7a64e53fc46392f292c7a1e",
            200,
            "int64_t linear_warmup_num_iter = this->template GetSingleArgument<int>("
        ]
    ]
},
{
    "line_num": 198,
    "line_str": "int64_t constant_warmup_num_iter = this->template GetSingleArgument<int>(",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "784c4a91ea3023c8c7a64e53fc46392f292c7a1e",
            198,
            "int64_t constant_warmup_num_iter = this->template GetSingleArgument<int>("
        ]
    ]
},
{
    "line_num": 230,
    "line_str": "int64_t constant_warmup_num_iter = this->template GetSingleArgument<int>(",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "3bc014ecf2a1badee5b1aa19e8b99273134f9590",
            230,
            "int64_t constant_warmup_num_iter = this->template GetSingleArgument<int>("
        ]
    ]
},
{
    "line_num": 68,
    "line_str": "this->template GetSingleArgument<int>(arg_prefix + \"num_iter\", 0);",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "23ba0561c3e272750de65f7216c4a1f4749fbf2d",
            68,
            "this->template GetSingleArgument<int>(arg_prefix + \"num_iter\", 0);"
        ]
    ]
},
{
    "line_num": 189,
    "line_str": "int64_t linear_warmup_num_iter = this->template GetSingleArgument<int>(",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "784c4a91ea3023c8c7a64e53fc46392f292c7a1e",
            189,
            "int64_t linear_warmup_num_iter = this->template GetSingleArgument<int>("
        ]
    ]
},
{
    "line_num": 187,
    "line_str": "int64_t constant_warmup_num_iter = this->template GetSingleArgument<int>(",
    "file_path": "caffe2/sgd/learning_rate_op.h",
    "previous_commits": [
        [
            "784c4a91ea3023c8c7a64e53fc46392f292c7a1e",
            187,
            "int64_t constant_warmup_num_iter = this->template GetSingleArgument<int>("
        ]
    ]
}
]
},{
"b6b1c01adfdadf93a4a1d30c3661ff177412a876": []},
{
"c010ef7f0c6d837809a7e973048afac76373e3de": [
{
    "line_num": 20,
    "line_str": "AT_ASSERTM(N > 0, \"CUDA kernel launch blocks must be positive, but got N=\", N);",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "6a55238a3ff4ae3dfdfe5d87cf35d92fcd10bf2a",
            20,
            "AT_ASSERTM(N > 0, \"CUDA kernel launch blocks must be positive, but got N=\", N);"
        ]
    ]
},
{
    "line_num": 19,
    "line_str": "",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "43b151224e5487eea00c7ce4e0efd442ee623715",
            19,
            ""
        ]
    ]
},
{
    "line_num": 18,
    "line_str": "}",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "43b151224e5487eea00c7ce4e0efd442ee623715",
            18,
            "}"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": "return (N + CUDA_NUM_THREADS - 1) / CUDA_NUM_THREADS;",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "43b151224e5487eea00c7ce4e0efd442ee623715",
            17,
            "return (N + CUDA_NUM_THREADS - 1) / CUDA_NUM_THREADS;"
        ]
    ]
},
{
    "line_num": 16,
    "line_str": "{",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "43b151224e5487eea00c7ce4e0efd442ee623715",
            16,
            "{"
        ]
    ]
},
{
    "line_num": 15,
    "line_str": "inline int GET_BLOCKS(const int N)",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "43b151224e5487eea00c7ce4e0efd442ee623715",
            15,
            "inline int GET_BLOCKS(const int N)"
        ]
    ]
},
{
    "line_num": 37,
    "line_str": "return GET_BLOCKS(static_cast<int>(std::min(max_int, N)));",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "33519e19abfe99747ee654df61b83d3c82f03c27",
            37,
            "return GET_BLOCKS(static_cast<int>(std::min(max_int, N)));"
        ]
    ]
}
]
},{
"42b4a7132e7c6f1df963b473d1583e4791fb1808": []},
{
"92b7347fd72428e480a1b5c1c2b2648fdaf0aeec": [
{
    "line_num": 620,
    "line_str": "&ScatterAssignOp::DoRun<int64_t, int64_t>}}) {}",
    "file_path": "caffe2/operators/utility_ops.h",
    "previous_commits": [
        [
            "ee62a595fc6edac5c2341df966c6b30e7f9bcf1d",
            620,
            "&ScatterAssignOp::DoRun<int64_t, int64_t>}}) {}"
        ],
        [
            "1d83a46b44209f75e89555af225b3b7744b32411",
            590,
            "&ScatterAssignOp::DoRun<int64_t, float16>}}) {}"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "auto* counter = Output(OUTPUT_COUNTER)->template mutable_data<T>();",
    "file_path": "caffe2/sgd/rowwise_counter.h",
    "previous_commits": [
        [
            "35bee0c72976ec9edcd4b2f6e3ba0421fe53ecf7",
            31,
            "auto* counter = Output(OUTPUT_COUNTER)->template mutable_data<T>();"
        ]
    ]
},
{
    "line_num": 7,
    "line_str": "template <typename T>",
    "file_path": "caffe2/sgd/rowwise_counter.h",
    "previous_commits": [
        [
            "35bee0c72976ec9edcd4b2f6e3ba0421fe53ecf7",
            7,
            "template <typename T>"
        ]
    ]
}
]
},{
"d21e345ef0f306ffe15bcd733466b323b538b9b3": [
{
    "line_num": 152,
    "line_str": "(destructor)THPGenerator_dealloc,            /* tp_dealloc */",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "ae342fd0760d66ca870484553bce805cc466a4bc",
            152,
            "(destructor)THPGenerator_dealloc,            /* tp_dealloc */"
        ],
        [
            "3f7ab95890ee9e9685cb61a1ce69b2f464badd90",
            114,
            "(destructor)THPGenerator_dealloc,      /* tp_dealloc */"
        ],
        [
            "4f66ea42af944f9be36a40f1374ba0d5234678c1",
            35,
            "(destructor)THPGenerator_dealloc,     /* tp_dealloc */"
        ]
    ]
},
{
    "line_num": 13,
    "line_str": "Py_TYPE(self)->tp_free((PyObject*)self);",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "4f66ea42af944f9be36a40f1374ba0d5234678c1",
            13,
            "Py_TYPE(self)->tp_free((PyObject*)self);"
        ]
    ]
},
{
    "line_num": 10,
    "line_str": "static void THPGenerator_dealloc(THPGenerator* self)",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "4f66ea42af944f9be36a40f1374ba0d5234678c1",
            10,
            "static void THPGenerator_dealloc(THPGenerator* self)"
        ]
    ]
},
{
    "line_num": 40,
    "line_str": "self->cdata.~Generator();",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "0cb86afd727398385b9b766987947cfa47359069",
            40,
            "self->cdata.~Generator();"
        ],
        [
            "d3acfe3ba8c74cd040fb6ea68228ae5ba00750d6",
            41,
            "self->cdata.~Generator();"
        ],
        [
            "5306713a362e60e2111cc6a6ab736b45ab7d5d0f",
            39,
            "self->cdata.~Generator();"
        ],
        [
            "ae342fd0760d66ca870484553bce805cc466a4bc",
            53,
            "self->cdata = new CPUGenerator();"
        ]
    ]
},
{
    "line_num": 39,
    "line_str": "self->cdata.set_pyobj(nullptr);",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "0cb86afd727398385b9b766987947cfa47359069",
            39,
            "self->cdata.set_pyobj(nullptr);"
        ],
        [
            "d3acfe3ba8c74cd040fb6ea68228ae5ba00750d6",
            40,
            "self->cdata.set_pyobj(nullptr);"
        ],
        [
            "34b32ca91491147cca2418b955141944d4492bec",
            39,
            "self->cdata.set_pyobj(nullptr);"
        ],
        [
            "11a40410e755b1fe74efe9eaa635e7ba5712846b",
            39,
            "self->cdata->set_pyobj(nullptr);"
        ]
    ]
}
]
},{
"0cb86afd727398385b9b766987947cfa47359069": [
{
    "line_num": 42,
    "line_str": "}",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "d3acfe3ba8c74cd040fb6ea68228ae5ba00750d6",
            42,
            "}"
        ]
    ]
},
{
    "line_num": 41,
    "line_str": "self->cdata.~Generator();",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "d3acfe3ba8c74cd040fb6ea68228ae5ba00750d6",
            41,
            "self->cdata.~Generator();"
        ],
        [
            "5306713a362e60e2111cc6a6ab736b45ab7d5d0f",
            39,
            "self->cdata.~Generator();"
        ],
        [
            "ae342fd0760d66ca870484553bce805cc466a4bc",
            53,
            "self->cdata = new CPUGenerator();"
        ]
    ]
},
{
    "line_num": 40,
    "line_str": "self->cdata.set_pyobj(nullptr);",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "d3acfe3ba8c74cd040fb6ea68228ae5ba00750d6",
            40,
            "self->cdata.set_pyobj(nullptr);"
        ],
        [
            "34b32ca91491147cca2418b955141944d4492bec",
            39,
            "self->cdata.set_pyobj(nullptr);"
        ],
        [
            "11a40410e755b1fe74efe9eaa635e7ba5712846b",
            39,
            "self->cdata->set_pyobj(nullptr);"
        ]
    ]
},
{
    "line_num": 39,
    "line_str": "if (self->cdata.defined()) {",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "d3acfe3ba8c74cd040fb6ea68228ae5ba00750d6",
            39,
            "if (self->cdata.defined()) {"
        ]
    ]
}
]
},{
"366c014a7799f0b7bbc258fd6c271dadb99d1de0": [
{
    "line_num": 891,
    "line_str": "ncclOp[opts.reduceOp],",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            891,
            "ncclOp[opts.reduceOp],"
        ]
    ]
},
{
    "line_num": 755,
    "line_str": "ncclOp[opts.reduceOp],",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            755,
            "ncclOp[opts.reduceOp],"
        ]
    ]
},
{
    "line_num": 809,
    "line_str": "ncclOp[opts.reduceOp],",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            809,
            "ncclOp[opts.reduceOp],"
        ]
    ]
},
{
    "line_num": 65,
    "line_str": "throw std::runtime_error(\"Unsupported data type for NCCL process group\");",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            65,
            "throw std::runtime_error(\"Unsupported data type for NCCL process group\");"
        ]
    ]
},
{
    "line_num": 64,
    "line_str": "} catch (std::out_of_range& e) {",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            64,
            "} catch (std::out_of_range& e) {"
        ]
    ]
},
{
    "line_num": 63,
    "line_str": "return ncclDataType.at(type);",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            63,
            "return ncclDataType.at(type);"
        ]
    ]
},
{
    "line_num": 62,
    "line_str": "try {",
    "file_path": "torch/lib/c10d/ProcessGroupNCCL.cpp",
    "previous_commits": [
        [
            "dbe6bfbd7e4737f4aa9dab9ce4a65f9ef8fb7a39",
            62,
            "try {"
        ]
    ]
}
]
},{
"a69a2628109a55f7f965bb79eca8967fce685a6a": []},
{
"02ae9a158334233064a795ca955ad465b3c374d7": [
{
    "line_num": 81,
    "line_str": "throw TypeError(\"expected a torch.ByteTensor, but got %s\", Py_TYPE(_new_state)->tp_name);",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "30ec06c140b0428d591e2f5007bc8046d1bdf7c4",
            81,
            "throw TypeError(\"expected a torch.ByteTensor, but got %s\", Py_TYPE(_new_state)->tp_name);"
        ]
    ]
},
{
    "line_num": 86,
    "line_str": "throw TypeError(\"expected a torch.ByteTensor, but got %s\", type_name.c_str());",
    "file_path": "torch/csrc/Generator.cpp",
    "previous_commits": [
        [
            "30ec06c140b0428d591e2f5007bc8046d1bdf7c4",
            86,
            "throw TypeError(\"expected a torch.ByteTensor, but got %s\", type_name.c_str());"
        ]
    ]
},
{
    "line_num": 142,
    "line_str": "throw TypeError(\"cls must be a type (got %s)\", Py_TYPE(cls)->tp_name);",
    "file_path": "torch/csrc/autograd/python_variable.cpp",
    "previous_commits": [
        [
            "6b3a4637d6e87a543b3df6edb825c07d7dabe611",
            142,
            "throw TypeError(\"cls must be a type (got %s)\", Py_TYPE(cls)->tp_name);"
        ]
    ]
},
{
    "line_num": 156,
    "line_str": "throw TypeError(\"cls must be a type (got %s)\", Py_TYPE(cls)->tp_name);",
    "file_path": "torch/csrc/autograd/python_variable.cpp",
    "previous_commits": [
        [
            "1875c2e4bda4addf290cad73ca54003ff9ed7090",
            156,
            "throw TypeError(\"cls must be a type (got %s)\", Py_TYPE(cls)->tp_name);"
        ]
    ]
},
{
    "line_num": 285,
    "line_str": "throw TypeError(\"expected Tensor (got %s)\", Py_TYPE(obj)->tp_name);",
    "file_path": "torch/csrc/cuda/python_nccl.cpp",
    "previous_commits": [
        [
            "d5236f851714c5d40dbfe4340589036b27e013e7",
            285,
            "throw TypeError(\"expected Tensor (got %s)\", Py_TYPE(obj)->tp_name);"
        ]
    ]
},
{
    "line_num": 373,
    "line_str": "throw TypeError(",
    "file_path": "torch/csrc/cuda/python_nccl.cpp",
    "previous_commits": [
        [
            "b4d0dc77bea77ea6704b10ec939c12782f41a7c8",
            373,
            "throw TypeError("
        ]
    ]
},
{
    "line_num": 36,
    "line_str": "}",
    "file_path": "torch/csrc/utils/tensor_new.cpp",
    "previous_commits": [
        [
            "aeb7a3668df6c0829cb4084ba4e0ff37a94b7c41",
            36,
            "}"
        ]
    ]
},
{
    "line_num": 122,
    "line_str": "throw TypeError(\"expected %s (got %s)\", toString(dispatch_key), toString(other.key_set()).c_str());",
    "file_path": "torch/csrc/utils/tensor_new.cpp",
    "previous_commits": [
        [
            "4b3ae7e0af17cfaab832fd7954f5bfad07cee0ba",
            122,
            "throw TypeError(\"expected %s (got %s)\", toString(dispatch_key), toString(other.key_set()).c_str());"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            122,
            "throw TypeError(\"expected %s (got %s)\", dispatch_key, toString(other.key_set()).c_str());"
        ],
        [
            "aa49aa856c559e7aef87d9935e968a6c4850e2ce",
            120,
            "throw TypeError(\"expected %s (got %s)\", type_id, toString(other.type_set()).c_str());"
        ],
        [
            "9c8f9f0ecb3f350cbd058f9cd30143de11177747",
            119,
            "throw TypeError(\"expected %s (got %s)\", type_id, other.type_id());"
        ],
        [
            "c705d9eb1edd68ddb6e39160a1ac92d011ebcec4",
            88,
            "throw TypeError(\"expected %s (got %s)\", type.toString(), other.type().toString().c_str());"
        ],
        [
            "aeb7a3668df6c0829cb4084ba4e0ff37a94b7c41",
            35,
            "throw TypeError(\"expected %s (got %s)\", type.toString(), other.type().toString());"
        ]
    ]
},
{
    "line_num": 92,
    "line_str": "}",
    "file_path": "torch/csrc/utils/tensor_new.cpp",
    "previous_commits": [
        [
            "689dd800ed6409f5e85ab945013b1ae1cf8e514f",
            92,
            "}"
        ]
    ]
},
{
    "line_num": 91,
    "line_str": "throw TypeError(\"expected %s (got %s)\", toString(scalar_type), toString(other.scalar_type()));",
    "file_path": "torch/csrc/utils/tensor_new.cpp",
    "previous_commits": [
        [
            "689dd800ed6409f5e85ab945013b1ae1cf8e514f",
            91,
            "throw TypeError(\"expected %s (got %s)\", toString(scalar_type), toString(other.scalar_type()));"
        ]
    ]
},
{
    "line_num": 90,
    "line_str": "if (other.scalar_type() != scalar_type) {",
    "file_path": "torch/csrc/utils/tensor_new.cpp",
    "previous_commits": [
        [
            "689dd800ed6409f5e85ab945013b1ae1cf8e514f",
            90,
            "if (other.scalar_type() != scalar_type) {"
        ]
    ]
},
{
    "line_num": 120,
    "line_str": "if (legacyExtractDispatchKey(other.key_set()) != dispatch_key) {",
    "file_path": "torch/csrc/utils/tensor_new.cpp",
    "previous_commits": [
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            120,
            "if (legacyExtractDispatchKey(other.key_set()) != dispatch_key) {"
        ]
    ]
}
]
},{
"86b1afa039f3fba83f082382b7c62b896fb98e09": [
{
    "line_num": 50,
    "line_str": ".template callWithDispatchKey<Result, Args...>(op, dispatchKey, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/boxing/impl/test_helpers.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            50,
            ".template callWithDispatchKey<Result, Args...>(op, dispatchKey, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 49,
    "line_str": "return c10::Dispatcher::singleton()",
    "file_path": "aten/src/ATen/core/boxing/impl/test_helpers.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            49,
            "return c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 44,
    "line_str": ".template call<Result, Args...>(op, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/boxing/impl/test_helpers.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            44,
            ".template call<Result, Args...>(op, std::forward<Args>(args)...);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            43,
            "return op.typed<Result(Args...)>().call(std::forward<Args>(args)...);"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            45,
            ".template call<Result, Args...>(op, std::forward<Args>(args)...);"
        ],
        [
            "ca20b569be556ff56ed02712547ee0c5b9123f28",
            39,
            ".template callUnboxed<Result, Args...>(op, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 43,
    "line_str": "return c10::Dispatcher::singleton()",
    "file_path": "aten/src/ATen/core/boxing/impl/test_helpers.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            43,
            "return c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 208,
    "line_str": "auto handle = op.operatorIterator_->op.registerKernel(dispatch_key, std::move(kernel), std::move(inferred_function_schema), std::move(debug));",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            208,
            "auto handle = op.operatorIterator_->op.registerKernel(dispatch_key, std::move(kernel), std::move(inferred_function_schema), std::move(debug));"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            209,
            "auto handle = op.operatorIterator_->op.registerKernel(dispatch_key, std::move(kernel), std::move(cpp_signature), std::move(inferred_function_schema), std::move(debug));"
        ],
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            186,
            "auto handle = op.operatorIterator_->op.registerKernel(dispatch_key, std::move(kernel), std::move(inferred_function_schema), std::move(debug));"
        ]
    ]
},
{
    "line_num": 269,
    "line_str": "}",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            269,
            "}"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            308,
            "}"
        ],
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            158,
            "}"
        ]
    ]
},
{
    "line_num": 268,
    "line_str": "return c10::Dispatcher::singleton().call<Return, Args...>(*this, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            268,
            "return c10::Dispatcher::singleton().call<Return, Args...>(*this, std::forward<Args>(args)...);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            307,
            "return c10::Dispatcher::singleton().call<Return, Args...>(*this, std::forward<Args>(args)...);"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            262,
            "return c10::Dispatcher::singleton().call<Return, Args...>(*this, std::forward<Args>(args)...);"
        ],
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            157,
            "return c10::Dispatcher::singleton().callUnboxed<Return, Args...>(*this, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 235,
    "line_str": "class CAFFE2_API OperatorHandle final {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            235,
            "class CAFFE2_API OperatorHandle final {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            238,
            "class CAFFE2_API OperatorHandle {"
        ],
        [
            "aaa8ace48642a1a5774332084161e0f93f171e1f",
            113,
            "class CAFFE2_API OperatorHandle final {"
        ]
    ]
},
{
    "line_num": 266,
    "line_str": "template<class Return, class... Args>",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            266,
            "template<class Return, class... Args>"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            298,
            "template<class Return, class... Args>"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            160,
            "template<class Return, class... Args>"
        ]
    ]
},
{
    "line_num": 267,
    "line_str": "Return call(Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            267,
            "Return call(Args... args) const {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            306,
            "Return call(Args... args) const {"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            261,
            "Return call(Args... args) const {"
        ],
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            156,
            "Return callUnboxed(Args... args) const {"
        ]
    ]
},
{
    "line_num": 270,
    "line_str": "",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            270,
            ""
        ]
    ]
},
{
    "line_num": 301,
    "line_str": "inline Return Dispatcher::call(const OperatorHandle& op, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            301,
            "inline Return Dispatcher::call(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            333,
            "inline Return Dispatcher::call(const TypedOperatorHandle<Return(Args...)>& op, Args... args) const {"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            295,
            "inline Return Dispatcher::call(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            190,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "ca20b569be556ff56ed02712547ee0c5b9123f28",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "41e42c34d65f7dce5f526cdb059e860bbe4d0f36",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const {"
        ],
        [
            "88a34ef69068cf3e70155cab833e0355ce115fbf",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const {"
        ],
        [
            "9dbee5f8e542061881f55ab967fdaa4d6cec529d",
            224,
            "inline OpKernel Dispatcher::lookup(const OperatorHandle& op, TensorTypeId dispatchKey) const {"
        ]
    ]
},
{
    "line_num": 293,
    "line_str": "inline Return Dispatcher::callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            293,
            "inline Return Dispatcher::callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            325,
            "inline Return Dispatcher::callWithDispatchKey(const TypedOperatorHandle<Return(Args...)>& op, DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            287,
            "inline Return Dispatcher::callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            202,
            "inline Return Dispatcher::callUnboxedWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            182,
            "inline Return Dispatcher::callUnboxedWithDispatchKey(const OperatorHandle& op, c10::optional<DispatchKey> dispatchKey, Args... args) const {"
        ]
    ]
},
{
    "line_num": 123,
    "line_str": "Return redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            123,
            "Return redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            126,
            "Return redispatch(const TypedOperatorHandle<Return (Args...)>& op, DispatchKey currentDispatchKey, Args... args) const;"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            123,
            "Return redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            126,
            "Return callUnboxedRedispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;"
        ]
    ]
},
{
    "line_num": 312,
    "line_str": "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            312,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>("
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            344,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().template getDispatchKeyUnboxed<Args...>("
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            289,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>("
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            213,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, args...);"
        ],
        [
            "248f6d0485bc2344e1f339d2b0572f1e02ab6515",
            211,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendFallbackNonFallthroughSet_, args...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            193,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            177,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "7b5045be9d9f15acaf93dd265deafb01f50185e2",
            180,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "3fa5917530d44213f71740e6a60293315356e4ad",
            166,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ]
    ]
},
{
    "line_num": 151,
    "line_str": "RegistrationHandleRAII registerImpl(OperatorName op_name, c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            151,
            "RegistrationHandleRAII registerImpl(OperatorName op_name, c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            154,
            "RegistrationHandleRAII registerImpl(OperatorName op_name, c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, c10::optional<impl::CppSignature> cpp_signature, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ],
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            146,
            "RegistrationHandleRAII registerImpl(OperatorName op_name, c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ]
    ]
},
{
    "line_num": 304,
    "line_str": "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, DispatchKeySet::FULL, args...);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            304,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, DispatchKeySet::FULL, args...);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            336,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().template getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, DispatchKeySet::FULL, args...);"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            281,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, DispatchKeySet::FULL, args...);"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            213,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, args...);"
        ],
        [
            "248f6d0485bc2344e1f339d2b0572f1e02ab6515",
            211,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendFallbackNonFallthroughSet_, args...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            193,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            177,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "7b5045be9d9f15acaf93dd265deafb01f50185e2",
            180,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "3fa5917530d44213f71740e6a60293315356e4ad",
            166,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ]
    ]
},
{
    "line_num": 309,
    "line_str": "inline Return Dispatcher::redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            309,
            "inline Return Dispatcher::redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            341,
            "inline Return Dispatcher::redispatch(const TypedOperatorHandle<Return (Args...)>& op, DispatchKey currentDispatchKey, Args... args) const {"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            303,
            "inline Return Dispatcher::redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            286,
            "inline Return Dispatcher::callUnboxedRedispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {"
        ]
    ]
},
{
    "line_num": 115,
    "line_str": "Return callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            115,
            "Return callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            118,
            "Return callWithDispatchKey(const TypedOperatorHandle<Return (Args...)>& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            115,
            "Return callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "b2344b70da0842b18e56cd36f05e50a8f0622c24",
            97,
            "Return callUnboxedWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            121,
            "Return callUnboxedWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            106,
            "Return callUnboxedWithDispatchKey(const OperatorHandle& op, c10::optional<DispatchKey> dispatchKey, Args... args) const;"
        ]
    ]
},
{
    "line_num": 273,
    "line_str": "return c10::Dispatcher::singleton().callWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            273,
            "return c10::Dispatcher::singleton().callWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            311,
            "return c10::Dispatcher::singleton().callWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            267,
            "return c10::Dispatcher::singleton().callWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            162,
            "return c10::Dispatcher::singleton().callUnboxedWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 272,
    "line_str": "Return callWithDispatchKey(DispatchKey dispatchKey, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            272,
            "Return callWithDispatchKey(DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            310,
            "Return callWithDispatchKey(DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            266,
            "Return callWithDispatchKey(DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            181,
            "Return callUnboxedWithDispatchKey(DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            161,
            "Return callUnboxedWithDispatchKey(c10::optional<DispatchKey> dispatchKey, Args... args) const {"
        ]
    ]
},
{
    "line_num": 271,
    "line_str": "template<class Return, class... Args>",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            271,
            "template<class Return, class... Args>"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            298,
            "template<class Return, class... Args>"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            160,
            "template<class Return, class... Args>"
        ]
    ]
},
{
    "line_num": 110,
    "line_str": "Return call(const OperatorHandle& op, Args... args) const;",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            110,
            "Return call(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            113,
            "Return call(const TypedOperatorHandle<Return (Args...)>& op, Args... args) const;"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            110,
            "Return call(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "b2344b70da0842b18e56cd36f05e50a8f0622c24",
            92,
            "Return callUnboxed(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "ca20b569be556ff56ed02712547ee0c5b9123f28",
            94,
            "Return callUnboxed(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "41e42c34d65f7dce5f526cdb059e860bbe4d0f36",
            94,
            "Return callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const;"
        ],
        [
            "88a34ef69068cf3e70155cab833e0355ce115fbf",
            94,
            "Return callUnboxed(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            94,
            "Return callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const;"
        ],
        [
            "9dbee5f8e542061881f55ab967fdaa4d6cec529d",
            152,
            "OpKernel lookup(const OperatorHandle& op, TensorTypeId dispatchKey) const;"
        ]
    ]
},
{
    "line_num": 85,
    "line_str": "std::list<KernelEntry>::iterator registerKernel(c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);",
    "file_path": "aten/src/ATen/core/dispatch/OperatorEntry.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            85,
            "std::list<KernelEntry>::iterator registerKernel(c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            86,
            "std::list<KernelEntry>::iterator registerKernel(c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, c10::optional<CppSignature> cpp_signature, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ],
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            82,
            "std::list<KernelEntry>::iterator registerKernel(c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ]
    ]
},
{
    "line_num": 36,
    "line_str": "CppFunction::CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema)",
    "file_path": "aten/src/ATen/core/library.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            36,
            "CppFunction::CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema)"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            36,
            "CppFunction::CppFunction(c10::KernelFunction func, c10::optional<c10::impl::CppSignature> cpp_signature, std::unique_ptr<c10::FunctionSchema> schema)"
        ],
        [
            "a894fff2656cb920ee79cf8cf5c72b7cdb5cdd01",
            36,
            "CppFunction::CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema)"
        ]
    ]
},
{
    "line_num": 102,
    "line_str": "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"registered by RegisterOperators\")",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            102,
            "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"registered by RegisterOperators\")"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            102,
            "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.cpp_signature), std::move(kernel.inferred_function_schema), \"registered by RegisterOperators\")"
        ],
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            133,
            "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"registered by RegisterOperators\")"
        ],
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            100,
            "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"legacy kernel from RegisterOperators\")"
        ]
    ]
},
{
    "line_num": 66,
    "line_str": "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            66,
            "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            66,
            "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullopt, nullptr);"
        ],
        [
            "aa2862b8431e7cdb7d4d8d558e632be0fc2f8fa3",
            56,
            "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            56,
            "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction(kernel_func), nullptr);"
        ]
    ]
},
{
    "line_num": 72,
    "line_str": "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            72,
            "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            72,
            "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullopt, nullptr);"
        ],
        [
            "aa2862b8431e7cdb7d4d8d558e632be0fc2f8fa3",
            62,
            "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            61,
            "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction(kernel_func), nullptr);"
        ]
    ]
},
{
    "line_num": 415,
    "line_str": "Options&& kernel(c10::optional<DispatchKey> dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            415,
            "Options&& kernel(c10::optional<DispatchKey> dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            425,
            "Options&& kernel(c10::optional<DispatchKey> dispatch_key, KernelFunction&& func, c10::optional<impl::CppSignature> cpp_signature, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "062ac6b472af43c9cf83d285e661e24244551f85",
            406,
            "Options&& kernel(c10::optional<DispatchKey> dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            405,
            "Options&& kernel(c10::optional<DispatchKey>&& dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            419,
            "Options&& kernel(c10::optional<TensorTypeId>&& dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "9dbee5f8e542061881f55ab967fdaa4d6cec529d",
            262,
            "Options&& kernel(c10::optional<TensorTypeId>&& dispatch_key, KernelFunction* kernel_func, KernelCacheCreatorFunction&& cache_creator, void* unboxed_kernel_func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "6063ffd055a036ea1d56e75117c7e07137e58689",
            256,
            "Options&& kernel(c10::optional<TensorTypeId>&& dispatch_key, KernelFunction* kernel_func, KernelCacheCreatorFunction&& cache_creator, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "cb6be42403b6d1e8993e3d3b71ea479537911a18",
            178,
            "Options&& kernel(KernelFunction* kernel_func, KernelCacheCreatorFunction&& cache_creator, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ]
    ]
},
{
    "line_num": 1570,
    "line_str": "return c10::Dispatcher::singleton().redispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);",
    "file_path": "aten/src/ATen/core/op_registration/op_registration_test.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            1570,
            "return c10::Dispatcher::singleton().redispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            1643,
            "return c10::Dispatcher::singleton().redispatch<Tensor, const Tensor&>(op, c10::DispatchKey::BackendSelect, x);"
        ],
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            1568,
            "return c10::Dispatcher::singleton().redispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ],
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            1464,
            "return c10::Dispatcher::singleton().callUnboxedRedispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            1461,
            "return c10::Dispatcher::singleton().callUnboxedRedispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ]
    ]
},
{
    "line_num": 705,
    "line_str": "}, \"In registration for _test::dummy: expected schema\");",
    "file_path": "aten/src/ATen/core/op_registration/op_registration_test.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            705,
            "}, \"In registration for _test::dummy: expected schema\");"
        ]
    ]
},
{
    "line_num": 1569,
    "line_str": "auto op = c10::Dispatcher::singleton().findSchema({\"test::fn\", \"\"});",
    "file_path": "aten/src/ATen/core/op_registration/op_registration_test.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            1569,
            "auto op = c10::Dispatcher::singleton().findSchema({\"test::fn\", \"\"});"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            965,
            "c10::Dispatcher::singleton().findSchemaOrThrow(\"_test::dummy\", \"\")"
        ],
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            1463,
            "auto op = c10::Dispatcher::singleton().findSchema({\"test::fn\", \"\"});"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            1460,
            "auto op = c10::Dispatcher::singleton().findSchema({\"test::fn\", \"\"});"
        ]
    ]
},
{
    "line_num": 23,
    "line_str": "Tensor empty_override(IntArrayRef size, const TensorOptions & options) {",
    "file_path": "test/cpp_extensions/msnpu_extension.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            23,
            "Tensor empty_override(IntArrayRef size, const TensorOptions & options) {"
        ]
    ]
},
{
    "line_num": 30,
    "line_str": "op.call<Tensor, Tensor>(self);",
    "file_path": "test/mobile/op_deps/quantized_ops.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            30,
            "op.call<Tensor, Tensor>(self);"
        ]
    ]
},
{
    "line_num": 29,
    "line_str": "static const c10::OperatorHandle op = c10::Dispatcher::singleton().findSchema({kName, \"\"}).value();",
    "file_path": "test/mobile/op_deps/quantized_ops.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            29,
            "static const c10::OperatorHandle op = c10::Dispatcher::singleton().findSchema({kName, \"\"}).value();"
        ]
    ]
},
{
    "line_num": 22,
    "line_str": "op.call<Tensor, Tensor>(self);",
    "file_path": "test/mobile/op_deps/quantized_ops.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            22,
            "op.call<Tensor, Tensor>(self);"
        ]
    ]
},
{
    "line_num": 21,
    "line_str": "static const c10::OperatorHandle op = c10::Dispatcher::singleton().findSchema({kName, \"\"}).value();",
    "file_path": "test/mobile/op_deps/quantized_ops.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            21,
            "static const c10::OperatorHandle op = c10::Dispatcher::singleton().findSchema({kName, \"\"}).value();"
        ]
    ]
},
{
    "line_num": 49,
    "line_str": "op.call<Tensor, Tensor>(qa);",
    "file_path": "test/mobile/op_deps/quantized_ops.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            49,
            "op.call<Tensor, Tensor>(qa);"
        ]
    ]
},
{
    "line_num": 48,
    "line_str": "static const c10::OperatorHandle op = c10::Dispatcher::singleton().findSchema({callOpName, \"\"}).value();",
    "file_path": "test/mobile/op_deps/quantized_ops.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            48,
            "static const c10::OperatorHandle op = c10::Dispatcher::singleton().findSchema({callOpName, \"\"}).value();"
        ]
    ]
},
{
    "line_num": 24,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            24,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "6e145b461495259e7375e87fcae07ffeba13cdc4",
            24,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            24,
            "return c10::Dispatcher::singleton().callUnboxedOnly<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 16,
    "line_str": ".findSchema({\"_test::BB\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            16,
            ".findSchema({\"_test::BB\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            16,
            ".findSchema({\"aten::BB\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 45,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            45,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            45,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 8,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            8,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 37,
    "line_str": ".findSchema({\"_test::EE\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            37,
            ".findSchema({\"_test::EE\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            37,
            ".findSchema({\"aten::EE\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 29,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            29,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 25,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            25,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            17,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            17,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 46,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            46,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 9,
    "line_str": ".findSchema({\"_test::AA\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            9,
            ".findSchema({\"_test::AA\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            9,
            ".findSchema({\"aten::AA\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 38,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            38,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "6e145b461495259e7375e87fcae07ffeba13cdc4",
            38,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            38,
            "return c10::Dispatcher::singleton().callUnboxedOnly<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 30,
    "line_str": ".findSchema({\"_test::DD\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            30,
            ".findSchema({\"_test::DD\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            30,
            ".findSchema({\"aten::DD\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 22,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            22,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 18,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            18,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 43,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            43,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 10,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            10,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "6e145b461495259e7375e87fcae07ffeba13cdc4",
            10,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            10,
            "return c10::Dispatcher::singleton().callUnboxedOnly<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 39,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            39,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            31,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            31,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 23,
    "line_str": ".findSchema({\"_test::CC\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            23,
            ".findSchema({\"_test::CC\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            23,
            ".findSchema({\"aten::CC\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 15,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            15,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 44,
    "line_str": ".findSchema({\"_test::FF\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            44,
            ".findSchema({\"_test::FF\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            44,
            ".findSchema({\"aten::FF\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 11,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            11,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 36,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            36,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 32,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/simple_ops.h",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            32,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "op, self, self);",
    "file_path": "test/mobile/op_deps/utils.cpp",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            31,
            "op, self, self);"
        ]
    ]
},
{
    "line_num": 30,
    "line_str": "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>(",
    "file_path": "test/mobile/op_deps/utils.cpp",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            30,
            "return c10::Dispatcher::singleton().call<Tensor, const Tensor&>("
        ],
        [
            "6e145b461495259e7375e87fcae07ffeba13cdc4",
            30,
            "return c10::Dispatcher::singleton().callUnboxed<Tensor, const Tensor&>("
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            30,
            "return c10::Dispatcher::singleton().callUnboxedOnly<Tensor, const Tensor&>("
        ]
    ]
},
{
    "line_num": 29,
    "line_str": ".findSchema({\"_test::AA\", \"\"}).value();",
    "file_path": "test/mobile/op_deps/utils.cpp",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            29,
            ".findSchema({\"_test::AA\", \"\"}).value();"
        ],
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            29,
            ".findSchema({\"aten::AA\", \"\"}).value();"
        ]
    ]
},
{
    "line_num": 28,
    "line_str": "static c10::OperatorHandle op = c10::Dispatcher::singleton()",
    "file_path": "test/mobile/op_deps/utils.cpp",
    "previous_commits": [
        [
            "831f25c53bfb6dca6ac0e367a379263f3d68ebe6",
            28,
            "static c10::OperatorHandle op = c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 214,
    "line_str": "at::Tensor>(packed_weight);",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            214,
            "at::Tensor>(packed_weight);"
        ]
    ]
},
{
    "line_num": 213,
    "line_str": "std::tuple<at::Tensor, c10::optional<at::Tensor>>,",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            213,
            "std::tuple<at::Tensor, c10::optional<at::Tensor>>,"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            206,
            ".typed<std::tuple<at::Tensor, c10::optional<at::Tensor>>("
        ],
        [
            "70f375becf97151edb5d44b773072b64d504c61f",
            219,
            "std::tuple<at::Tensor, c10::optional<at::Tensor>>,"
        ],
        [
            "91c6d2e51c06aa4fcae2f37efb364e1cf1f7acd5",
            147,
            "std::tuple<at::Tensor, c10::optional<at::Tensor>>,"
        ]
    ]
},
{
    "line_num": 212,
    "line_str": "std::tie(unpacked_weight, bias) = op->call<",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            212,
            "std::tie(unpacked_weight, bias) = op->call<"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            214,
            "std::tie(unpacked_weight, bias) = op.call(packed_weight);"
        ],
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            214,
            "std::tie(unpacked_weight, bias) = op->call<"
        ]
    ]
},
{
    "line_num": 205,
    "line_str": "assert(op.has_value());",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            205,
            "assert(op.has_value());"
        ]
    ]
},
{
    "line_num": 204,
    "line_str": "auto op = Dispatcher::singleton().findSchema({unpack_fn, \"\"});",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            204,
            "auto op = Dispatcher::singleton().findSchema({unpack_fn, \"\"});"
        ]
    ]
},
{
    "line_num": 143,
    "line_str": "CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema);",
    "file_path": "torch/library.h",
    "previous_commits": [
        [
            "cb8b2f06366688a7cf0a5c472717a93856266486",
            143,
            "CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema);"
        ],
        [
            "55cdd31bd049ea5313be18239ac1b4ae53f6c0f9",
            151,
            "CppFunction(c10::KernelFunction func, c10::optional<c10::impl::CppSignature> cpp_signature, std::unique_ptr<c10::FunctionSchema> schema);"
        ],
        [
            "a894fff2656cb920ee79cf8cf5c72b7cdb5cdd01",
            127,
            "CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema);"
        ]
    ]
}
]
},{
"55cdd31bd049ea5313be18239ac1b4ae53f6c0f9": [
{
    "line_num": 38,
    "line_str": "return c10::Dispatcher::singleton()",
    "file_path": "aten/src/ATen/core/boxing/test_helpers.h",
    "previous_commits": [
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            38,
            "return c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 44,
    "line_str": "return c10::Dispatcher::singleton()",
    "file_path": "aten/src/ATen/core/boxing/test_helpers.h",
    "previous_commits": [
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            44,
            "return c10::Dispatcher::singleton()"
        ]
    ]
},
{
    "line_num": 45,
    "line_str": ".template call<Result, Args...>(op, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/boxing/impl/test_helpers.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            45,
            ".template call<Result, Args...>(op, std::forward<Args>(args)...);"
        ],
        [
            "ca20b569be556ff56ed02712547ee0c5b9123f28",
            39,
            ".template callUnboxed<Result, Args...>(op, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 51,
    "line_str": ".template callWithDispatchKey<Result, Args...>(op, dispatchKey, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/boxing/impl/test_helpers.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            51,
            ".template callWithDispatchKey<Result, Args...>(op, dispatchKey, std::forward<Args>(args)...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            45,
            ".template callUnboxedWithDispatchKey<Result, Args...>(op, dispatchKey, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 186,
    "line_str": "auto handle = op.operatorIterator_->op.registerKernel(dispatch_key, std::move(kernel), std::move(inferred_function_schema), std::move(debug));",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.cpp",
    "previous_commits": [
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            186,
            "auto handle = op.operatorIterator_->op.registerKernel(dispatch_key, std::move(kernel), std::move(inferred_function_schema), std::move(debug));"
        ]
    ]
},
{
    "line_num": 267,
    "line_str": "return c10::Dispatcher::singleton().callWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            267,
            "return c10::Dispatcher::singleton().callWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            162,
            "return c10::Dispatcher::singleton().callUnboxedWithDispatchKey<Return, Args...>(*this, dispatchKey, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 266,
    "line_str": "Return callWithDispatchKey(DispatchKey dispatchKey, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            266,
            "Return callWithDispatchKey(DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            181,
            "Return callUnboxedWithDispatchKey(DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            161,
            "Return callUnboxedWithDispatchKey(c10::optional<DispatchKey> dispatchKey, Args... args) const {"
        ]
    ]
},
{
    "line_num": 295,
    "line_str": "inline Return Dispatcher::call(const OperatorHandle& op, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            295,
            "inline Return Dispatcher::call(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            190,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "ca20b569be556ff56ed02712547ee0c5b9123f28",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "41e42c34d65f7dce5f526cdb059e860bbe4d0f36",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const {"
        ],
        [
            "88a34ef69068cf3e70155cab833e0355ce115fbf",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, Args... args) const {"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            166,
            "inline Return Dispatcher::callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const {"
        ],
        [
            "9dbee5f8e542061881f55ab967fdaa4d6cec529d",
            224,
            "inline OpKernel Dispatcher::lookup(const OperatorHandle& op, TensorTypeId dispatchKey) const {"
        ]
    ]
},
{
    "line_num": 262,
    "line_str": "return c10::Dispatcher::singleton().call<Return, Args...>(*this, std::forward<Args>(args)...);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            262,
            "return c10::Dispatcher::singleton().call<Return, Args...>(*this, std::forward<Args>(args)...);"
        ],
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            157,
            "return c10::Dispatcher::singleton().callUnboxed<Return, Args...>(*this, std::forward<Args>(args)...);"
        ]
    ]
},
{
    "line_num": 261,
    "line_str": "Return call(Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            261,
            "Return call(Args... args) const {"
        ],
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            156,
            "Return callUnboxed(Args... args) const {"
        ]
    ]
},
{
    "line_num": 289,
    "line_str": "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            289,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>("
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            213,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, args...);"
        ],
        [
            "248f6d0485bc2344e1f339d2b0572f1e02ab6515",
            211,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendFallbackNonFallthroughSet_, args...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            193,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            177,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "7b5045be9d9f15acaf93dd265deafb01f50185e2",
            180,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "3fa5917530d44213f71740e6a60293315356e4ad",
            166,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ]
    ]
},
{
    "line_num": 160,
    "line_str": "template<class Return, class... Args>",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            160,
            "template<class Return, class... Args>"
        ]
    ]
},
{
    "line_num": 287,
    "line_str": "inline Return Dispatcher::callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            287,
            "inline Return Dispatcher::callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            202,
            "inline Return Dispatcher::callUnboxedWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const {"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            182,
            "inline Return Dispatcher::callUnboxedWithDispatchKey(const OperatorHandle& op, c10::optional<DispatchKey> dispatchKey, Args... args) const {"
        ]
    ]
},
{
    "line_num": 158,
    "line_str": "}",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            158,
            "}"
        ]
    ]
},
{
    "line_num": 159,
    "line_str": "",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            159,
            ""
        ]
    ]
},
{
    "line_num": 123,
    "line_str": "Return redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            123,
            "Return redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            126,
            "Return callUnboxedRedispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const;"
        ]
    ]
},
{
    "line_num": 155,
    "line_str": "template<class Return, class... Args>",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "afdc0bd4ece5ec934be47a9902d3dc66d6488a06",
            155,
            "template<class Return, class... Args>"
        ]
    ]
},
{
    "line_num": 281,
    "line_str": "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, DispatchKeySet::FULL, args...);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            281,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, DispatchKeySet::FULL, args...);"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            213,
            "auto dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendsWithoutFallthrough_, args...);"
        ],
        [
            "248f6d0485bc2344e1f339d2b0572f1e02ab6515",
            211,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(backendFallbackNonFallthroughSet_, args...);"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            193,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            177,
            "c10::optional<DispatchKey> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "7b5045be9d9f15acaf93dd265deafb01f50185e2",
            180,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ],
        [
            "3fa5917530d44213f71740e6a60293315356e4ad",
            166,
            "c10::optional<TensorTypeId> dispatchKey = dispatchTable.dispatchKeyExtractor().getDispatchKeyUnboxed<Args...>(args...);"
        ]
    ]
},
{
    "line_num": 115,
    "line_str": "Return callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            115,
            "Return callWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "b2344b70da0842b18e56cd36f05e50a8f0622c24",
            97,
            "Return callUnboxedWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "3b47922855d94c7727a22d924d2a6b447475ee06",
            121,
            "Return callUnboxedWithDispatchKey(const OperatorHandle& op, DispatchKey dispatchKey, Args... args) const;"
        ],
        [
            "7df5dc2775e8baea4c64efafcc9efbece1e79ecc",
            106,
            "Return callUnboxedWithDispatchKey(const OperatorHandle& op, c10::optional<DispatchKey> dispatchKey, Args... args) const;"
        ]
    ]
},
{
    "line_num": 146,
    "line_str": "RegistrationHandleRAII registerImpl(OperatorName op_name, c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            146,
            "RegistrationHandleRAII registerImpl(OperatorName op_name, c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ]
    ]
},
{
    "line_num": 113,
    "line_str": "class CAFFE2_API OperatorHandle final {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "aaa8ace48642a1a5774332084161e0f93f171e1f",
            113,
            "class CAFFE2_API OperatorHandle final {"
        ]
    ]
},
{
    "line_num": 303,
    "line_str": "inline Return Dispatcher::redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            303,
            "inline Return Dispatcher::redispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            286,
            "inline Return Dispatcher::callUnboxedRedispatch(const OperatorHandle& op, DispatchKey currentDispatchKey, Args... args) const {"
        ]
    ]
},
{
    "line_num": 110,
    "line_str": "Return call(const OperatorHandle& op, Args... args) const;",
    "file_path": "aten/src/ATen/core/dispatch/Dispatcher.h",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            110,
            "Return call(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "b2344b70da0842b18e56cd36f05e50a8f0622c24",
            92,
            "Return callUnboxed(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "ca20b569be556ff56ed02712547ee0c5b9123f28",
            94,
            "Return callUnboxed(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "41e42c34d65f7dce5f526cdb059e860bbe4d0f36",
            94,
            "Return callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const;"
        ],
        [
            "88a34ef69068cf3e70155cab833e0355ce115fbf",
            94,
            "Return callUnboxed(const OperatorHandle& op, Args... args) const;"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            94,
            "Return callUnboxed(const OperatorHandle& op, TensorTypeId dispatchKey, Args... args) const;"
        ],
        [
            "9dbee5f8e542061881f55ab967fdaa4d6cec529d",
            152,
            "OpKernel lookup(const OperatorHandle& op, TensorTypeId dispatchKey) const;"
        ]
    ]
},
{
    "line_num": 82,
    "line_str": "std::list<KernelEntry>::iterator registerKernel(c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);",
    "file_path": "aten/src/ATen/core/dispatch/OperatorEntry.h",
    "previous_commits": [
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            82,
            "std::list<KernelEntry>::iterator registerKernel(c10::optional<DispatchKey> dispatch_key, KernelFunction kernel, std::unique_ptr<FunctionSchema> inferred_function_schema, std::string debug);"
        ]
    ]
},
{
    "line_num": 36,
    "line_str": "CppFunction::CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema)",
    "file_path": "aten/src/ATen/core/library.cpp",
    "previous_commits": [
        [
            "a894fff2656cb920ee79cf8cf5c72b7cdb5cdd01",
            36,
            "CppFunction::CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema)"
        ]
    ]
},
{
    "line_num": 133,
    "line_str": "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"registered by RegisterOperators\")",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.cpp",
    "previous_commits": [
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            133,
            "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"registered by RegisterOperators\")"
        ],
        [
            "9e3605de98abb969124faff96e6e90e4f4014eb6",
            100,
            "Dispatcher::singleton().registerImpl(op_name, kernel.dispatch_key, std::move(kernel.func), std::move(kernel.inferred_function_schema), \"legacy kernel from RegisterOperators\")"
        ]
    ]
},
{
    "line_num": 56,
    "line_str": "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.h",
    "previous_commits": [
        [
            "aa2862b8431e7cdb7d4d8d558e632be0fc2f8fa3",
            56,
            "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            56,
            "return std::move(*this).kernel(dispatch_key, KernelFunction::makeFromBoxedFunction(kernel_func), nullptr);"
        ]
    ]
},
{
    "line_num": 62,
    "line_str": "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.h",
    "previous_commits": [
        [
            "aa2862b8431e7cdb7d4d8d558e632be0fc2f8fa3",
            62,
            "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction<kernel_func>(), nullptr);"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            61,
            "return std::move(*this).kernel(c10::nullopt, KernelFunction::makeFromBoxedFunction(kernel_func), nullptr);"
        ]
    ]
},
{
    "line_num": 406,
    "line_str": "Options&& kernel(c10::optional<DispatchKey> dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {",
    "file_path": "aten/src/ATen/core/op_registration/op_registration.h",
    "previous_commits": [
        [
            "062ac6b472af43c9cf83d285e661e24244551f85",
            406,
            "Options&& kernel(c10::optional<DispatchKey> dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "62b06b9fae9b151b20d25c8e54ae9ae1081f23ad",
            405,
            "Options&& kernel(c10::optional<DispatchKey>&& dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "ed207b53ab43ecf141498a0b5e17473153e9351c",
            419,
            "Options&& kernel(c10::optional<TensorTypeId>&& dispatch_key, KernelFunction&& func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "9dbee5f8e542061881f55ab967fdaa4d6cec529d",
            262,
            "Options&& kernel(c10::optional<TensorTypeId>&& dispatch_key, KernelFunction* kernel_func, KernelCacheCreatorFunction&& cache_creator, void* unboxed_kernel_func, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "6063ffd055a036ea1d56e75117c7e07137e58689",
            256,
            "Options&& kernel(c10::optional<TensorTypeId>&& dispatch_key, KernelFunction* kernel_func, KernelCacheCreatorFunction&& cache_creator, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ],
        [
            "cb6be42403b6d1e8993e3d3b71ea479537911a18",
            178,
            "Options&& kernel(KernelFunction* kernel_func, KernelCacheCreatorFunction&& cache_creator, std::unique_ptr<FunctionSchema>&& inferred_function_schema) && {"
        ]
    ]
},
{
    "line_num": 1568,
    "line_str": "return c10::Dispatcher::singleton().redispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);",
    "file_path": "aten/src/ATen/core/op_registration/op_registration_test.cpp",
    "previous_commits": [
        [
            "fdc40616b2bd00d15cce8daac15c5a8741d3cab2",
            1568,
            "return c10::Dispatcher::singleton().redispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ],
        [
            "e29348f8283ffa6be5915abb46f280fce5d64ce4",
            1464,
            "return c10::Dispatcher::singleton().callUnboxedRedispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ],
        [
            "16a88e4369a12c137a0fb1f0a3d0584405a8858b",
            1461,
            "return c10::Dispatcher::singleton().callUnboxedRedispatch<Tensor, const Tensor&>(*op, c10::DispatchKey::BackendSelect, x);"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": "Tensor empty_override(IntArrayRef size, const TensorOptions & options) {",
    "file_path": "test/cpp_extensions/msnpu_extension.cpp",
    "previous_commits": [
        [
            "0a045133673fea6932ac41f008d6edf3097df115",
            17,
            "Tensor empty_override(IntArrayRef size, const TensorOptions & options) {"
        ],
        [
            "4404762d7dd955383acee92e6f06b48144a0742e",
            18,
            "Tensor zeros_override(IntArrayRef size, const TensorOptions & options) {"
        ],
        [
            "4c803f4ebd007d153dfef94d5c69588c86a1ecf5",
            18,
            "Tensor zeros_override(IntList size, const TensorOptions & options) {"
        ]
    ]
},
{
    "line_num": 219,
    "line_str": "std::tuple<at::Tensor, c10::optional<at::Tensor>>,",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "70f375becf97151edb5d44b773072b64d504c61f",
            219,
            "std::tuple<at::Tensor, c10::optional<at::Tensor>>,"
        ],
        [
            "91c6d2e51c06aa4fcae2f37efb364e1cf1f7acd5",
            147,
            "std::tuple<at::Tensor, c10::optional<at::Tensor>>,"
        ]
    ]
},
{
    "line_num": 217,
    "line_str": "assert(op.has_value());",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "70f375becf97151edb5d44b773072b64d504c61f",
            217,
            "assert(op.has_value());"
        ],
        [
            "91c6d2e51c06aa4fcae2f37efb364e1cf1f7acd5",
            145,
            "assert(op.has_value());"
        ]
    ]
},
{
    "line_num": 216,
    "line_str": "at::Tensor>(packed_weight);",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            216,
            "at::Tensor>(packed_weight);"
        ],
        [
            "363a2d9455d461c6d46442bf32febf54dda8639a",
            224,
            "at::Tensor>(*op, packed_weight);"
        ],
        [
            "423a00ad391dd95676497aeb393a6001906c8d7c",
            216,
            "at::Tensor>(packed_weight);"
        ],
        [
            "70f375becf97151edb5d44b773072b64d504c61f",
            220,
            "at::Tensor>(*op, packed_weight);"
        ],
        [
            "91c6d2e51c06aa4fcae2f37efb364e1cf1f7acd5",
            148,
            "at::Tensor>(*op, packed_weight);"
        ]
    ]
},
{
    "line_num": 214,
    "line_str": "std::tie(unpacked_weight, bias) = op->call<",
    "file_path": "torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp",
    "previous_commits": [
        [
            "5af4e766835797622b444053776254f3c94c2bf8",
            214,
            "std::tie(unpacked_weight, bias) = op->call<"
        ]
    ]
},
{
    "line_num": 127,
    "line_str": "CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema);",
    "file_path": "torch/library.h",
    "previous_commits": [
        [
            "a894fff2656cb920ee79cf8cf5c72b7cdb5cdd01",
            127,
            "CppFunction(c10::KernelFunction func, std::unique_ptr<c10::FunctionSchema> schema);"
        ]
    ]
}
]
},{
"727e77a809c8eaf358834075131524fc82d3e59f": [
{
    "line_num": 77,
    "line_str": "auto reduce_range = graph->insertConstant(false);",
    "file_path": "torch/csrc/jit/passes/quantization/insert_quant_dequant.cpp",
    "previous_commits": [
        [
            "0ed7fc581c25515d114d1d333f42e47b5e5dfbda",
            77,
            "auto reduce_range = graph->insertConstant(false);"
        ]
    ]
}
]
},{
"fe684679b06f7f2fe7a7e136ea5605c04254b652": [
{
    "line_num": 50,
    "line_str": "}",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            50,
            "}"
        ]
    ]
},
{
    "line_num": 49,
    "line_str": "throw std::runtime_error(\"Overflow when unpacking double\");",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            49,
            "throw std::runtime_error(\"Overflow when unpacking double\");"
        ]
    ]
},
{
    "line_num": 48,
    "line_str": "if (overflow != 0) {",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            48,
            "if (overflow != 0) {"
        ]
    ]
},
{
    "line_num": 47,
    "line_str": "long long value = PyLong_AsLongLongAndOverflow(obj, &overflow);",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            47,
            "long long value = PyLong_AsLongLongAndOverflow(obj, &overflow);"
        ]
    ]
},
{
    "line_num": 46,
    "line_str": "int overflow;",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            46,
            "int overflow;"
        ]
    ]
},
{
    "line_num": 45,
    "line_str": "if (PyLong_Check(obj)) {",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            45,
            "if (PyLong_Check(obj)) {"
        ]
    ]
},
{
    "line_num": 55,
    "line_str": "}",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            55,
            "}"
        ]
    ]
},
{
    "line_num": 54,
    "line_str": "return (double)value;",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            54,
            "return (double)value;"
        ]
    ]
},
{
    "line_num": 53,
    "line_str": "}",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            53,
            "}"
        ]
    ]
},
{
    "line_num": 52,
    "line_str": "throw std::runtime_error(\"Precision loss when unpacking double\");",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            52,
            "throw std::runtime_error(\"Precision loss when unpacking double\");"
        ]
    ]
},
{
    "line_num": 51,
    "line_str": "if (value > DOUBLE_INT_MAX || value < -DOUBLE_INT_MAX) {",
    "file_path": "torch/csrc/utils/python_numbers.h",
    "previous_commits": [
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            51,
            "if (value > DOUBLE_INT_MAX || value < -DOUBLE_INT_MAX) {"
        ]
    ]
}
]
},{
"7417b4c66f5b0901f206bf48b64de07384770724": []},
{
"7773a45c0d2cba1cd53d7f50b00baa7ae95ec6e4": []},
{
"5267b17a96313adab6d2d4542f8030111dc7c2ba": []},
{
"5702a28b2612a104204dd31e800faaaa09bdd458": []},
{
"d627f2b174136b720dcc99380e2b98f535d1f169": [
{
    "line_num": 23,
    "line_str": "if (iter.dtype(nargs) != c10::impl::CPPTypeToScalarType<typename traits::template arg<nargs - 1>::type>::value) {",
    "file_path": "aten/src/ATen/native/TensorIteratorDynamicCasting.h",
    "previous_commits": [
        [
            "45f32ceb4e5d4aff8d11bfe1b6d02d534846bc98",
            23,
            "if (iter.dtype(nargs) != c10::impl::CPPTypeToScalarType<typename traits::template arg<nargs - 1>::type>::value) {"
        ]
    ]
},
{
    "line_num": 34,
    "line_str": "return iter.dtype(0) != c10::impl::CPPTypeToScalarType<typename traits::result_type>::value;",
    "file_path": "aten/src/ATen/native/TensorIteratorDynamicCasting.h",
    "previous_commits": [
        [
            "45f32ceb4e5d4aff8d11bfe1b6d02d534846bc98",
            34,
            "return iter.dtype(0) != c10::impl::CPPTypeToScalarType<typename traits::result_type>::value;"
        ]
    ]
}
]
},{
"e4a3c584d51662d4c14060fc8517464fe3c12142": []},
{
"f41833957d28e91cf19685a2f13493e487c5bec9": [
{
    "line_num": 187,
    "line_str": "",
    "file_path": "aten/src/ATen/DLConvertor.cpp",
    "previous_commits": [
        [
            "095f88e0934f5503cb3d01dbb7065d3c0be8e860",
            187,
            ""
        ]
    ]
},
{
    "line_num": 192,
    "line_str": "at::device(device).dtype(stype));",
    "file_path": "aten/src/ATen/DLConvertor.cpp",
    "previous_commits": [
        [
            "f6af76ead7f03b1e75a920d93c3d2d387f5eaef7",
            192,
            "at::device(device).dtype(stype));"
        ],
        [
            "34a0604d51354c50c6aafa19f42be98fb378fcc5",
            172,
            "at::device(device_type).dtype(stype));"
        ]
    ]
},
{
    "line_num": 33,
    "line_str": "auto device = globalContext().getDeviceFromPtr(data, options.device().type());",
    "file_path": "aten/src/ATen/templates/Functions.h",
    "previous_commits": [
        [
            "edb5a1662e004a2fe02e4b5a71979a6b4f472b20",
            33,
            "auto device = globalContext().getDeviceFromPtr(data, options.device().type());"
        ]
    ]
},
{
    "line_num": 30,
    "line_str": "const TensorOptions& options = {}) {",
    "file_path": "aten/src/ATen/templates/Functions.h",
    "previous_commits": [
        [
            "f6af76ead7f03b1e75a920d93c3d2d387f5eaef7",
            30,
            "const TensorOptions& options = {}) {"
        ]
    ]
}
]
},{
"1456515f1526560822ac5b2376af5d74e96a24fc": []},
{
"63b1ae69831cd21bc4d6059a5854bc1155a152c9": []},
{
"7aec364bdf9ed7297b77e8445a6a6d4116265dde": [
{
    "line_num": 42,
    "line_str": "ensure_nonempty_size(index, i) == ensure_nonempty_size(self, i),",
    "file_path": "aten/src/ATen/native/cpu/ScatterGatherKernel.cpp",
    "previous_commits": [
        [
            "d2f66083c5b64e64355eb0fc580cfa4230bd17d8",
            42,
            "ensure_nonempty_size(index, i) == ensure_nonempty_size(self, i),"
        ]
    ]
},
{
    "line_num": 134,
    "line_str": "gather_shape_check(self, dim, index);",
    "file_path": "aten/src/ATen/native/cpu/ScatterGatherKernel.cpp",
    "previous_commits": [
        [
            "1d52530855e2afb988685df3a5eadfcebee2bd79",
            134,
            "gather_shape_check(self, dim, index);"
        ],
        [
            "d2f66083c5b64e64355eb0fc580cfa4230bd17d8",
            165,
            "gather_shape_check(self, dim, index);"
        ]
    ]
},
{
    "line_num": 32,
    "line_str": "void gather_shape_check(const Tensor& self, int64_t dim, const Tensor& index) {",
    "file_path": "aten/src/ATen/native/cpu/ScatterGatherKernel.cpp",
    "previous_commits": [
        [
            "d2f66083c5b64e64355eb0fc580cfa4230bd17d8",
            32,
            "void gather_shape_check(const Tensor& self, int64_t dim, const Tensor& index) {"
        ]
    ]
},
{
    "line_num": 44,
    "line_str": "\" get \", ensure_nonempty_size(self, i),",
    "file_path": "aten/src/ATen/native/cpu/ScatterGatherKernel.cpp",
    "previous_commits": [
        [
            "d2f66083c5b64e64355eb0fc580cfa4230bd17d8",
            44,
            "\" get \", ensure_nonempty_size(self, i),"
        ]
    ]
},
{
    "line_num": 43,
    "line_str": "\"Size does not match at dimension \", i,",
    "file_path": "aten/src/ATen/native/cpu/ScatterGatherKernel.cpp",
    "previous_commits": [
        [
            "d2f66083c5b64e64355eb0fc580cfa4230bd17d8",
            43,
            "\"Size does not match at dimension \", i,"
        ]
    ]
}
]
},{
"006f1a32f85d2225558b1f8ce1b46bd51073f355": [
{
    "line_num": 27,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            27,
            ""
        ]
    ]
},
{
    "line_num": 23,
    "line_str": "static void deleter(void* pointer) {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            23,
            "static void deleter(void* pointer) {"
        ]
    ]
},
{
    "line_num": 52,
    "line_str": "};",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            52,
            "};"
        ]
    ]
},
{
    "line_num": 19,
    "line_str": "public:",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            19,
            "public:"
        ]
    ]
},
{
    "line_num": 48,
    "line_str": "union Cast final {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            48,
            "union Cast final {"
        ]
    ]
},
{
    "line_num": 44,
    "line_str": "private:",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            44,
            "private:"
        ]
    ]
},
{
    "line_num": 40,
    "line_str": "virtual DeleterFnPtr raw_deleter() const override {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            40,
            "virtual DeleterFnPtr raw_deleter() const override {"
        ]
    ]
},
{
    "line_num": 7,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            7,
            ""
        ]
    ]
},
{
    "line_num": 36,
    "line_str": "at::Device(DeviceType::CPU),",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            36,
            "at::Device(DeviceType::CPU),"
        ]
    ]
},
{
    "line_num": 3,
    "line_str": "#include <c10/core/CPUAllocator.h>",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            3,
            "#include <c10/core/CPUAllocator.h>"
        ]
    ]
},
{
    "line_num": 32,
    "line_str": "return {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            32,
            "return {"
        ]
    ]
},
{
    "line_num": 28,
    "line_str": "virtual DataPtr allocate(size_t nbytes) const override {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            28,
            "virtual DataPtr allocate(size_t nbytes) const override {"
        ]
    ]
},
{
    "line_num": 24,
    "line_str": "const Cast memory{pointer};",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            24,
            "const Cast memory{pointer};"
        ]
    ]
},
{
    "line_num": 53,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            53,
            ""
        ]
    ]
},
{
    "line_num": 20,
    "line_str": "GuardingAllocator() = default;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            20,
            "GuardingAllocator() = default;"
        ]
    ]
},
{
    "line_num": 49,
    "line_str": "void * const as_void_ptr;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            49,
            "void * const as_void_ptr;"
        ]
    ]
},
{
    "line_num": 16,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            16,
            ""
        ]
    ]
},
{
    "line_num": 45,
    "line_str": "static constexpr uint32_t kPreGuardBytes = PreGuardBytes;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            45,
            "static constexpr uint32_t kPreGuardBytes = PreGuardBytes;"
        ]
    ]
},
{
    "line_num": 41,
    "line_str": "return deleter;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            41,
            "return deleter;"
        ]
    ]
},
{
    "line_num": 37,
    "line_str": "};",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            37,
            "};"
        ]
    ]
},
{
    "line_num": 4,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            4,
            ""
        ]
    ]
},
{
    "line_num": 33,
    "line_str": "memory.as_void_ptr,",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            33,
            "memory.as_void_ptr,"
        ]
    ]
},
{
    "line_num": 29,
    "line_str": "Cast memory{c10::alloc_cpu(kPreGuardBytes + nbytes + kPostGuardBytes)};",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            29,
            "Cast memory{c10::alloc_cpu(kPreGuardBytes + nbytes + kPostGuardBytes)};"
        ]
    ]
},
{
    "line_num": 25,
    "line_str": "c10::free_cpu(memory.as_byte_ptr - kPreGuardBytes);",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            25,
            "c10::free_cpu(memory.as_byte_ptr - kPreGuardBytes);"
        ]
    ]
},
{
    "line_num": 54,
    "line_str": "} // namespace native",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            54,
            "} // namespace native"
        ]
    ]
},
{
    "line_num": 21,
    "line_str": "virtual ~GuardingAllocator() override = default;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            21,
            "virtual ~GuardingAllocator() override = default;"
        ]
    ]
},
{
    "line_num": 50,
    "line_str": "uint8_t * as_byte_ptr;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            50,
            "uint8_t * as_byte_ptr;"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": "template <uint32_t PreGuardBytes, uint32_t PostGuardBytes>",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            17,
            "template <uint32_t PreGuardBytes, uint32_t PostGuardBytes>"
        ]
    ]
},
{
    "line_num": 46,
    "line_str": "static constexpr uint32_t kPostGuardBytes = PostGuardBytes;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            46,
            "static constexpr uint32_t kPostGuardBytes = PostGuardBytes;"
        ]
    ]
},
{
    "line_num": 42,
    "line_str": "}",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            42,
            "}"
        ]
    ]
},
{
    "line_num": 38,
    "line_str": "}",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            38,
            "}"
        ]
    ]
},
{
    "line_num": 5,
    "line_str": "namespace at {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            5,
            "namespace at {"
        ]
    ]
},
{
    "line_num": 34,
    "line_str": "memory.as_void_ptr,",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            34,
            "memory.as_void_ptr,"
        ]
    ]
},
{
    "line_num": 1,
    "line_str": "#pragma once",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            1,
            "#pragma once"
        ]
    ]
},
{
    "line_num": 30,
    "line_str": "memory.as_byte_ptr += kPreGuardBytes;",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            30,
            "memory.as_byte_ptr += kPreGuardBytes;"
        ]
    ]
},
{
    "line_num": 26,
    "line_str": "}",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            26,
            "}"
        ]
    ]
},
{
    "line_num": 55,
    "line_str": "} // namespace at",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            55,
            "} // namespace at"
        ]
    ]
},
{
    "line_num": 22,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            22,
            ""
        ]
    ]
},
{
    "line_num": 51,
    "line_str": "};",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            51,
            "};"
        ]
    ]
},
{
    "line_num": 18,
    "line_str": "class GuardingAllocator final : public at::Allocator {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            18,
            "class GuardingAllocator final : public at::Allocator {"
        ]
    ]
},
{
    "line_num": 47,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            47,
            ""
        ]
    ]
},
{
    "line_num": 43,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            43,
            ""
        ]
    ]
},
{
    "line_num": 39,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            39,
            ""
        ]
    ]
},
{
    "line_num": 6,
    "line_str": "namespace native {",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            6,
            "namespace native {"
        ]
    ]
},
{
    "line_num": 35,
    "line_str": "&deleter,",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            35,
            "&deleter,"
        ]
    ]
},
{
    "line_num": 2,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            2,
            ""
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "",
    "file_path": "aten/src/ATen/native/utils/Allocator.h",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            31,
            ""
        ]
    ]
},
{
    "line_num": 46,
    "line_str": "if ((allocator == guarding_allocator) && input.is_contiguous(memory_format)) {",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "d0ce94d20ee13aecc87490a5a710da57fb4abb91",
            46,
            "if ((allocator == guarding_allocator) && input.is_contiguous(memory_format)) {"
        ]
    ]
},
{
    "line_num": 13,
    "line_str": "return &allocator;",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            13,
            "return &allocator;"
        ]
    ]
},
{
    "line_num": 12,
    "line_str": "static GuardingAllocator<0u, XNN_EXTRA_BYTES> allocator;",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            12,
            "static GuardingAllocator<0u, XNN_EXTRA_BYTES> allocator;"
        ],
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            15,
            "static GuardingAllocator<0u, XNN_EXTRA_BYTES> allocator;"
        ]
    ]
},
{
    "line_num": 11,
    "line_str": "GuardingAllocator<0u, XNN_EXTRA_BYTES>* get_guarding_allocator() {",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            11,
            "GuardingAllocator<0u, XNN_EXTRA_BYTES>* get_guarding_allocator() {"
        ],
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            15,
            "static GuardingAllocator<0u, XNN_EXTRA_BYTES> allocator;"
        ]
    ]
},
{
    "line_num": 14,
    "line_str": "}",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            14,
            "}"
        ]
    ]
},
{
    "line_num": 41,
    "line_str": "const auto* const guarding_allocator = get_guarding_allocator();",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "d0ce94d20ee13aecc87490a5a710da57fb4abb91",
            41,
            "const auto* const guarding_allocator = get_guarding_allocator();"
        ],
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            40,
            "const auto* guarding_allocator = get_guarding_allocator();"
        ]
    ]
},
{
    "line_num": 4,
    "line_str": "#include <ATen/native/utils/Allocator.h>",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            4,
            "#include <ATen/native/utils/Allocator.h>"
        ]
    ]
},
{
    "line_num": 20,
    "line_str": "auto* const allocator_ptr = get_guarding_allocator();",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "d0ce94d20ee13aecc87490a5a710da57fb4abb91",
            20,
            "auto* const allocator_ptr = get_guarding_allocator();"
        ],
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            20,
            "auto* allocator_ptr = get_guarding_allocator();"
        ]
    ]
},
{
    "line_num": 15,
    "line_str": "",
    "file_path": "aten/src/ATen/native/xnnpack/Factory.cpp",
    "previous_commits": [
        [
            "4c30fc7238d382b4f5f15a7079b6755e3828e8fa",
            15,
            ""
        ]
    ]
},
{
    "line_num": 523,
    "line_str": "",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            523,
            ""
        ]
    ]
},
{
    "line_num": 522,
    "line_str": "#endif",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            522,
            "#endif"
        ]
    ]
},
{
    "line_num": 521,
    "line_str": "",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            521,
            ""
        ]
    ]
},
{
    "line_num": 8,
    "line_str": "#include <ATen/native/utils/Allocator.h>",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            8,
            "#include <ATen/native/utils/Allocator.h>"
        ]
    ]
},
{
    "line_num": 484,
    "line_str": "",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            484,
            ""
        ]
    ]
},
{
    "line_num": 483,
    "line_str": "using QAllocator = native::GuardingAllocator<8u, 0u>;",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "6aecfd1e804f2be68df6557c43adbe1f2234fe91",
            483,
            "using QAllocator = native::GuardingAllocator<8u, 0u>;"
        ]
    ]
},
{
    "line_num": 515,
    "line_str": "",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            515,
            ""
        ]
    ]
},
{
    "line_num": 534,
    "line_str": "allocator = &qallocator;",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "4bbc49f53ac6a8096ecdfa6c7d46f3dcf0d2c93d",
            534,
            "allocator = &qallocator;"
        ],
        [
            "97d3a8495deb634267e2a5e4c4517647d0567c44",
            87,
            "allocator = &qallocator;"
        ],
        [
            "49b10c58a325da2d18086705bd04ab9bac49ba54",
            534,
            "allocator = &qallocator;"
        ],
        [
            "f6daa6220e2689e5a964f365e8c7167b11b33815",
            87,
            "allocator = &qallocator;"
        ],
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            536,
            "allocator = &qallocator;"
        ]
    ]
},
{
    "line_num": 533,
    "line_str": "static QAllocator qallocator;",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "4bbc49f53ac6a8096ecdfa6c7d46f3dcf0d2c93d",
            533,
            "static QAllocator qallocator;"
        ],
        [
            "97d3a8495deb634267e2a5e4c4517647d0567c44",
            86,
            "static QAllocator qallocator;"
        ],
        [
            "49b10c58a325da2d18086705bd04ab9bac49ba54",
            533,
            "static QAllocator qallocator;"
        ],
        [
            "f6daa6220e2689e5a964f365e8c7167b11b33815",
            86,
            "static QAllocator qallocator;"
        ],
        [
            "e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34",
            535,
            "static QAllocator qallocator;"
        ]
    ]
}
]
},{
"76f952887835e3c14eeb3b56a993f2082cd9888d": [
{
    "line_num": 99,
    "line_str": "ctc->destroy();",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            99,
            "ctc->destroy();"
        ]
    ]
},
{
    "line_num": 97,
    "line_str": "graph_->insertNode(mtc);",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            97,
            "graph_->insertNode(mtc);"
        ]
    ]
},
{
    "line_num": 96,
    "line_str": "auto mtc = graph_->create(prim::Store, {lv.maxTripCount()}, 0);",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            96,
            "auto mtc = graph_->create(prim::Store, {lv.maxTripCount()}, 0);"
        ]
    ]
},
{
    "line_num": 95,
    "line_str": "graph_->insertNode(ctc);",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            95,
            "graph_->insertNode(ctc);"
        ]
    ]
},
{
    "line_num": 94,
    "line_str": "auto ctc = graph_->create(prim::Store, {lv.currentTripCount()}, 0);",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            94,
            "auto ctc = graph_->create(prim::Store, {lv.currentTripCount()}, 0);"
        ]
    ]
},
{
    "line_num": 91,
    "line_str": "WithInsertPoint guard(*lv.bodyBlock()->nodes().end());",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            91,
            "WithInsertPoint guard(*lv.bodyBlock()->nodes().end());"
        ]
    ]
},
{
    "line_num": 100,
    "line_str": "mtc->destroy();",
    "file_path": "torch/csrc/jit/passes/liveness.cpp",
    "previous_commits": [
        [
            "118f1c633b2f233cf914bdff7e00f2fde2e7d8b4",
            100,
            "mtc->destroy();"
        ]
    ]
}
]
},{
"bede7d999523d02e636a8981c0dff233b67f1a62": [
{
    "line_num": 23,
    "line_str": "AT_ASSERT(size_t(kind) < sizeof(names) / sizeof(AttributeKind));",
    "file_path": "torch/csrc/jit/attributes.h",
    "previous_commits": [
        [
            "47bf30661fb45f106e2b609495d82af463513b99",
            23,
            "AT_ASSERT(size_t(kind) < sizeof(names) / sizeof(AttributeKind));"
        ]
    ]
}
]
},{
"8544591f5a312980c353e9ff2db8a357943a3db5": [
{
    "line_num": 24,
    "line_str": "DeviceThreadHandlePool<cusparseHandle_t, createCusparseHandle, destroyCusparseHandle> pool;",
    "file_path": "aten/src/ATen/cuda/CuSparseHandlePool.cpp",
    "previous_commits": [
        [
            "2032482eb97f0b650f11fd117791c9bc62125dee",
            24,
            "DeviceThreadHandlePool<cusparseHandle_t, createCusparseHandle, destroyCusparseHandle> pool;"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "thread_local std::unique_ptr<decltype(pool)::PoolWindow> myPoolWindow;",
    "file_path": "aten/src/ATen/cuda/CuSparseHandlePool.cpp",
    "previous_commits": [
        [
            "2032482eb97f0b650f11fd117791c9bc62125dee",
            31,
            "thread_local std::unique_ptr<decltype(pool)::PoolWindow> myPoolWindow;"
        ]
    ]
},
{
    "line_num": 40,
    "line_str": "myPoolWindow.reset(pool.newPoolWindow());",
    "file_path": "aten/src/ATen/cuda/CuSparseHandlePool.cpp",
    "previous_commits": [
        [
            "2032482eb97f0b650f11fd117791c9bc62125dee",
            40,
            "myPoolWindow.reset(pool.newPoolWindow());"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "thread_local std::unique_ptr<decltype(pool)::PoolWindow> myPoolWindow;",
    "file_path": "aten/src/ATen/cuda/CublasHandlePool.cpp",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            31,
            "thread_local std::unique_ptr<decltype(pool)::PoolWindow> myPoolWindow;"
        ]
    ]
},
{
    "line_num": 40,
    "line_str": "myPoolWindow.reset(pool.newPoolWindow());",
    "file_path": "aten/src/ATen/cuda/CublasHandlePool.cpp",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            40,
            "myPoolWindow.reset(pool.newPoolWindow());"
        ]
    ]
},
{
    "line_num": 24,
    "line_str": "DeviceThreadHandlePool<cublasHandle_t, createCublasHandle, destroyCublasHandle> pool;",
    "file_path": "aten/src/ATen/cuda/CublasHandlePool.cpp",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            24,
            "DeviceThreadHandlePool<cublasHandle_t, createCublasHandle, destroyCublasHandle> pool;"
        ]
    ]
},
{
    "line_num": 29,
    "line_str": "struct DeviceThreadHandlePool {",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            29,
            "struct DeviceThreadHandlePool {"
        ]
    ]
},
{
    "line_num": 125,
    "line_str": "parent.available_handles[d_h.first].push_back(d_h.second);",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            125,
            "parent.available_handles[d_h.first].push_back(d_h.second);"
        ]
    ]
},
{
    "line_num": 123,
    "line_str": "std::lock_guard<std::mutex> guard(parent.mutex);",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            123,
            "std::lock_guard<std::mutex> guard(parent.mutex);"
        ]
    ]
},
{
    "line_num": 87,
    "line_str": "PoolWindow(DeviceThreadHandlePool &parent): parent(parent) {}",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            87,
            "PoolWindow(DeviceThreadHandlePool &parent): parent(parent) {}"
        ]
    ]
},
{
    "line_num": 85,
    "line_str": "DeviceThreadHandlePool &parent;",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            85,
            "DeviceThreadHandlePool &parent;"
        ]
    ]
},
{
    "line_num": 110,
    "line_str": "my_handles[device] = parent.created_handles[device].back().handle;",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            110,
            "my_handles[device] = parent.created_handles[device].back().handle;"
        ]
    ]
},
{
    "line_num": 109,
    "line_str": "parent.created_handles[device].emplace_back(true /*create*/);",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            109,
            "parent.created_handles[device].emplace_back(true /*create*/);"
        ]
    ]
},
{
    "line_num": 137,
    "line_str": "return new PoolWindow(*this);",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            137,
            "return new PoolWindow(*this);"
        ]
    ]
},
{
    "line_num": 103,
    "line_str": "parent.available_handles[device].pop_back();",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            103,
            "parent.available_handles[device].pop_back();"
        ]
    ]
},
{
    "line_num": 102,
    "line_str": "my_handles[device] = parent.available_handles[device].back();",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            102,
            "my_handles[device] = parent.available_handles[device].back();"
        ]
    ]
},
{
    "line_num": 100,
    "line_str": "if(parent.available_handles[device].size() > 0)",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            100,
            "if(parent.available_handles[device].size() > 0)"
        ]
    ]
},
{
    "line_num": 98,
    "line_str": "std::lock_guard<std::mutex> guard(parent.mutex);",
    "file_path": "aten/src/ATen/cuda/detail/DeviceThreadHandles.h",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            98,
            "std::lock_guard<std::mutex> guard(parent.mutex);"
        ]
    ]
},
{
    "line_num": 41,
    "line_str": "myPoolWindow.reset(pool.newPoolWindow());",
    "file_path": "aten/src/ATen/cudnn/Handle.cpp",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            41,
            "myPoolWindow.reset(pool.newPoolWindow());"
        ],
        [
            "2dd71b18c4bfc07bc07cafbd14e83e23add9e88f",
            150,
            "myPoolWindow.reset(new PoolWindow());"
        ]
    ]
},
{
    "line_num": 24,
    "line_str": "at::cuda::DeviceThreadHandlePool<cudnnHandle_t, createCuDNNHandle, destroyCuDNNHandle> pool;",
    "file_path": "aten/src/ATen/cudnn/Handle.cpp",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            24,
            "at::cuda::DeviceThreadHandlePool<cudnnHandle_t, createCuDNNHandle, destroyCuDNNHandle> pool;"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "thread_local std::unique_ptr<decltype(pool)::PoolWindow> myPoolWindow;",
    "file_path": "aten/src/ATen/cudnn/Handle.cpp",
    "previous_commits": [
        [
            "02921e79852e8530911ff89a4beaf7e151c0e8d3",
            31,
            "thread_local std::unique_ptr<decltype(pool)::PoolWindow> myPoolWindow;"
        ],
        [
            "2dd71b18c4bfc07bc07cafbd14e83e23add9e88f",
            140,
            "thread_local std::unique_ptr<PoolWindow> myPoolWindow;"
        ],
        [
            "e313f1a7bf7dfef4acc081436c0f00bc3bbd9ed5",
            139,
            "thread_local PoolWindow myPoolWindow;"
        ]
    ]
}
]
},{
"7487b2a18498d3697a2fc0f1728041fa88ffeb73": [
{
    "line_num": 446,
    "line_str": ".template data<int64_t>();",
    "file_path": "caffe2/operators/feature_maps_ops.h",
    "previous_commits": [
        [
            "664fe34e0a28318947edaa562247be7b583c1ee7",
            446,
            ".template data<int64_t>();"
        ]
    ]
},
{
    "line_num": 445,
    "line_str": "const int64_t* inKeysData = Input(kNumTensorsPerInput * inputIndex + 1)",
    "file_path": "caffe2/operators/feature_maps_ops.h",
    "previous_commits": [
        [
            "664fe34e0a28318947edaa562247be7b583c1ee7",
            445,
            "const int64_t* inKeysData = Input(kNumTensorsPerInput * inputIndex + 1)"
        ]
    ]
}
]
},{
"8269c4f3d30ad950a873d900f7de0880cdd38878": []},
{
"8291e06f8fb14a09e6c3b7a740a182250069242c": [
{
    "line_num": 78,
    "line_str": "throw TypeError(",
    "file_path": "torch/csrc/utils/tensor_numpy.cpp",
    "previous_commits": [
        [
            "2471ddc96c56162861f41f3b6b772b4b4e773ea7",
            78,
            "throw TypeError("
        ],
        [
            "65b00aa5972e23b2a70aa60dec5125671a3d7153",
            56,
            "throw TypeError("
        ],
        [
            "d0cabbde74014a4695d07ca464a21ce7d4a148b8",
            126,
            "throw TypeError("
        ]
    ]
},
{
    "line_num": 85,
    "line_str": "\"convert the tensor to a strided layout first.\", tensor.layout());",
    "file_path": "torch/csrc/utils/tensor_numpy.cpp",
    "previous_commits": [
        [
            "2471ddc96c56162861f41f3b6b772b4b4e773ea7",
            85,
            "\"convert the tensor to a strided layout first.\", tensor.layout());"
        ]
    ]
},
{
    "line_num": 84,
    "line_str": "\"can't convert %s layout tensor to numpy.\"",
    "file_path": "torch/csrc/utils/tensor_numpy.cpp",
    "previous_commits": [
        [
            "2471ddc96c56162861f41f3b6b772b4b4e773ea7",
            84,
            "\"can't convert %s layout tensor to numpy.\""
        ]
    ]
},
{
    "line_num": 80,
    "line_str": "\"copy the tensor to host memory first.\", tensor.device().type());",
    "file_path": "torch/csrc/utils/tensor_numpy.cpp",
    "previous_commits": [
        [
            "2471ddc96c56162861f41f3b6b772b4b4e773ea7",
            80,
            "\"copy the tensor to host memory first.\", tensor.device().type());"
        ],
        [
            "65b00aa5972e23b2a70aa60dec5125671a3d7153",
            58,
            "\"copy the tensor to host memory first.\");"
        ],
        [
            "d0cabbde74014a4695d07ca464a21ce7d4a148b8",
            128,
            "\"copy the tensor to host memory first.\");"
        ]
    ]
},
{
    "line_num": 79,
    "line_str": "\"can't convert %s device type tensor to numpy. Use Tensor.cpu() to \"",
    "file_path": "torch/csrc/utils/tensor_numpy.cpp",
    "previous_commits": [
        [
            "2471ddc96c56162861f41f3b6b772b4b4e773ea7",
            79,
            "\"can't convert %s device type tensor to numpy. Use Tensor.cpu() to \""
        ],
        [
            "65b00aa5972e23b2a70aa60dec5125671a3d7153",
            57,
            "\"can't convert CUDA tensor to numpy. Use Tensor.cpu() to \""
        ],
        [
            "d0cabbde74014a4695d07ca464a21ce7d4a148b8",
            127,
            "\"can't convert CUDA tensor to numpy. Use Tensor.cpu() to \""
        ]
    ]
}
]
},{
"60339a38eded68eeef91f84734b4d665ddf4e080": [
{
    "line_num": 354,
    "line_str": "int64_t view_d = newshape.size() - 1;",
    "file_path": "aten/src/ATen/TensorUtils.cpp",
    "previous_commits": [
        [
            "a03205ed66fb48f04580867fb7af6f5ff4093c86",
            354,
            "int64_t view_d = newshape.size() - 1;"
        ]
    ]
}
]
},{
"a64d0ffe81b250889a3e6670daa9c7d07d946e32": []},
{
"63170431f975e6ec1d5f612b9cafafeefb45ac2a": [
{
    "line_num": 715,
    "line_str": "self->getClassType()->getMethod(\"__getstate__\")->ensure_defined();",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            715,
            "self->getClassType()->getMethod(\"__getstate__\")->ensure_defined();"
        ]
    ]
},
{
    "line_num": 713,
    "line_str": "static TypePtr getTypeForSetStateArg(const Self* self) {",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            713,
            "static TypePtr getTypeForSetStateArg(const Self* self) {"
        ]
    ]
},
{
    "line_num": 744,
    "line_str": "\"Expected 2 arguments for __setstate__, got: \",",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            744,
            "\"Expected 2 arguments for __setstate__, got: \","
        ]
    ]
},
{
    "line_num": 743,
    "line_str": "numDeclParams,",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            743,
            "numDeclParams,"
        ]
    ]
},
{
    "line_num": 742,
    "line_str": "TORCH_CHECK(",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            742,
            "TORCH_CHECK("
        ]
    ]
},
{
    "line_num": 745,
    "line_str": "numDeclParams);",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            745,
            "numDeclParams);"
        ]
    ]
},
{
    "line_num": 797,
    "line_str": "const auto& inferredStateType = getTypeForSetStateArg(self);",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "77c08aa46c3f3460b95b89cbe357b99180bc824d",
            797,
            "const auto& inferredStateType = getTypeForSetStateArg(self);"
        ]
    ]
}
]
},{
"e133d8be3b9b2aeff3eb9314b2d6b4cb2ad96d34": [
{
    "line_num": 36,
    "line_str": "auto* allocator = at::getCPUAllocator();",
    "file_path": "aten/src/ATen/quantized/Quantizer.cpp",
    "previous_commits": [
        [
            "dfcd7b0185d479f186ddb100c761f4df3495f8e8",
            36,
            "auto* allocator = at::getCPUAllocator();"
        ]
    ]
}
]
},{
"ddff014b79303e5239d5cb876ba97143cad6405a": []},
{
"331e09eca44031ed11b13f1813b84f53d879727f": [
{
    "line_num": 223,
    "line_str": "",
    "file_path": "torch/lib/c10d/FileStore.cpp",
    "previous_commits": [
        [
            "d5e77fb058f20470fe08d5ffee6446534da5516f",
            223,
            ""
        ]
    ]
},
{
    "line_num": 246,
    "line_str": "break;",
    "file_path": "torch/lib/c10d/FileStore.cpp",
    "previous_commits": [
        [
            "97036d3c3043b99b9015bf44f9a58eb14f106a80",
            246,
            "break;"
        ]
    ]
},
{
    "line_num": 250,
    "line_str": "return cache_[regKey];",
    "file_path": "torch/lib/c10d/FileStore.cpp",
    "previous_commits": [
        [
            "97036d3c3043b99b9015bf44f9a58eb14f106a80",
            250,
            "return cache_[regKey];"
        ],
        [
            "d5e77fb058f20470fe08d5ffee6446534da5516f",
            224,
            "return cache_[key];"
        ]
    ]
}
]
},{
"136bb07a93b779acbc84ff341bc397551a8cfcc2": []},
{
"882b2abb804b8993eb089486ce536a5dc03dd8f0": [
{
    "line_num": 1123,
    "line_str": "<< (siv ? siv->getValue()->type()->python_str() : siv->kind());",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "d43480d6d16f1a9009ac0d39d394e61c5e831d27",
            1123,
            "<< (siv ? siv->getValue()->type()->python_str() : siv->kind());"
        ]
    ]
},
{
    "line_num": 1122,
    "line_str": "<< \"iterator expression is expected to be a list, iterable, or range, found \"",
    "file_path": "torch/csrc/jit/script/compiler.cpp",
    "previous_commits": [
        [
            "d43480d6d16f1a9009ac0d39d394e61c5e831d27",
            1122,
            "<< \"iterator expression is expected to be a list, iterable, or range, found \""
        ],
        [
            "2ad2b2c7b10aa00822164c61845d910917d91ff4",
            982,
            "<< \"iterator expression is expected to be a list\";"
        ]
    ]
}
]
},{
"efd933dd012c1d46c7c99fb38bc7db261dbf767e": [
{
    "line_num": 181,
    "line_str": "int numReady = ::poll(&pfd, 1, timeout.count());",
    "file_path": "torch/lib/c10d/Utils.cpp",
    "previous_commits": [
        [
            "0d27d2686c036757baa068ec36da5e846a93b703",
            181,
            "int numReady = ::poll(&pfd, 1, timeout.count());"
        ]
    ]
},
{
    "line_num": 186,
    "line_str": "throw std::runtime_error(\"connect() timed out\");",
    "file_path": "torch/lib/c10d/Utils.cpp",
    "previous_commits": [
        [
            "0d27d2686c036757baa068ec36da5e846a93b703",
            186,
            "throw std::runtime_error(\"connect() timed out\");"
        ]
    ]
}
]
},{
"ec8e75ea92ae2b5ea73b4aeb3ec7cb39e9f95db9": []},
{
"c845984271a551ac1c61b9eb06a17fb57aafbd7e": [
{
    "line_num": 9,
    "line_str": "for (int i = blockIdx.x * blockDim.x + threadIdx.x; i < (n); i += blockDim.x * gridDim.x)",
    "file_path": "aten/src/ATen/cuda/detail/KernelUtils.h",
    "previous_commits": [
        [
            "43b151224e5487eea00c7ce4e0efd442ee623715",
            9,
            "for (int i = blockIdx.x * blockDim.x + threadIdx.x; i < (n); i += blockDim.x * gridDim.x)"
        ]
    ]
},
{
    "line_num": 6,
    "line_str": "for (int i = blockIdx.x * blockDim.x + threadIdx.x; i < (n); i += blockDim.x * gridDim.x)",
    "file_path": "common.h",
    "previous_commits": [
        [
            "177251677d2ce82db5d7a9499c185fc5e217826c",
            6,
            "for (int i = blockIdx.x * blockDim.x + threadIdx.x; i < (n); i += blockDim.x * gridDim.x)"
        ]
    ]
},
{
    "line_num": 5,
    "line_str": "#define CUDA_KERNEL_LOOP(i, n) \\",
    "file_path": "common.h",
    "previous_commits": [
        [
            "177251677d2ce82db5d7a9499c185fc5e217826c",
            5,
            "#define CUDA_KERNEL_LOOP(i, n) \\"
        ]
    ]
},
{
    "line_num": 9,
    "line_str": "",
    "file_path": "common.h",
    "previous_commits": [
        [
            "3a22385a9f949a58b307d164c554e64f3c38bde5",
            9,
            ""
        ]
    ]
}
]
},{
"99dea08e60f07ba3117b810e37f370d0e87dee4e": [
{
    "line_num": 204,
    "line_str": "(char*)tensors[0].storage().data<signed char>(), tensors[0].numel()));",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            204,
            "(char*)tensors[0].storage().data<signed char>(), tensors[0].numel()));"
        ]
    ]
},
{
    "line_num": 43,
    "line_str": "MessageType type = MessageType(miscItems[1]);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            43,
            "MessageType type = MessageType(miscItems[1]);"
        ]
    ]
},
{
    "line_num": 171,
    "line_str": "serialize(work.message_, ss);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            171,
            "serialize(work.message_, ss);"
        ]
    ]
},
{
    "line_num": 167,
    "line_str": "workConsumeCV_.notify_one();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            167,
            "workConsumeCV_.notify_one();"
        ]
    ]
},
{
    "line_num": 163,
    "line_str": "auto work = std::move(sendQueue_.front());",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            163,
            "auto work = std::move(sendQueue_.front());"
        ]
    ]
},
{
    "line_num": 97,
    "line_str": "lock.unlock();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            97,
            "lock.unlock();"
        ]
    ]
},
{
    "line_num": 159,
    "line_str": "workProduceCV_.wait(lock);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            159,
            "workProduceCV_.wait(lock);"
        ]
    ]
},
{
    "line_num": 93,
    "line_str": "enqueue(SendWork(dst, Message({}, {}, MessageType::SHUTDOWN)));",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            93,
            "enqueue(SendWork(dst, Message({}, {}, MessageType::SHUTDOWN)));"
        ]
    ]
},
{
    "line_num": 221,
    "line_str": "}",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            221,
            "}"
        ]
    ]
},
{
    "line_num": 155,
    "line_str": "std::unique_lock<std::mutex> lock(sendQueueMutex_);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            155,
            "std::unique_lock<std::mutex> lock(sendQueueMutex_);"
        ]
    ]
},
{
    "line_num": 217,
    "line_str": "} else if (message.isShutdown()) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            217,
            "} else if (message.isShutdown()) {"
        ]
    ]
},
{
    "line_num": 184,
    "line_str": "pg_->send(payload, work.dstRank_, work.dstRank_ /* channelTag */)->wait();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            184,
            "pg_->send(payload, work.dstRank_, work.dstRank_ /* channelTag */)->wait();"
        ]
    ]
},
{
    "line_num": 23,
    "line_str": "tensors.push_back(torch::tensor(",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            23,
            "tensors.push_back(torch::tensor("
        ]
    ]
},
{
    "line_num": 213,
    "line_str": "std::lock_guard<std::mutex> lock{futureMutex_};",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            213,
            "std::lock_guard<std::mutex> lock{futureMutex_};"
        ]
    ]
},
{
    "line_num": 180,
    "line_str": "};",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            180,
            "};"
        ]
    ]
},
{
    "line_num": 147,
    "line_str": "sendQueue_.emplace_back(std::move(work));",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            147,
            "sendQueue_.emplace_back(std::move(work));"
        ]
    ]
},
{
    "line_num": 209,
    "line_str": "cb_(names_[srcRank], std::move(message), *this);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            209,
            "cb_(names_[srcRank], std::move(message), *this);"
        ]
    ]
},
{
    "line_num": 205,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            205,
            ""
        ]
    ]
},
{
    "line_num": 172,
    "line_str": "std::string str = ss.str();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            172,
            "std::string str = ss.str();"
        ]
    ]
},
{
    "line_num": 208,
    "line_str": "if (message.isRequest()) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            208,
            "if (message.isRequest()) {"
        ]
    ]
},
{
    "line_num": 36,
    "line_str": "auto miscTensor = std::move(tensors.back());",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            36,
            "auto miscTensor = std::move(tensors.back());"
        ]
    ]
},
{
    "line_num": 164,
    "line_str": "sendQueue_.pop_front();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            164,
            "sendQueue_.pop_front();"
        ]
    ]
},
{
    "line_num": 98,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            98,
            ""
        ]
    ]
},
{
    "line_num": 193,
    "line_str": "std::vector<torch::Tensor> preamble = {torch::empty({2}, {torch::kInt64})};",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            193,
            "std::vector<torch::Tensor> preamble = {torch::empty({2}, {torch::kInt64})};"
        ]
    ]
},
{
    "line_num": 160,
    "line_str": "continue;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            160,
            "continue;"
        ]
    ]
},
{
    "line_num": 94,
    "line_str": "std::unique_lock<std::mutex> lock(sendQueueMutex_);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            94,
            "std::unique_lock<std::mutex> lock(sendQueueMutex_);"
        ]
    ]
},
{
    "line_num": 61,
    "line_str": "std::shared_ptr<c10d::ProcessGroup> pg)",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            61,
            "std::shared_ptr<c10d::ProcessGroup> pg)"
        ]
    ]
},
{
    "line_num": 156,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            156,
            ""
        ]
    ]
},
{
    "line_num": 218,
    "line_str": "break;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            218,
            "break;"
        ]
    ]
},
{
    "line_num": 185,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            185,
            ""
        ]
    ]
},
{
    "line_num": 24,
    "line_str": "{message.id(), (int64_t) message.type()}, {torch::kInt64}",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            24,
            "{message.id(), (int64_t) message.type()}, {torch::kInt64}"
        ]
    ]
},
{
    "line_num": 214,
    "line_str": "futures_[id]->markCompleted(std::move(message));",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            214,
            "futures_[id]->markCompleted(std::move(message));"
        ]
    ]
},
{
    "line_num": 181,
    "line_str": "pg_->send(preamble, work.dstRank_, work.dstRank_ /* channelTag */)->wait();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            181,
            "pg_->send(preamble, work.dstRank_, work.dstRank_ /* channelTag */)->wait();"
        ]
    ]
},
{
    "line_num": 148,
    "line_str": "lock.unlock();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            148,
            "lock.unlock();"
        ]
    ]
},
{
    "line_num": 210,
    "line_str": "} else if (message.isResponse()) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            210,
            "} else if (message.isResponse()) {"
        ]
    ]
},
{
    "line_num": 177,
    "line_str": "(int64_t)pg_->getRank(),",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            177,
            "(int64_t)pg_->getRank(),"
        ]
    ]
},
{
    "line_num": 111,
    "line_str": "std::unique_lock<std::mutex> lock(sendQueueMutex_);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            111,
            "std::unique_lock<std::mutex> lock(sendQueueMutex_);"
        ]
    ]
},
{
    "line_num": 206,
    "line_str": "Message message = deserialize(ss);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            206,
            "Message message = deserialize(ss);"
        ]
    ]
},
{
    "line_num": 41,
    "line_str": "int64_t* miscItems = miscTensor.storage().data<int64_t>();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            41,
            "int64_t* miscItems = miscTensor.storage().data<int64_t>();"
        ]
    ]
},
{
    "line_num": 165,
    "line_str": "lock.unlock();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            165,
            "lock.unlock();"
        ]
    ]
},
{
    "line_num": 99,
    "line_str": "workProduceCV_.notify_all();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            99,
            "workProduceCV_.notify_all();"
        ]
    ]
},
{
    "line_num": 66,
    "line_str": "nextId_(0) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            66,
            "nextId_(0) {"
        ]
    ]
},
{
    "line_num": 161,
    "line_str": "}",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            161,
            "}"
        ]
    ]
},
{
    "line_num": 95,
    "line_str": "workConsumeCV_.wait(lock, [&] { return sendQueue_.empty(); });",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            95,
            "workConsumeCV_.wait(lock, [&] { return sendQueue_.empty(); });"
        ]
    ]
},
{
    "line_num": 157,
    "line_str": "while (!stop_) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            157,
            "while (!stop_) {"
        ]
    ]
},
{
    "line_num": 219,
    "line_str": "} else {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            219,
            "} else {"
        ]
    ]
},
{
    "line_num": 186,
    "line_str": "lock.lock();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            186,
            "lock.lock();"
        ]
    ]
},
{
    "line_num": 215,
    "line_str": "futures_.erase(id);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            215,
            "futures_.erase(id);"
        ]
    ]
},
{
    "line_num": 182,
    "line_str": "std::vector<torch::Tensor> payload =",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            182,
            "std::vector<torch::Tensor> payload ="
        ]
    ]
},
{
    "line_num": 211,
    "line_str": "auto id = message.id();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            211,
            "auto id = message.id();"
        ]
    ]
},
{
    "line_num": 178,
    "line_str": "(int64_t)str.length(),",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            178,
            "(int64_t)str.length(),"
        ]
    ]
},
{
    "line_num": 145,
    "line_str": "void ProcessGroupAgent::enqueue(SendWork work) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            145,
            "void ProcessGroupAgent::enqueue(SendWork work) {"
        ]
    ]
},
{
    "line_num": 207,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            207,
            ""
        ]
    ]
},
{
    "line_num": 174,
    "line_str": "std::vector<torch::Tensor> preamble = {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            174,
            "std::vector<torch::Tensor> preamble = {"
        ]
    ]
},
{
    "line_num": 141,
    "line_str": "enqueue(SendWork(dstRank, std::move(message)));",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            141,
            "enqueue(SendWork(dstRank, std::move(message)));"
        ]
    ]
},
{
    "line_num": 203,
    "line_str": "std::stringstream ss(std::string(",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            203,
            "std::stringstream ss(std::string("
        ]
    ]
},
{
    "line_num": 42,
    "line_str": "int64_t id = miscItems[0];",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            42,
            "int64_t id = miscItems[0];"
        ]
    ]
},
{
    "line_num": 170,
    "line_str": "std::stringstream ss;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            170,
            "std::stringstream ss;"
        ]
    ]
},
{
    "line_num": 166,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            166,
            ""
        ]
    ]
},
{
    "line_num": 100,
    "line_str": "sendThread_.join();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            100,
            "sendThread_.join();"
        ]
    ]
},
{
    "line_num": 162,
    "line_str": "",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            162,
            ""
        ]
    ]
},
{
    "line_num": 96,
    "line_str": "stop_ = true;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            96,
            "stop_ = true;"
        ]
    ]
},
{
    "line_num": 30,
    "line_str": "Message deserialize(std::istream& is) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            30,
            "Message deserialize(std::istream& is) {"
        ]
    ]
},
{
    "line_num": 158,
    "line_str": "if (sendQueue_.empty()) {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            158,
            "if (sendQueue_.empty()) {"
        ]
    ]
},
{
    "line_num": 220,
    "line_str": "AT_ERROR(\"unrecognized message type \", message.type());",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            220,
            "AT_ERROR(\"unrecognized message type \", message.type());"
        ]
    ]
},
{
    "line_num": 187,
    "line_str": "}",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            187,
            "}"
        ]
    ]
},
{
    "line_num": 154,
    "line_str": "void ProcessGroupAgent::sendLoop() {",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            154,
            "void ProcessGroupAgent::sendLoop() {"
        ]
    ]
},
{
    "line_num": 216,
    "line_str": "}",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            216,
            "}"
        ]
    ]
},
{
    "line_num": 183,
    "line_str": "{torch::from_blob((void *)str.c_str(), str.length(), {torch::kChar})};",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            183,
            "{torch::from_blob((void *)str.c_str(), str.length(), {torch::kChar})};"
        ]
    ]
},
{
    "line_num": 150,
    "line_str": "workProduceCV_.notify_one();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            150,
            "workProduceCV_.notify_one();"
        ]
    ]
},
{
    "line_num": 212,
    "line_str": "{",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            212,
            "{"
        ]
    ]
},
{
    "line_num": 179,
    "line_str": "}, {torch::kLong})",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            179,
            "}, {torch::kLong})"
        ]
    ]
},
{
    "line_num": 146,
    "line_str": "std::unique_lock<std::mutex> lock(sendQueueMutex_);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            146,
            "std::unique_lock<std::mutex> lock(sendQueueMutex_);"
        ]
    ]
},
{
    "line_num": 113,
    "line_str": "workConsumeCV_.wait(lock, [&] { return sendQueue_.empty(); });",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            113,
            "workConsumeCV_.wait(lock, [&] { return sendQueue_.empty(); });"
        ]
    ]
},
{
    "line_num": 80,
    "line_str": "sendThread_ = std::thread(&ProcessGroupAgent::sendLoop, this);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            80,
            "sendThread_ = std::thread(&ProcessGroupAgent::sendLoop, this);"
        ]
    ]
},
{
    "line_num": 175,
    "line_str": "torch::tensor(",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            175,
            "torch::tensor("
        ]
    ]
},
{
    "line_num": 63,
    "line_str": "std::deque<SendWork> sendQueue_;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            63,
            "std::deque<SendWork> sendQueue_;"
        ]
    ]
},
{
    "line_num": 21,
    "line_str": "const int dstRank_;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            21,
            "const int dstRank_;"
        ]
    ]
},
{
    "line_num": 19,
    "line_str": "message_(message) {}",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            19,
            "message_(message) {}"
        ]
    ]
},
{
    "line_num": 18,
    "line_str": ": dstRank_(dstRank),",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            18,
            ": dstRank_(dstRank),"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": "Message&& message)",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            17,
            "Message&& message)"
        ]
    ]
},
{
    "line_num": 16,
    "line_str": "SendWork(const int dstRank,",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            16,
            "SendWork(const int dstRank,"
        ]
    ]
},
{
    "line_num": 47,
    "line_str": "void sendLoop();",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            47,
            "void sendLoop();"
        ]
    ]
},
{
    "line_num": 45,
    "line_str": "void enqueue(SendWork work);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            45,
            "void enqueue(SendWork work);"
        ]
    ]
},
{
    "line_num": 8,
    "line_str": "#include <deque>",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            8,
            "#include <deque>"
        ]
    ]
},
{
    "line_num": 67,
    "line_str": "std::thread sendThread_;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            67,
            "std::thread sendThread_;"
        ]
    ]
},
{
    "line_num": 66,
    "line_str": "std::condition_variable workConsumeCV_;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            66,
            "std::condition_variable workConsumeCV_;"
        ]
    ]
},
{
    "line_num": 65,
    "line_str": "std::condition_variable workProduceCV_;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            65,
            "std::condition_variable workProduceCV_;"
        ]
    ]
},
{
    "line_num": 64,
    "line_str": "std::mutex sendQueueMutex_;",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            64,
            "std::mutex sendQueueMutex_;"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "std::shared_ptr<c10d::ProcessGroup> pg);",
    "file_path": "torch/csrc/distributed/rpc/ProcessGroupAgent.h",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            31,
            "std::shared_ptr<c10d::ProcessGroup> pg);"
        ]
    ]
},
{
    "line_num": 51,
    "line_str": "std::shared_ptr<::c10d::ProcessGroup>>())",
    "file_path": "torch/csrc/distributed/rpc/init.cpp",
    "previous_commits": [
        [
            "8b349073ce4cc2082a634eecd4ee361dc7ca571e",
            51,
            "std::shared_ptr<::c10d::ProcessGroup>>())"
        ]
    ]
}
]
},{
"c9f41e9bc0c8296daede62ee936b9b7e32a8b658": []},
{
"cbf572671d4c46fa7bd5cd0f8a01ca40f623d6c6": []},
{
"94c61d4f328b1266649a73d8c65ce978d1a3b168": [
{
    "line_num": 264,
    "line_str": "for (auto it = post_hooks_.begin(); it != post_hooks_.end();) {",
    "file_path": "torch/csrc/autograd/function.h",
    "previous_commits": [
        [
            "cbcb2b5ad767622cf5ec04263018609bde3c974a",
            264,
            "for (auto it = post_hooks_.begin(); it != post_hooks_.end();) {"
        ]
    ]
}
]
},{
"74828be4a7d0d2dba3f0ec3f6e79265cdfae5329": [
{
    "line_num": 809,
    "line_str": "int local_inner = inner * input0->size(dimension);",
    "file_path": "aten/src/TH/generic/THTensor.cpp",
    "previous_commits": [
        [
            "f1da9892e94acc8578bc17567e9618f5fbf6cb8d",
            809,
            "int local_inner = inner * input0->size(dimension);"
        ]
    ]
}
]
},{
"071971476d7431a24e527bdc181981678055a95d": []},
{
"f5ea52868777b63283200c2261e85001999913f5": [
{
    "line_num": 1227,
    "line_str": "bool storage_initialized() const noexcept {",
    "file_path": "c10/core/TensorImpl.h",
    "previous_commits": [
        [
            "9e9e87c19e9baca0402099ca48f1d8169bb17c9c",
            1227,
            "bool storage_initialized() const noexcept {"
        ]
    ]
},
{
    "line_num": 577,
    "line_str": "AT_ASSERT(storage_initialized());",
    "file_path": "c10/core/TensorImpl.h",
    "previous_commits": [
        [
            "9e9e87c19e9baca0402099ca48f1d8169bb17c9c",
            577,
            "AT_ASSERT(storage_initialized());"
        ]
    ]
}
]
},{
"3badea6eb3b835814990291368b03fe63cf29e00": [
{
    "line_num": 92,
    "line_str": "\"Only tensors and (possibly nested) tuples of tensors are supported \"",
    "file_path": "torch/csrc/jit/pybind_utils.h",
    "previous_commits": [
        [
            "f636dc927687cc50a527c9185f9d95ed65e32996",
            92,
            "\"Only tensors and (possibly nested) tuples of tensors are supported \""
        ],
        [
            "55212507a24bc742c5e9c68f1b917e9cc6c32b0f",
            62,
            "AT_ERROR(\"Only tensors and (possibly nested) tuples of tensors are supported \""
        ]
    ]
},
{
    "line_num": 91,
    "line_str": "AT_ERROR(",
    "file_path": "torch/csrc/jit/pybind_utils.h",
    "previous_commits": [
        [
            "f636dc927687cc50a527c9185f9d95ed65e32996",
            91,
            "AT_ERROR("
        ]
    ]
},
{
    "line_num": 93,
    "line_str": "\"as inputs or outputs of traced functions\");",
    "file_path": "torch/csrc/jit/pybind_utils.h",
    "previous_commits": [
        [
            "f636dc927687cc50a527c9185f9d95ed65e32996",
            93,
            "\"as inputs or outputs of traced functions\");"
        ],
        [
            "55212507a24bc742c5e9c68f1b917e9cc6c32b0f",
            63,
            "\"as inputs or outputs of traced functions\");"
        ]
    ]
},
{
    "line_num": 434,
    "line_str": "const char* name,",
    "file_path": "torch/csrc/jit/tracer.cpp",
    "previous_commits": [
        [
            "b36d9351b1568daa75f707d13791992571b4986e",
            434,
            "const char* name,"
        ]
    ]
},
{
    "line_num": 433,
    "line_str": "Node* n,",
    "file_path": "torch/csrc/jit/tracer.cpp",
    "previous_commits": [
        [
            "b36d9351b1568daa75f707d13791992571b4986e",
            433,
            "Node* n,"
        ]
    ]
},
{
    "line_num": 432,
    "line_str": "void addInputs(",
    "file_path": "torch/csrc/jit/tracer.cpp",
    "previous_commits": [
        [
            "b36d9351b1568daa75f707d13791992571b4986e",
            432,
            "void addInputs("
        ]
    ]
},
{
    "line_num": 232,
    "line_str": "\"Only tensors or tuples of tensors can be inputs to traced functions\");",
    "file_path": "torch/csrc/jit/tracer.cpp",
    "previous_commits": [
        [
            "b076227b21c8134e210844fcc63d8eee3e1273e7",
            232,
            "\"Only tensors or tuples of tensors can be inputs to traced functions\");"
        ]
    ]
},
{
    "line_num": 435,
    "line_str": "const std::vector<double>& value) {",
    "file_path": "torch/csrc/jit/tracer.cpp",
    "previous_commits": [
        [
            "b36d9351b1568daa75f707d13791992571b4986e",
            435,
            "const std::vector<double>& value) {"
        ]
    ]
}
]
},{
"da3cc6e7ee304fe7c597304059aa8336c3d94b76": []},
{
"d4712ee218cd6af3c2096ca7a76fef350173b703": []},
{
"9d2955c39c1266e5071119b52d28c458393228a6": [
{
    "line_num": 128,
    "line_str": "else if (numel() < at::internal::GRAIN_SIZE || at::get_max_threads() == 1 || at::in_parallel_region()) {",
    "file_path": "aten/src/ATen/native/TensorIteratorReduce.cpp",
    "previous_commits": [
        [
            "25110d61fb868dcae5f1aee6edae38c8bea74523",
            128,
            "else if (numel() < at::internal::GRAIN_SIZE || at::get_max_threads() == 1 || at::in_parallel_region()) {"
        ]
    ]
}
]
},{
"c784f847debc6f6a30b41da6853517b2ccd3ddf0": [
{
    "line_num": 138,
    "line_str": "uint64_t idx_pref = indices[i_pref];                             \\",
    "file_path": "caffe2/perfkernels/adagrad.h",
    "previous_commits": [
        [
            "4b86a215cad4bbada9fdb52a63f68bc6db52d696",
            138,
            "uint64_t idx_pref = indices[i_pref];                             \\"
        ]
    ]
},
{
    "line_num": 88,
    "line_str": "int param_size, // total number of parameters",
    "file_path": "caffe2/perfkernels/adagrad.h",
    "previous_commits": [
        [
            "4b86a215cad4bbada9fdb52a63f68bc6db52d696",
            88,
            "int param_size, // total number of parameters"
        ]
    ]
},
{
    "line_num": 103,
    "line_str": "int param_size,                                                    \\",
    "file_path": "caffe2/perfkernels/adagrad.h",
    "previous_commits": [
        [
            "4b86a215cad4bbada9fdb52a63f68bc6db52d696",
            103,
            "int param_size,                                                    \\"
        ]
    ]
}
]
},{
"e4bb56570c7d6c7e17a85cbface4828c62a33564": [
{
    "line_num": 70,
    "line_str": "} else if (prev_l > l) {",
    "file_path": "aten/src/ATen/native/PackedSequence.cpp",
    "previous_commits": [
        [
            "6d6655e6be914e04a3ea4bdb7e7990f9ba9e3c2f",
            70,
            "} else if (prev_l > l) {"
        ]
    ]
},
{
    "line_num": 71,
    "line_str": "AT_ERROR(\"'lengths' array has to be sorted in decreasing order\");",
    "file_path": "aten/src/ATen/native/PackedSequence.cpp",
    "previous_commits": [
        [
            "6d6655e6be914e04a3ea4bdb7e7990f9ba9e3c2f",
            71,
            "AT_ERROR(\"'lengths' array has to be sorted in decreasing order\");"
        ]
    ]
}
]
},{
"76c1b5cd794c44e4fec8da1d87ec8f0ccc045e68": [
{
    "line_num": 45,
    "line_str": "input = bound_value;",
    "file_path": "caffe2/operators/stats_put_ops.h",
    "previous_commits": [
        [
            "5a0d2c71383fcf1b5e3690fd011920f162fb28fa",
            45,
            "input = bound_value;"
        ]
    ]
},
{
    "line_num": 44,
    "line_str": "} else if (input > bound_value) {",
    "file_path": "caffe2/operators/stats_put_ops.h",
    "previous_commits": [
        [
            "5a0d2c71383fcf1b5e3690fd011920f162fb28fa",
            44,
            "} else if (input > bound_value) {"
        ]
    ]
},
{
    "line_num": 43,
    "line_str": "} else if (input < -bound_value) {",
    "file_path": "caffe2/operators/stats_put_ops.h",
    "previous_commits": [
        [
            "e22a7768907c4fa12908214783c04470663e15a6",
            43,
            "} else if (input < -bound_value) {"
        ],
        [
            "5a0d2c71383fcf1b5e3690fd011920f162fb28fa",
            42,
            "if (input < -bound_value) {"
        ]
    ]
},
{
    "line_num": 42,
    "line_str": "input = 0;",
    "file_path": "caffe2/operators/stats_put_ops.h",
    "previous_commits": [
        [
            "e22a7768907c4fa12908214783c04470663e15a6",
            42,
            "input = 0;"
        ]
    ]
},
{
    "line_num": 41,
    "line_str": "int64_t int_value = input * magnitude_expand_;",
    "file_path": "caffe2/operators/stats_put_ops.h",
    "previous_commits": [
        [
            "d9c27f4d8d2e71a5dd3b3c3f82790d14a296124f",
            41,
            "int64_t int_value = input * magnitude_expand_;"
        ]
    ]
}
]
},{
"50c0aedbec4ee8fccde762c0b46791453267f1ce": []},
{
"7035975508ed053b5f1ac08b96ac6d6b2bbb954e": [
{
    "line_num": 19,
    "line_str": "static const std::string name = demangle(typeid(T).name());",
    "file_path": "c10/util/Type.h",
    "previous_commits": [
        [
            "9c49bb9ddf87e21ea01e3e2d582f7238e189d480",
            19,
            "static const std::string name = demangle(typeid(T).name());"
        ]
    ]
}
]
},{
"ac9bb8ecefa0233103ebf94813284860a84ea81f": [
{
    "line_num": 95,
    "line_str": "return reinterpret_cast<Dst>(ptr);",
    "file_path": "caffe2/core/common.h",
    "previous_commits": [
        [
            "b729f05c35c7905b647e12e8da216dbde726651e",
            95,
            "return reinterpret_cast<Dst>(ptr);"
        ]
    ]
}
]
},{
"807de9a1e3cff49dd23fb7df83aea38269ccdd23": [
{
    "line_num": 55,
    "line_str": "results[value_idx] = ((THPVariable*)value.get())->cdata;",
    "file_path": "torch/csrc/autograd/python_hook.cpp",
    "previous_commits": [
        [
            "2ca787fcf40d65065a2cf036d238f748ec18d227",
            55,
            "results[value_idx] = ((THPVariable*)value.get())->cdata;"
        ],
        [
            "50731328372721fb681024b246a131951541b624",
            54,
            "results[grad_index] = ((THPVariable*)grad.get())->cdata;"
        ],
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            39,
            "return ((THPVariable*)grad.get())->cdata;"
        ]
    ]
}
]
},{
"807de9a1e3cff49dd23fb7df83aea38269ccdd23": [
{
    "line_num": 55,
    "line_str": "results[value_idx] = ((THPVariable*)value.get())->cdata;",
    "file_path": "torch/csrc/autograd/python_hook.cpp",
    "previous_commits": [
        [
            "2ca787fcf40d65065a2cf036d238f748ec18d227",
            55,
            "results[value_idx] = ((THPVariable*)value.get())->cdata;"
        ],
        [
            "50731328372721fb681024b246a131951541b624",
            54,
            "results[grad_index] = ((THPVariable*)grad.get())->cdata;"
        ],
        [
            "34ce58c909543632a0ba41791c9a83f29580b23b",
            39,
            "return ((THPVariable*)grad.get())->cdata;"
        ]
    ]
}
]
},{
"26e40fa665a23e18a4f0b438e10b42202e004bae": [
{
    "line_num": 117,
    "line_str": "TensorAccessor<T,N> accessor() const {",
    "file_path": "aten/src/ATen/templates/Tensor.h",
    "previous_commits": [
        [
            "711e5a6ceb46fcfe90dc8ca176c94c4f44dfbc17",
            117,
            "TensorAccessor<T,N> accessor() const {"
        ],
        [
            "288fd61c0b30437712fc43438c2a85749da4f016",
            105,
            "TensorAccessor<T,N> accessor() {"
        ]
    ]
}
]
},{
"1597fc594d36a18d1d4aee16d09ea49ae7065610": [
{
    "line_num": 22,
    "line_str": "int h_im = h_col * stride_h - pad_h + h_offset * dilation_h;",
    "file_path": "aten/src/THNN/generic/Col2Im.c",
    "previous_commits": [
        [
            "b997474a4f7dc0c1aa2e29049317169dff0a8680",
            22,
            "int h_im = h_col * stride_h - pad_h + h_offset * dilation_h;"
        ]
    ]
},
{
    "line_num": 50,
    "line_str": "int h_im = h_col * stride_h - pad_h + h_offset * dilation_h;",
    "file_path": "aten/src/THNN/generic/Col2Im.c",
    "previous_commits": [
        [
            "b997474a4f7dc0c1aa2e29049317169dff0a8680",
            50,
            "int h_im = h_col * stride_h - pad_h + h_offset * dilation_h;"
        ]
    ]
},
{
    "line_num": 157,
    "line_str": "int nOutputPlane = weight->size[0];",
    "file_path": "generic/VolumetricDilatedConvolution.c",
    "previous_commits": [
        [
            "d920bf148833147769b8fc75262a92f6fe65b010",
            157,
            "int nOutputPlane = weight->size[0];"
        ]
    ]
},
{
    "line_num": 156,
    "line_str": "int nInputPlane = weight->size[1];",
    "file_path": "generic/VolumetricDilatedConvolution.c",
    "previous_commits": [
        [
            "d920bf148833147769b8fc75262a92f6fe65b010",
            156,
            "int nInputPlane = weight->size[1];"
        ]
    ]
},
{
    "line_num": 26,
    "line_str": "int nOutputPlane = weight->size[0];",
    "file_path": "generic/VolumetricDilatedConvolution.c",
    "previous_commits": [
        [
            "d920bf148833147769b8fc75262a92f6fe65b010",
            26,
            "int nOutputPlane = weight->size[0];"
        ]
    ]
},
{
    "line_num": 25,
    "line_str": "int nInputPlane = weight->size[1];",
    "file_path": "generic/VolumetricDilatedConvolution.c",
    "previous_commits": [
        [
            "d920bf148833147769b8fc75262a92f6fe65b010",
            25,
            "int nInputPlane = weight->size[1];"
        ]
    ]
},
{
    "line_num": 66,
    "line_str": "int t_offset = (c / kW / kH) % kT;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            66,
            "int t_offset = (c / kW / kH) % kT;"
        ]
    ]
},
{
    "line_num": 33,
    "line_str": "int w_pad = w * dW - pW + w_offset * dilationW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            33,
            "int w_pad = w * dW - pW + w_offset * dilationW;"
        ]
    ]
},
{
    "line_num": 314,
    "line_str": "const int nInputPlane  = (int)weight->size[0];",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            314,
            "const int nInputPlane  = (int)weight->size[0];"
        ]
    ]
},
{
    "line_num": 21,
    "line_str": "int w_offset = c % kW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            21,
            "int w_offset = c % kW;"
        ]
    ]
},
{
    "line_num": 50,
    "line_str": "const int out_depth, const int out_height, const int out_width,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "814b65df4f0b878a0d3fe77dce76aec21886b23e",
            50,
            "const int out_depth, const int out_height, const int out_width,"
        ]
    ]
},
{
    "line_num": 75,
    "line_str": "int h_pad = h * dH - pH + h_offset * dilationH;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            75,
            "int h_pad = h * dH - pH + h_offset * dilationH;"
        ]
    ]
},
{
    "line_num": 9,
    "line_str": "const int pT, const int pH, const int pW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            9,
            "const int pT, const int pH, const int pW,"
        ]
    ]
},
{
    "line_num": 67,
    "line_str": "int c_vol = c / kT / kH / kW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            67,
            "int c_vol = c / kT / kH / kW;"
        ]
    ]
},
{
    "line_num": 59,
    "line_str": "int depth_col  = out_depth;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "814b65df4f0b878a0d3fe77dce76aec21886b23e",
            59,
            "int depth_col  = out_depth;"
        ]
    ]
},
{
    "line_num": 315,
    "line_str": "const int nOutputPlane = (int)weight->size[1];",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            315,
            "const int nOutputPlane = (int)weight->size[1];"
        ]
    ]
},
{
    "line_num": 22,
    "line_str": "int h_offset = (c / kW) % kH;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            22,
            "int h_offset = (c / kW) % kH;"
        ]
    ]
},
{
    "line_num": 51,
    "line_str": "const int pT, const int pH, const int pW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            51,
            "const int pT, const int pH, const int pW,"
        ]
    ]
},
{
    "line_num": 18,
    "line_str": "int channels_col = channels * kT * kH * kW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            18,
            "int channels_col = channels * kT * kH * kW;"
        ]
    ]
},
{
    "line_num": 14,
    "line_str": "int c, t, h, w;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            14,
            "int c, t, h, w;"
        ]
    ]
},
{
    "line_num": 76,
    "line_str": "int w_pad = w * dW - pW + w_offset * dilationW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            76,
            "int w_pad = w * dW - pW + w_offset * dilationW;"
        ]
    ]
},
{
    "line_num": 10,
    "line_str": "const int dT, const int dH, const int dW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            10,
            "const int dT, const int dH, const int dW,"
        ]
    ]
},
{
    "line_num": 6,
    "line_str": "const real *data_vol, const int channels,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            6,
            "const real *data_vol, const int channels,"
        ]
    ]
},
{
    "line_num": 441,
    "line_str": "int nOutputPlane;",
    "file_path": "aten/src/THNN/generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "f23feca681c5066c70f0fe1516fc2e269d615e93",
            441,
            "int nOutputPlane;"
        ]
    ]
},
{
    "line_num": 64,
    "line_str": "int w_offset = c % kW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            64,
            "int w_offset = c % kW;"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "int t_pad = t * dT - pT + t_offset * dilationT;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            31,
            "int t_pad = t * dT - pT + t_offset * dilationT;"
        ]
    ]
},
{
    "line_num": 60,
    "line_str": "int height_col = out_height;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "814b65df4f0b878a0d3fe77dce76aec21886b23e",
            60,
            "int height_col = out_height;"
        ]
    ]
},
{
    "line_num": 56,
    "line_str": "int c, t, h, w;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            56,
            "int c, t, h, w;"
        ]
    ]
},
{
    "line_num": 23,
    "line_str": "int t_offset = (c / kW / kH) % kT;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            23,
            "int t_offset = (c / kW / kH) % kT;"
        ]
    ]
},
{
    "line_num": 52,
    "line_str": "const int dT, const int dH, const int dW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            52,
            "const int dT, const int dH, const int dW,"
        ]
    ]
},
{
    "line_num": 8,
    "line_str": "const int depth_col, const int height_col, const int width_col,",
    "file_path": "aten/src/THNN/generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "177b4509ceeb7a8ae2e176f52f4b41d9e71dc993",
            8,
            "const int depth_col, const int height_col, const int width_col,"
        ]
    ]
},
{
    "line_num": 48,
    "line_str": "const real* data_col, const int channels,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            48,
            "const real* data_col, const int channels,"
        ]
    ]
},
{
    "line_num": 11,
    "line_str": "const int dilationT, const int dilationH, const int dilationW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            11,
            "const int dilationT, const int dilationH, const int dilationW,"
        ]
    ]
},
{
    "line_num": 7,
    "line_str": "const int depth, const int height, const int width,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            7,
            "const int depth, const int height, const int width,"
        ]
    ]
},
{
    "line_num": 65,
    "line_str": "int h_offset = (c / kW) % kH;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            65,
            "int h_offset = (c / kW) % kH;"
        ]
    ]
},
{
    "line_num": 32,
    "line_str": "int h_pad = h * dH - pH + h_offset * dilationH;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            32,
            "int h_pad = h * dH - pH + h_offset * dilationH;"
        ]
    ]
},
{
    "line_num": 61,
    "line_str": "int width_col  = out_width;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "814b65df4f0b878a0d3fe77dce76aec21886b23e",
            61,
            "int width_col  = out_width;"
        ]
    ]
},
{
    "line_num": 24,
    "line_str": "int c_vol = c / kT / kH / kW;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            24,
            "int c_vol = c / kT / kH / kW;"
        ]
    ]
},
{
    "line_num": 53,
    "line_str": "const int dilationT, const int dilationH, const int dilationW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            53,
            "const int dilationT, const int dilationH, const int dilationW,"
        ]
    ]
},
{
    "line_num": 49,
    "line_str": "const int depth, const int height, const int width,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            49,
            "const int depth, const int height, const int width,"
        ]
    ]
},
{
    "line_num": 74,
    "line_str": "int t_pad = t * dT - pT + t_offset * dilationT;",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            74,
            "int t_pad = t * dT - pT + t_offset * dilationT;"
        ]
    ]
},
{
    "line_num": 8,
    "line_str": "const int kT, const int kH, const int kW,",
    "file_path": "generic/VolumetricFullDilatedConvolution.c",
    "previous_commits": [
        [
            "6e6dca001c2bc50ca0a21cce9c3779289d2faaf5",
            8,
            "const int kT, const int kH, const int kW,"
        ]
    ]
}
]
},{
"4d287f90743e09d1fdc6e2b3519b16c2d1ae3fa3": [
{
    "line_num": 90,
    "line_str": "for (int i = k * WIDTH; i != size; i++) {",
    "file_path": "aten/src/ATen/native/cpu/ReduceOpsKernel.cpp",
    "previous_commits": [
        [
            "e4c0bb1809fd9bf9161392bfff7d06092adc224d",
            90,
            "for (int i = k * WIDTH; i != size; i++) {"
        ]
    ]
}
]
},{
"922adf8d09524db8697aac657a4707076155b7c0": []},
{
"3521cd54af0ce341753ee744a859dfaa3ded4a4b": []},
{
"932c4c2364884af52609ea8a86c7232a926d958f": []},
{
"08b1324ec26043b1acfaf4b65335c671c8658a3c": [
{
    "line_num": 1039,
    "line_str": "if (rp[i] * value < 0)",
    "file_path": "aten/src/TH/generic/THTensorMath.c",
    "previous_commits": [
        [
            "c2afd590ae716021bb1747a47756dc6aa356f50d",
            1039,
            "if (rp[i] * value < 0)"
        ],
        [
            "662163bef68a9d64f3cb13a903638c870c0b4aa6",
            720,
            "if (rp[i] * value < 0)"
        ]
    ]
},
{
    "line_num": 1054,
    "line_str": "if (*r__data * value < 0) *r__data += value;);",
    "file_path": "aten/src/TH/generic/THTensorMath.c",
    "previous_commits": [
        [
            "c2afd590ae716021bb1747a47756dc6aa356f50d",
            1054,
            "if (*r__data * value < 0) *r__data += value;);"
        ]
    ]
},
{
    "line_num": 730,
    "line_str": "if (*r__data * value < 0) *r__data += value;);",
    "file_path": "generic/THTensorMath.c",
    "previous_commits": [
        [
            "662163bef68a9d64f3cb13a903638c870c0b4aa6",
            730,
            "if (*r__data * value < 0) *r__data += value;);"
        ]
    ]
}
]
},{
"f51e28440869700787748f7c1542214224bcc5c9": [
{
    "line_num": 19,
    "line_str": "has_grad_fn_(!variable.is_leaf()) {",
    "file_path": "torch/csrc/autograd/saved_variable.cpp",
    "previous_commits": [
        [
            "2d5fbe6e0de1e5dfa292afedec34b277c14d7c10",
            19,
            "has_grad_fn_(!variable.is_leaf()) {"
        ],
        [
            "b09d66e60dd2a55877e1c1fc6fc34cbbc756f952",
            19,
            "has_grad_fn = !variable.is_leaf();"
        ]
    ]
},
{
    "line_num": 18,
    "line_str": "requires_grad_(variable.requires_grad()),",
    "file_path": "torch/csrc/autograd/saved_variable.cpp",
    "previous_commits": [
        [
            "2d5fbe6e0de1e5dfa292afedec34b277c14d7c10",
            18,
            "requires_grad_(variable.requires_grad()),"
        ],
        [
            "1290e586fbc3d6266423f3417723d6620267054b",
            15,
            "requires_grad = variable.requires_grad();"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": ": output_nr_(variable.output_nr()),",
    "file_path": "torch/csrc/autograd/saved_variable.cpp",
    "previous_commits": [
        [
            "2d5fbe6e0de1e5dfa292afedec34b277c14d7c10",
            17,
            ": output_nr_(variable.output_nr()),"
        ],
        [
            "b14c5bf0169488fd5ea003ede8123ef7bd313b87",
            20,
            "output_nr = variable.output_nr();"
        ]
    ]
},
{
    "line_num": 9,
    "line_str": "SavedVariable::SavedVariable(const Variable& variable, bool is_output)",
    "file_path": "torch/csrc/autograd/saved_variable.cpp",
    "previous_commits": [
        [
            "b09d66e60dd2a55877e1c1fc6fc34cbbc756f952",
            9,
            "SavedVariable::SavedVariable(const Variable& variable, bool is_output)"
        ],
        [
            "1290e586fbc3d6266423f3417723d6620267054b",
            9,
            "SavedVariable::SavedVariable(const Variable& variable, Function* saved_for)"
        ]
    ]
}
]
},{
"daf2743bbb799f71287978f4b4c48b285d7757a6": [
{
    "line_num": 16,
    "line_str": "if(!type)",
    "file_path": "aten/src/aten/Context.h",
    "previous_commits": [
        [
            "ae0a74925802c3ade936b7962c8e45383360e3e9",
            16,
            "if(!type)"
        ]
    ]
},
{
    "line_num": 26,
    "line_str": "AT_ASSERT(t.pImpl, \"Attempting to create a Scalar from an undefined tensor\");",
    "file_path": "aten/src/ATen/Scalar.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            26,
            "AT_ASSERT(t.pImpl, \"Attempting to create a Scalar from an undefined tensor\");"
        ]
    ]
},
{
    "line_num": 65,
    "line_str": "return \"UNKNOWN_SCALAR_TYPE\";",
    "file_path": "aten/src/ATen/ScalarType.h",
    "previous_commits": [
        [
            "937950e06473518e7a4852abc459039fe2686f20",
            65,
            "return \"UNKNOWN_SCALAR_TYPE\";"
        ]
    ]
},
{
    "line_num": 13,
    "line_str": "if(pImpl != nullptr && retain)",
    "file_path": "aten/src/ATen/TensorBase.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            13,
            "if(pImpl != nullptr && retain)"
        ]
    ]
},
{
    "line_num": 10,
    "line_str": ": pImpl(nullptr) {}",
    "file_path": "aten/src/ATen/TensorBase.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            10,
            ": pImpl(nullptr) {}"
        ]
    ]
},
{
    "line_num": 9,
    "line_str": "TensorBase()",
    "file_path": "aten/src/ATen/TensorBase.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            9,
            "TensorBase()"
        ]
    ]
},
{
    "line_num": 26,
    "line_str": "if(pImpl != nullptr)",
    "file_path": "aten/src/ATen/TensorBase.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            26,
            "if(pImpl != nullptr)"
        ]
    ]
},
{
    "line_num": 23,
    "line_str": "rhs.pImpl = nullptr;",
    "file_path": "aten/src/ATen/TensorBase.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            23,
            "rhs.pImpl = nullptr;"
        ]
    ]
},
{
    "line_num": 18,
    "line_str": "if(pImpl != nullptr)",
    "file_path": "aten/src/ATen/TensorBase.h",
    "previous_commits": [
        [
            "37d9ad748b945af8d696f56054d6fcaedb228abd",
            18,
            "if(pImpl != nullptr)"
        ]
    ]
},
{
    "line_num": 17,
    "line_str": "}",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "b7f793c618c6ac79083e50039ad753df71d8de92",
            17,
            "}"
        ]
    ]
},
{
    "line_num": 16,
    "line_str": "return (T*) expr;",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "b7f793c618c6ac79083e50039ad753df71d8de92",
            16,
            "return (T*) expr;"
        ]
    ]
},
{
    "line_num": 15,
    "line_str": "if (allowNull) {",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "b7f793c618c6ac79083e50039ad753df71d8de92",
            15,
            "if (allowNull) {"
        ]
    ]
},
{
    "line_num": 14,
    "line_str": "if(!expr) {",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "6b285cb37d9789d80b8db354c4270cd54cdcf870",
            14,
            "if(!expr) {"
        ]
    ]
},
{
    "line_num": 13,
    "line_str": "static inline T* checked_cast(Base* expr, const char * name, int pos, bool allowNull) {",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "b7f793c618c6ac79083e50039ad753df71d8de92",
            13,
            "static inline T* checked_cast(Base* expr, const char * name, int pos, bool allowNull) {"
        ],
        [
            "ab7517d888a2fe26b423ca5fa34a162183bd0be6",
            13,
            "static inline T* checked_cast(Base* expr, const char * name, int pos) {"
        ]
    ]
},
{
    "line_num": 33,
    "line_str": "}",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "2cd8bbd2bcdcfec815bf05ff78cf371e630b7179",
            33,
            "}"
        ]
    ]
},
{
    "line_num": 32,
    "line_str": "T::typeString(),i,pos,name);",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "2cd8bbd2bcdcfec815bf05ff78cf371e630b7179",
            32,
            "T::typeString(),i,pos,name);"
        ]
    ]
},
{
    "line_num": 31,
    "line_str": "\" in sequence argument at position #%d '%s'\",",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "2cd8bbd2bcdcfec815bf05ff78cf371e630b7179",
            31,
            "\" in sequence argument at position #%d '%s'\","
        ]
    ]
},
{
    "line_num": 30,
    "line_str": "runtime_error(\"Expected a Tensor of type %s but found an undefined Tensor for sequence element %u \"",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "2cd8bbd2bcdcfec815bf05ff78cf371e630b7179",
            30,
            "runtime_error(\"Expected a Tensor of type %s but found an undefined Tensor for sequence element %u \""
        ]
    ]
},
{
    "line_num": 29,
    "line_str": "if (!expr) {",
    "file_path": "aten/src/ATen/Utils.h",
    "previous_commits": [
        [
            "2cd8bbd2bcdcfec815bf05ff78cf371e630b7179",
            29,
            "if (!expr) {"
        ]
    ]
},
{
    "line_num": 62,
    "line_str": "bool defined() const {",
    "file_path": "aten/src/aten/templates/Tensor.h",
    "previous_commits": [
        [
            "56f1019fc732d513196ac1eba733a6f1139e84d1",
            62,
            "bool defined() const {"
        ]
    ]
},
{
    "line_num": 61,
    "line_str": "}",
    "file_path": "aten/src/aten/templates/Tensor.h",
    "previous_commits": [
        [
            "7e98cabf25f546a0c3a8ea03bdde62a2b2dd9e80",
            61,
            "}"
        ]
    ]
},
{
    "line_num": 60,
    "line_str": "return pImpl != nullptr;",
    "file_path": "aten/src/aten/templates/Tensor.h",
    "previous_commits": [
        [
            "7e98cabf25f546a0c3a8ea03bdde62a2b2dd9e80",
            60,
            "return pImpl != nullptr;"
        ]
    ]
},
{
    "line_num": 19,
    "line_str": "std::tie(b_src) = expand_inplace(dst, src);",
    "file_path": "aten/src/ATen/templates/Type.cpp",
    "previous_commits": [
        [
            "112f183dc21f02f83b04667d804a9c11f3ce4a5e",
            19,
            "std::tie(b_src) = expand_inplace(dst, src);"
        ]
    ]
},
{
    "line_num": 201,
    "line_str": "if (weight.get()) {",
    "file_path": "torch/csrc/autograd/functions/batch_normalization.cpp",
    "previous_commits": [
        [
            "925208af72cd956e5cee0a965da632c7985d6c74",
            201,
            "if (weight.get()) {"
        ]
    ]
}
]
},{
"f7a459b28b184dedf265ed8718f85cb483e8284e": []},
{
"96007ec6c00b5248d47eae8ce781481e1e32ab70": [
{
    "line_num": 148,
    "line_str": "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)",
    "file_path": "generic/simd/simd.h",
    "previous_commits": [
        [
            "938706099e7edbd4f1ef4213884ac74c002d2bae",
            148,
            "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)"
        ]
    ]
},
{
    "line_num": 141,
    "line_str": "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)",
    "file_path": "generic/simd/simd.h",
    "previous_commits": [
        [
            "938706099e7edbd4f1ef4213884ac74c002d2bae",
            141,
            "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)"
        ]
    ]
},
{
    "line_num": 125,
    "line_str": "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)",
    "file_path": "generic/simd/simd.h",
    "previous_commits": [
        [
            "938706099e7edbd4f1ef4213884ac74c002d2bae",
            125,
            "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)"
        ]
    ]
},
{
    "line_num": 85,
    "line_str": "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)",
    "file_path": "generic/simd/simd.h",
    "previous_commits": [
        [
            "d6a31c68a0f39656257322a55c9e04dd579de828",
            85,
            "if (evar == NULL || strncmp(evar, \"1\", 2) != 0)"
        ]
    ]
}
]
},{
"6fde0cb507d59d2a9168f3051feba6865e9d1048": [
{
    "line_num": 263,
    "line_str": "if(m2_ != m2)",
    "file_path": "generic/THTensorMath.c",
    "previous_commits": [
        [
            "a8f107756eb200837fa454770e707b1fd8296157",
            263,
            "if(m2_ != m2)"
        ]
    ]
},
{
    "line_num": 260,
    "line_str": "if(m1_ != m1)",
    "file_path": "generic/THTensorMath.c",
    "previous_commits": [
        [
            "a8f107756eb200837fa454770e707b1fd8296157",
            260,
            "if(m1_ != m1)"
        ]
    ]
}
]
},{
"30bbeb8b87ef815d8a7ce8ab8af9a301fcedfbe9": [
{
    "line_num": 55,
    "line_str": "assert(Tag::HAS_i == tag); \\",
    "file_path": "aten/src/ATen/Scalar.h",
    "previous_commits": [
        [
            "dadc23cafb6e6442e822f3933edc2d26c5111ca7",
            55,
            "assert(Tag::HAS_i == tag); \\"
        ]
    ]
},
{
    "line_num": 65,
    "line_str": "return casted; \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "c64b031fbf74c7696a1b055b47034f6adefc873b",
            65,
            "return casted; \\"
        ]
    ]
},
{
    "line_num": 64,
    "line_str": "} \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "c64b031fbf74c7696a1b055b47034f6adefc873b",
            64,
            "} \\"
        ]
    ]
},
{
    "line_num": 59,
    "line_str": "return casted; \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "c64b031fbf74c7696a1b055b47034f6adefc873b",
            59,
            "return casted; \\"
        ]
    ]
},
{
    "line_num": 90,
    "line_str": "throw std::domain_error(std::string(\"value cannot be losslessly represented in type \" #name \": \") + std::to_string(v.i)); \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "53eafff042f2c18d789c3667227803fc07897269",
            90,
            "throw std::domain_error(std::string(\"value cannot be losslessly represented in type \" #name \": \") + std::to_string(v.i)); \\"
        ]
    ]
},
{
    "line_num": 89,
    "line_str": "if(convert<int64_t,type>(casted) != v.i) { \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "53eafff042f2c18d789c3667227803fc07897269",
            89,
            "if(convert<int64_t,type>(casted) != v.i) { \\"
        ]
    ]
},
{
    "line_num": 88,
    "line_str": "auto casted = convert<type,int64_t>(v.i); \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "53eafff042f2c18d789c3667227803fc07897269",
            88,
            "auto casted = convert<type,int64_t>(v.i); \\"
        ]
    ]
},
{
    "line_num": 58,
    "line_str": "} \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "c64b031fbf74c7696a1b055b47034f6adefc873b",
            58,
            "} \\"
        ]
    ]
},
{
    "line_num": 84,
    "line_str": "throw std::domain_error(std::string(\"value cannot be losslessly represented in type \" #name \": \") + std::to_string(v.d) ); \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "53eafff042f2c18d789c3667227803fc07897269",
            84,
            "throw std::domain_error(std::string(\"value cannot be losslessly represented in type \" #name \": \") + std::to_string(v.d) ); \\"
        ]
    ]
},
{
    "line_num": 83,
    "line_str": "if(convert<double,type>(casted) != v.d) { \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "53eafff042f2c18d789c3667227803fc07897269",
            83,
            "if(convert<double,type>(casted) != v.d) { \\"
        ]
    ]
},
{
    "line_num": 82,
    "line_str": "auto casted = convert<type,double>(v.d); \\",
    "file_path": "aten/src/aten/Scalar.h",
    "previous_commits": [
        [
            "53eafff042f2c18d789c3667227803fc07897269",
            82,
            "auto casted = convert<type,double>(v.d); \\"
        ]
    ]
}
]
}]