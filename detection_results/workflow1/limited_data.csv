Tool,Mapping,Library,Overhead,VFC,VIC,Path,Added,Deleted,VulLine,Warnings,Class,Unnamed: 12,Unnamed: 13,Unnamed: 14,Unnamed: 15,Unnamed: 16,Unnamed: 17,Unnamed: 18,Unnamed: 19,Unnamed: 20,Unnamed: 21,Unnamed: 22,Unnamed: 23,Unnamed: 24,Unnamed: 25,Unnamed: 26,Unnamed: 27,Unnamed: 28,Unnamed: 29,Unnamed: 30,Unnamed: 31,Unnamed: 32,Unnamed: 33,Unnamed: 34,Unnamed: 35,Unnamed: 36,Unnamed: 37,Unnamed: 38,Unnamed: 39,Unnamed: 40,Unnamed: 41,Unnamed: 42,Unnamed: 43,Unnamed: 44,Unnamed: 45,Unnamed: 46,Unnamed: 47,Unnamed: 48
flawfinder,diff,mlpack,0.028956174850464,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/0ae6b7d2402a3404d904ac6ea7b26df2d00ab93f,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,3,1,230,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 314 in approximately 0.00 seconds (64900 lines/second)\nPhysical Source Lines of Code (SLOC) = 243\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.4609 [1+] 4.11523 [2+] 4.11523 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029149293899536,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/ead8a568163d2f11a33a0d029881d7093eb730f1,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,9,7,197,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 316 in approximately 0.00 seconds (71612 lines/second)\nPhysical Source Lines of Code (SLOC) = 245\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.3265 [1+] 4.08163 [2+] 4.08163 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029029369354248,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/445eb0b10458c07c82f51c1269ffff576bbc637c,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,13,0,259,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 301 in approximately 0.00 seconds (69509 lines/second)\nPhysical Source Lines of Code (SLOC) = 232\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 17.2414 [1+] 4.31034 [2+] 4.31034 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028683423995972,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/ead8a568163d2f11a33a0d029881d7093eb730f1,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,9,7,193,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 316 in approximately 0.00 seconds (68809 lines/second)\nPhysical Source Lines of Code (SLOC) = 245\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.3265 [1+] 4.08163 [2+] 4.08163 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.027837038040161,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/445eb0b10458c07c82f51c1269ffff576bbc637c,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,13,0,256,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 301 in approximately 0.00 seconds (65707 lines/second)\nPhysical Source Lines of Code (SLOC) = 232\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 17.2414 [1+] 4.31034 [2+] 4.31034 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030024290084839,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/64843110c3325fea8c66d32e3ed73f2ea6cfd937,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,13,0,255,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 288 in approximately 0.00 seconds (67484 lines/second)\nPhysical Source Lines of Code (SLOC) = 221\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 18.0995 [1+] 4.52489 [2+] 4.52489 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028697490692139,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/64843110c3325fea8c66d32e3ed73f2ea6cfd937,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,13,0,252,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 288 in approximately 0.00 seconds (67574 lines/second)\nPhysical Source Lines of Code (SLOC) = 221\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 18.0995 [1+] 4.52489 [2+] 4.52489 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.0295889377594,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/44fefc3b79e6b1399a8b2853ce841f647a0a6cb5,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,3,3,219,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:213:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 318 in approximately 0.00 seconds (72591 lines/second)\nPhysical Source Lines of Code (SLOC) = 247\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.1943 [1+] 4.04858 [2+] 4.04858 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029743194580078,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/44fefc3b79e6b1399a8b2853ce841f647a0a6cb5,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,3,3,217,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:213:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 318 in approximately 0.00 seconds (69945 lines/second)\nPhysical Source Lines of Code (SLOC) = 247\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.1943 [1+] 4.04858 [2+] 4.04858 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029293298721314,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/44fefc3b79e6b1399a8b2853ce841f647a0a6cb5,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,3,3,214,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:213:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 318 in approximately 0.00 seconds (73000 lines/second)\nPhysical Source Lines of Code (SLOC) = 247\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.1943 [1+] 4.04858 [2+] 4.04858 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028745651245117,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/8b866d35595cf0b631cf7dc203bd4729de8b571a,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,6,11,213,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:222:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 335 in approximately 0.00 seconds (68175 lines/second)\nPhysical Source Lines of Code (SLOC) = 262\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.2672 [1+] 3.81679 [2+] 3.81679 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028980970382691,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/8b866d35595cf0b631cf7dc203bd4729de8b571a,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,6,11,209,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:222:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 335 in approximately 0.00 seconds (75191 lines/second)\nPhysical Source Lines of Code (SLOC) = 262\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.2672 [1+] 3.81679 [2+] 3.81679 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030448198318482,https://github.com/mlpack/mlpack/commit/460398235df633a8c44f7ae56c57c921da068178,https://github.com/mlpack/mlpack/commit/ead8a568163d2f11a33a0d029881d7093eb730f1,fastlib/trunk/contrib/dongryel/thesis_research/core/table/table.h,9,7,203,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_table.h:211:  [2] (misc) fopen:\n  Check when opening files - can an attacker redirect it (via symlinks),\n  force the opening of special file type (e.g., device files), move things\n  around to create a race condition, control its ancestors, or change its\n  contents? (CWE-362).\n      FILE *foutput = fopen(file_name.c_str(), ""w+"");\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 316 in approximately 0.00 seconds (69516 lines/second)\nPhysical Source Lines of Code (SLOC) = 245\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.3265 [1+] 4.08163 [2+] 4.08163 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028625965118408,https://github.com/mlpack/mlpack/commit/150433a029205b35259f96a84bb93a3fec812901,https://github.com/mlpack/mlpack/commit/f887b8238832d0ad2222f5686fd70ecd17337467,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,0,161,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 368 in approximately 0.00 seconds (81658 lines/second)\nPhysical Source Lines of Code (SLOC) = 245\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.08163 [1+] 4.08163 [2+] 4.08163 [3+] 4.08163 [4+] 4.08163 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030316829681397,https://github.com/mlpack/mlpack/commit/150433a029205b35259f96a84bb93a3fec812901,https://github.com/mlpack/mlpack/commit/f887b8238832d0ad2222f5686fd70ecd17337467,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,0,160,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 368 in approximately 0.00 seconds (82224 lines/second)\nPhysical Source Lines of Code (SLOC) = 245\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.08163 [1+] 4.08163 [2+] 4.08163 [3+] 4.08163 [4+] 4.08163 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030135631561279,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,259,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63138 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029105186462402,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,98,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68965 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028001546859741,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,288,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68513 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.02834963798523,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,255,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63230 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029778242111206,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,350,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (85159 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028146982192993,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,284,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67440 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029804706573486,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,346,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (84386 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.0287344455719,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,90,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68793 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029958963394165,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,280,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (73045 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028988838195801,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,247,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (65681 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029322147369385,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,86,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63921 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028729915618897,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,309,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (64205 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.032021522521973,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,276,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (73135 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.032573223114014,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,305,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (65112 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.032594680786133,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,45,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.01 seconds (66490 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.031700611114502,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,301,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (78923 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030588865280151,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,297,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66694 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028536319732666,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,189,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (63428 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030299425125122,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,70,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (80456 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028780460357666,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,62,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67858 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029944181442261,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,293,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (78751 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028601169586182,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,260,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (64955 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030091762542725,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,99,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (75164 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028507232666016,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,91,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67919 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029372453689575,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,351,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (78599 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029039144515991,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,190,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (62174 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028747320175171,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,285,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (81331 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.0299551486969,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,272,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67355 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028408288955689,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,252,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67529 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029843330383301,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,347,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (86910 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029322862625122,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,281,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (81528 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028605699539185,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,248,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (69168 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.03093433380127,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,87,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63625 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029200553894043,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,277,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (73504 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028644561767578,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,273,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68210 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029155969619751,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,269,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68513 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028830766677857,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,71,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (65034 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028356790542603,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,195,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (64331 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028937578201294,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,290,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (62040 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028934955596924,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,192,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (64288 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029247522354126,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,352,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (86265 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028950452804566,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,96,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67805 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029860973358154,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,286,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (60882 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029002904891968,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,253,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66404 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029443502426148,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,348,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (84694 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028769254684448,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,92,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67964 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030388593673706,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,282,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.01 seconds (53082 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.027966260910034,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,191,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (58567 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028404474258423,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,88,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68788 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029092788696289,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,278,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (81626 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029082775115967,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,245,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67183 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028253793716431,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,274,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68571 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028483152389526,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,241,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (62198 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029162168502808,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,76,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66124 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028611421585083,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,72,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66995 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.02959680557251,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,101,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63823 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028806686401367,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,291,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68893 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029559135437012,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,353,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (83400 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028720378875733,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,97,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (68149 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.02977466583252,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/8a536ed7e7ee216715639b15ffd9f7a1d6aad6d4,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,23,12,349,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 388 in approximately 0.00 seconds (82316 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+] 3.92157 [4+] 3.92157 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028395414352417,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,93,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (69393 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030245780944824,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,193,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (57105 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030363082885742,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,283,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63812 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029859066009522,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,89,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66596 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028810739517212,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/967c874d121a904baf290fab47c8fe4cafd386dd,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,20,6,279,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 354 in approximately 0.00 seconds (82534 lines/second)\nPhysical Source Lines of Code (SLOC) = 235\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 4.25532 [1+] 4.25532 [2+] 4.25532 [3+] 4.25532 [4+] 4.25532 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028951644897461,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,246,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66896 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028778791427612,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,85,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66944 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.02912449836731,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,308,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67496 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.03008770942688,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,242,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (66100 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030244827270508,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/19d4953d3408b3e39e42c7410745262e32a26112,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,33,17,189,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:24:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 252 in approximately 0.00 seconds (62065 lines/second)\nPhysical Source Lines of Code (SLOC) = 175\nHits@level = [0]   1 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   2 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.4286 [1+] 5.71429 [2+] 5.71429 [3+] 5.71429 [4+] 5.71429 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028874635696411,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,304,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (63511 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.030509471893311,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,300,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (67448 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029409646987915,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,267,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (65689 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028617858886719,https://github.com/mlpack/mlpack/commit/0fb85d2a072e0196e97d18210b6cbb171d91a113,https://github.com/mlpack/mlpack/commit/57b114b5e24dd3aa790e071f857c1a545ce06936,fastlib/trunk/contrib/dongryel/thesis_research/core/table/distributed_table.h,137,52,102,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_distributed_table.h:25:  [4] (race) access:\n  This usually indicates a security flaw. If an attacker can change anything\n  along the path between the call to access() and the file's actual use\n  (e.g., by moving files), the attacker can exploit the race condition\n  (CWE-362/CWE-367!). Set up the correct permissions (e.g., using setuid())\n  and try to open the file directly.\n    friend class boost::serialization::access;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 269 in approximately 0.00 seconds (64554 lines/second)\nPhysical Source Lines of Code (SLOC) = 186\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 5.37634 [1+] 5.37634 [2+] 5.37634 [3+] 5.37634 [4+] 5.37634 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.029081344604492,https://github.com/mlpack/mlpack/commit/3372efff07b0602026bdfa2a7b2c8a21ab22cec1,https://github.com/mlpack/mlpack/commit/636942cd0e47542a1452cfa0c2f774f6974273a0,fastlib2/contrib/dongryel/compression/compressed_matrix.h,79,45,35,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_compressed_matrix.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_compressed_matrix.h:84:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(ptr_, tmp_buffer, buffer_size);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 125 in approximately 0.00 seconds (34883 lines/second)\nPhysical Source Lines of Code (SLOC) = 62\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.129 [1+] 16.129 [2+] 16.129 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028522968292236,https://github.com/mlpack/mlpack/commit/3372efff07b0602026bdfa2a7b2c8a21ab22cec1,https://github.com/mlpack/mlpack/commit/636942cd0e47542a1452cfa0c2f774f6974273a0,fastlib2/contrib/dongryel/compression/compressed_matrix.h,79,45,33,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_compressed_matrix.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_compressed_matrix.h:84:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(ptr_, tmp_buffer, buffer_size);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 125 in approximately 0.00 seconds (34823 lines/second)\nPhysical Source Lines of Code (SLOC) = 62\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.129 [1+] 16.129 [2+] 16.129 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,mlpack,0.028783798217774,https://github.com/mlpack/mlpack/commit/3372efff07b0602026bdfa2a7b2c8a21ab22cec1,https://github.com/mlpack/mlpack/commit/636942cd0e47542a1452cfa0c2f774f6974273a0,fastlib2/contrib/dongryel/compression/compressed_matrix.h,79,45,88,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_compressed_matrix.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_compressed_matrix.h:84:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(ptr_, tmp_buffer, buffer_size);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 125 in approximately 0.00 seconds (31608 lines/second)\nPhysical Source Lines of Code (SLOC) = 62\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 16.129 [1+] 16.129 [2+] 16.129 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.033772230148316,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/3abe4fd00ab1eead3a5a35163821a3edac504a36,numpy/core/src/multiarray/common.c,92,30,219,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_common.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_common.c:375:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n        char buf[40];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 722 in approximately 0.01 seconds (100621 lines/second)\nPhysical Source Lines of Code (SLOC) = 567\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 1.76367 [1+] 1.76367 [2+] 1.76367 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.04776668548584,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/ef22bd4e22356df5c35b5a30a69c51d04ac33a3c,numpy/core/src/multiarray/mapping.c,550,559,2363,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:2043:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *subspace_offset[2];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 2711 in approximately 0.02 seconds (129382 lines/second)\nPhysical Source Lines of Code (SLOC) = 1892\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 0.528541 [1+] 0.528541 [2+] 0.528541 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.048480749130249,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/ef22bd4e22356df5c35b5a30a69c51d04ac33a3c,numpy/core/src/multiarray/mapping.c,550,559,2388,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:2043:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *subspace_offset[2];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 2711 in approximately 0.02 seconds (127545 lines/second)\nPhysical Source Lines of Code (SLOC) = 1892\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 0.528541 [1+] 0.528541 [2+] 0.528541 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.044266223907471,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/4b81a240a4ffffea8a502afbdea43d8bf2991228,numpy/core/src/umath/ufunc_type_resolution.c,49,0,2285,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_ufunc_type_resolution.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_ufunc_type_resolution.c:1459:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(n, data, sizeof(_ufunc_masker_data));\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 2259 in approximately 0.02 seconds (128960 lines/second)\nPhysical Source Lines of Code (SLOC) = 1658\nHits@level = [0]   3 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.41255 [1+] 0.603136 [2+] 0.603136 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.047009706497192,https://github.com/numpy/numpy/commit/bc3c7176987a5017126abbc861458fe53cd099fc,https://github.com/numpy/numpy/commit/c5ee7f75d685ab520da528898df2e5570d0ee7f6,numpy/core/src/multiarray/item_selection.c,32,10,2589,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c:601:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n                memcpy(new_data, old_data, chunk);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 2744 in approximately 0.02 seconds (137900 lines/second)\nPhysical Source Lines of Code (SLOC) = 2247\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 0.445038 [1+] 0.445038 [2+] 0.445038 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.04534649848938,https://github.com/numpy/numpy/commit/bc3c7176987a5017126abbc861458fe53cd099fc,https://github.com/numpy/numpy/commit/c5ee7f75d685ab520da528898df2e5570d0ee7f6,numpy/core/src/multiarray/item_selection.c,32,10,2644,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c:601:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n                memcpy(new_data, old_data, chunk);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 2744 in approximately 0.02 seconds (139566 lines/second)\nPhysical Source Lines of Code (SLOC) = 2247\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 0.445038 [1+] 0.445038 [2+] 0.445038 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.048394918441773,https://github.com/numpy/numpy/commit/5a967c9d61f7c2ecce4e215065731a7ab2832574,https://github.com/numpy/numpy/commit/020ec9612e522f2bc6dffb54da00cc4919457541,numpy/core/src/multiarray/mapping.c,35,20,682,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1862:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *baseptrs[2];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 2937 in approximately 0.02 seconds (128547 lines/second)\nPhysical Source Lines of Code (SLOC) = 1997\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 0.500751 [1+] 0.500751 [2+] 0.500751 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.040653705596924,https://github.com/numpy/numpy/commit/c02f1ed4d649e65eb8e3caf2bcf0a1e2f46a16fa,https://github.com/numpy/numpy/commit/094992665c66ec66bb33042bfa1c1dc496e11b5c,numpy/core/src/multiarray/shape.c,12,12,160,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_shape.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_shape.c:350:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n            memcpy(fa->maskna_strides, newmasknastrides,\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 1314 in approximately 0.01 seconds (111923 lines/second)\nPhysical Source Lines of Code (SLOC) = 961\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 1.04058 [1+] 1.04058 [2+] 1.04058 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.035591125488281,https://github.com/numpy/numpy/commit/c02f1ed4d649e65eb8e3caf2bcf0a1e2f46a16fa,https://github.com/numpy/numpy/commit/094992665c66ec66bb33042bfa1c1dc496e11b5c,numpy/core/src/multiarray/shape.c,12,12,144,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_shape.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_shape.c:350:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n            memcpy(fa->maskna_strides, newmasknastrides,\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 1314 in approximately 0.01 seconds (116140 lines/second)\nPhysical Source Lines of Code (SLOC) = 961\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 1.04058 [1+] 1.04058 [2+] 1.04058 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.034482002258301,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,150,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (75480 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.034728765487671,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,489,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (77749 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.032070398330689,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,72,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (77530 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.032620191574097,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,316,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (75988 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.07275915145874,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,151,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (52542 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.032211065292358,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,313,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (78930 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.03777027130127,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,148,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (52797 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.031986713409424,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,404,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (77081 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.03134036064148,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,144,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (73557 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.030931949615479,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,239,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (78045 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.032405614852905,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,149,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (78145 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.034282207489014,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,397,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (78860 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.031338453292847,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,492,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (75847 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.031557321548462,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,75,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (77694 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,numpy,0.032506704330444,https://github.com/numpy/numpy/commit/07201420338f87d0a19ec6b5d756f40350e1f21b,https://github.com/numpy/numpy/commit/c3cea4558bb37ba1e6a7a045c108081a88a88691,numpy/core/src/npysort/quicksort.c.src,36,0,232,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_quicksort.c.src:370:  [2] (buffer) char:\n  Statically-sized arrays can be improperly restricted, leading to potential\n  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use\n  functions that limit length, or ensure that the size is larger than the\n  maximum possible length.\n    char *stack[PYA_QS_STACK];\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 524 in approximately 0.01 seconds (78947 lines/second)\nPhysical Source Lines of Code (SLOC) = 397\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 2.51889 [1+] 2.51889 [2+] 2.51889 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pandas,0.029803037643433,https://github.com/pandas-dev/pandas/commit/681e6a9b07271a0955e6780e476ab2d7101e549c,https://github.com/pandas-dev/pandas/commit/d6e2c7561aba584c694fe3e132e733f6ee3fa605,pandas/src/parser/tokenizer.h,4,1,205,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_tokenizer.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_tokenizer.h:94:  [4] (format) printf:\n  If format strings can be influenced by an attacker, they can be exploited\n  (CWE-134). Use a constant for the format specification.\n#define TRACE(X) printf X;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 267 in approximately 0.00 seconds (60137 lines/second)\nPhysical Source Lines of Code (SLOC) = 154\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 6.49351 [1+] 6.49351 [2+] 6.49351 [3+] 6.49351 [4+] 6.49351 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pandas,0.031948804855347,https://github.com/pandas-dev/pandas/commit/a8b99baa470d70d35fb7007c65eca058561b1852,https://github.com/pandas-dev/pandas/commit/c6c9c0bfc10e24bdd0e4d32f7a8faf7fbc2294b2,pandas/src/parser/tokenizer.h,5,7,273,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_tokenizer.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_tokenizer.h:95:  [4] (format) printf:\n  If format strings can be influenced by an attacker, they can be exploited\n  (CWE-134). Use a constant for the format specification.\n#define TRACE(X) printf X;\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 278 in approximately 0.00 seconds (61802 lines/second)\nPhysical Source Lines of Code (SLOC) = 163\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 6.13497 [1+] 6.13497 [2+] 6.13497 [3+] 6.13497 [4+] 6.13497 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pytorch,0.030904769897461,https://github.com/pytorch/pytorch/commit/02ae9a158334233064a795ca955ad465b3c374d7,https://github.com/pytorch/pytorch/commit/d5236f851714c5d40dbfe4340589036b27e013e7,torch/csrc/cuda/python_nccl.cpp,17,7,285,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_python_nccl.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_python_nccl.cpp:113:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n  memcpy(&commId, id, NCCL_UNIQUE_ID_BYTES);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 299 in approximately 0.00 seconds (62831 lines/second)\nPhysical Source Lines of Code (SLOC) = 255\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.92157 [1+] 3.92157 [2+] 3.92157 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pytorch,0.031311273574829,https://github.com/pytorch/pytorch/commit/02ae9a158334233064a795ca955ad465b3c374d7,https://github.com/pytorch/pytorch/commit/b4d0dc77bea77ea6704b10ec939c12782f41a7c8,torch/csrc/cuda/python_nccl.cpp,136,67,373,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_python_nccl.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_python_nccl.cpp:111:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n  memcpy(&commId, id, NCCL_UNIQUE_ID_BYTES);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 312 in approximately 0.01 seconds (58252 lines/second)\nPhysical Source Lines of Code (SLOC) = 254\nHits@level = [0]   0 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.93701 [1+] 3.93701 [2+] 3.93701 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pytorch,0.031252861022949,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/cb8b2f06366688a7cf0a5c472717a93856266486,aten/src/ATen/core/dispatch/Dispatcher.cpp,1,2,208,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp:53:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return operatorLookupTable_.read([&] (const ska::flat_hash_map<OperatorName, OperatorHandle>& operatorLookupTable) -> c10::optional<OperatorHandle> {\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 335 in approximately 0.01 seconds (62109 lines/second)\nPhysical Source Lines of Code (SLOC) = 254\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.93701 [1+] 3.93701 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pytorch,0.031200408935547,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,aten/src/ATen/core/dispatch/Dispatcher.cpp,2,1,209,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp:53:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return operatorLookupTable_.read([&] (const ska::flat_hash_map<OperatorName, OperatorHandle>& operatorLookupTable) -> c10::optional<OperatorHandle> {\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 334 in approximately 0.01 seconds (60008 lines/second)\nPhysical Source Lines of Code (SLOC) = 253\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.95257 [1+] 3.95257 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pytorch,0.03077244758606,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/9e3605de98abb969124faff96e6e90e4f4014eb6,aten/src/ATen/core/dispatch/Dispatcher.cpp,138,42,186,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp:53:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return operatorLookupTable_.read([&] (const ska::flat_hash_map<OperatorName, OperatorHandle>& operatorLookupTable) -> c10::optional<OperatorHandle> {\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 190 in approximately 0.00 seconds (41963 lines/second)\nPhysical Source Lines of Code (SLOC) = 147\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 6.80272 [1+] 6.80272 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,pytorch,0.029112815856934,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/9e3605de98abb969124faff96e6e90e4f4014eb6,aten/src/ATen/core/dispatch/Dispatcher.cpp,138,42,186,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.cpp:53:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return operatorLookupTable_.read([&] (const ska::flat_hash_map<OperatorName, OperatorHandle>& operatorLookupTable) -> c10::optional<OperatorHandle> {\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 190 in approximately 0.00 seconds (43934 lines/second)\nPhysical Source Lines of Code (SLOC) = 147\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 6.80272 [1+] 6.80272 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.03272271156311,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/f43cc928b453b9245123352795fa7f6f1f666a52,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,32,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c:32:  [4] (format) fprintf:\n  If format strings can be influenced by an attacker, they can be exploited\n  (CWE-134). Use a constant for the format specification.\n    fprintf(stderr, msg);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 485 in approximately 0.01 seconds (67108 lines/second)\nPhysical Source Lines of Code (SLOC) = 335\nHits@level = [0]  42 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]  43 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 128.358 [1+] 2.98507 [2+] 2.98507 [3+] 2.98507 [4+] 2.98507 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.031222105026245,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/51ff6dcdb111891a966b92f8eb294564c9b4947f,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,31,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c:31:  [4] (format) fprintf:\n  If format strings can be influenced by an attacker, they can be exploited\n  (CWE-134). Use a constant for the format specification.\n    fprintf(stderr, msg);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 392 in approximately 0.01 seconds (68200 lines/second)\nPhysical Source Lines of Code (SLOC) = 258\nHits@level = [0]  17 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]  18 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 69.7674 [1+] 3.87597 [2+] 3.87597 [3+] 3.87597 [4+] 3.87597 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032350778579712,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,723,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72849 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033658027648926,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,719,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72216 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033289194107056,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,711,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (71125 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.034759998321533,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,707,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (64406 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.034530401229858,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,641,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (67652 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.03223466873169,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,637,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (71877 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033132314682007,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,732,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (70764 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033529996871948,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,699,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (70625 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.034651279449463,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,728,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (71679 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033082485198975,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,724,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (71214 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.036220073699951,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,592,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (67633 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033227682113648,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,720,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73926 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032433748245239,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,716,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73344 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033022165298462,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,555,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72323 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033743858337402,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,712,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73563 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033291816711426,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,700,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (71861 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032254695892334,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,721,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73855 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033037424087525,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,717,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72921 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032346963882446,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,713,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73775 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032636404037476,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,709,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73563 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033839225769043,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,730,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (66900 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032769918441773,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,726,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72482 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032737255096436,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,722,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72312 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032936573028565,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,718,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73022 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033722162246704,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,710,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (72205 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.034299850463867,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,677,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (74444 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.03343939781189,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,706,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (68453 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.032777070999146,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,640,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73361 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.033121824264526,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,731,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (73418 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,scipy,0.03278660774231,https://github.com/scipy/scipy/commit/58280fdcc920c6fc52ca9b507b64bb8dbaf8f828,https://github.com/scipy/scipy/commit/6c6233d5fd2eaa3a20522be01bcbf68434f153f2,Lib/io/numpyiomodule.c,307,21,727,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_numpyiomodule.c:166:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n    memcpy(buff_ptr, arr->data+indx, arr->descr->elsize);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 652 in approximately 0.01 seconds (70308 lines/second)\nPhysical Source Lines of Code (SLOC) = 449\nHits@level = [0]   6 [1]   0 [2]   1 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   7 [1+]   1 [2+]   1 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 15.5902 [1+] 2.22717 [2+] 2.22717 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.033689022064209,https://github.com/tensorflow/tensorflow/commit/1afe51a60cbda6fc42b157f6393063052208da70,https://github.com/tensorflow/tensorflow/commit/eabc157fd52200f21f06c61f7686230ea20295b9,tensorflow/core/framework/model.h,124,52,140,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 687 in approximately 0.01 seconds (98230 lines/second)\nPhysical Source Lines of Code (SLOC) = 388\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.57732 [1+] 2.57732 [2+] 2.57732 [3+] 2.57732 [4+] 2.57732 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.032425880432129,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/83d65b152b6b1ed1e622c59d908e76d8d2e7d07b,tensorflow/core/framework/model.h,54,51,423,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 684 in approximately 0.01 seconds (99030 lines/second)\nPhysical Source Lines of Code (SLOC) = 385\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.5974 [1+] 2.5974 [2+] 2.5974 [3+] 2.5974 [4+] 2.5974 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.031082630157471,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/600336f712218e0af3d8387d9051256c31a296f5,tensorflow/core/framework/model.h,22,10,550,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:177:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 568 in approximately 0.01 seconds (88835 lines/second)\nPhysical Source Lines of Code (SLOC) = 317\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.15457 [1+] 3.15457 [2+] 3.15457 [3+] 3.15457 [4+] 3.15457 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.031130313873291,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/600336f712218e0af3d8387d9051256c31a296f5,tensorflow/core/framework/model.h,22,10,355,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:177:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 568 in approximately 0.01 seconds (88871 lines/second)\nPhysical Source Lines of Code (SLOC) = 317\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.15457 [1+] 3.15457 [2+] 3.15457 [3+] 3.15457 [4+] 3.15457 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.031189203262329,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/83d65b152b6b1ed1e622c59d908e76d8d2e7d07b,tensorflow/core/framework/model.h,54,51,668,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 684 in approximately 0.01 seconds (97221 lines/second)\nPhysical Source Lines of Code (SLOC) = 385\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.5974 [1+] 2.5974 [2+] 2.5974 [3+] 2.5974 [4+] 2.5974 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.031018972396851,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/43a408b8ac4776d0715fbdca7279cba59c1c2f73,tensorflow/core/framework/model.h,24,5,316,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:178:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 590 in approximately 0.01 seconds (87418 lines/second)\nPhysical Source Lines of Code (SLOC) = 323\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.09598 [1+] 3.09598 [2+] 3.09598 [3+] 3.09598 [4+] 3.09598 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.032984733581543,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/ac10027777d5a3e9bbfc7811b225632190429bb1,tensorflow/core/framework/model.h,13,178,377,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:198:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 759 in approximately 0.01 seconds (96093 lines/second)\nPhysical Source Lines of Code (SLOC) = 446\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.24215 [1+] 2.24215 [2+] 2.24215 [3+] 2.24215 [4+] 2.24215 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.033648490905762,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/83d65b152b6b1ed1e622c59d908e76d8d2e7d07b,tensorflow/core/framework/model.h,54,51,407,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 684 in approximately 0.01 seconds (89296 lines/second)\nPhysical Source Lines of Code (SLOC) = 385\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.5974 [1+] 2.5974 [2+] 2.5974 [3+] 2.5974 [4+] 2.5974 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.031556844711304,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/83d65b152b6b1ed1e622c59d908e76d8d2e7d07b,tensorflow/core/framework/model.h,54,51,503,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 684 in approximately 0.01 seconds (97522 lines/second)\nPhysical Source Lines of Code (SLOC) = 385\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.5974 [1+] 2.5974 [2+] 2.5974 [3+] 2.5974 [4+] 2.5974 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.030731201171875,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/600336f712218e0af3d8387d9051256c31a296f5,tensorflow/core/framework/model.h,22,10,277,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:177:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 568 in approximately 0.01 seconds (86764 lines/second)\nPhysical Source Lines of Code (SLOC) = 317\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.15457 [1+] 3.15457 [2+] 3.15457 [3+] 3.15457 [4+] 3.15457 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.030674457550049,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/600336f712218e0af3d8387d9051256c31a296f5,tensorflow/core/framework/model.h,22,10,339,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:177:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 568 in approximately 0.01 seconds (86224 lines/second)\nPhysical Source Lines of Code (SLOC) = 317\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.15457 [1+] 3.15457 [2+] 3.15457 [3+] 3.15457 [4+] 3.15457 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.03170657157898,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/ac10027777d5a3e9bbfc7811b225632190429bb1,tensorflow/core/framework/model.h,13,178,396,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:198:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 759 in approximately 0.01 seconds (101858 lines/second)\nPhysical Source Lines of Code (SLOC) = 446\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.24215 [1+] 2.24215 [2+] 2.24215 [3+] 2.24215 [4+] 2.24215 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.031579494476318,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/43a408b8ac4776d0715fbdca7279cba59c1c2f73,tensorflow/core/framework/model.h,24,5,555,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:178:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 590 in approximately 0.01 seconds (88044 lines/second)\nPhysical Source Lines of Code (SLOC) = 323\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.09598 [1+] 3.09598 [2+] 3.09598 [3+] 3.09598 [4+] 3.09598 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.033350944519043,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/eabc157fd52200f21f06c61f7686230ea20295b9,tensorflow/core/framework/model.h,124,52,588,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 687 in approximately 0.01 seconds (95864 lines/second)\nPhysical Source Lines of Code (SLOC) = 388\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.57732 [1+] 2.57732 [2+] 2.57732 [3+] 2.57732 [4+] 2.57732 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.03148078918457,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/83d65b152b6b1ed1e622c59d908e76d8d2e7d07b,tensorflow/core/framework/model.h,54,51,504,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:180:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 684 in approximately 0.01 seconds (97403 lines/second)\nPhysical Source Lines of Code (SLOC) = 385\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 2.5974 [1+] 2.5974 [2+] 2.5974 [3+] 2.5974 [4+] 2.5974 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.03282904624939,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/43a408b8ac4776d0715fbdca7279cba59c1c2f73,tensorflow/core/framework/model.h,24,5,556,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:178:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 590 in approximately 0.01 seconds (93098 lines/second)\nPhysical Source Lines of Code (SLOC) = 323\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.09598 [1+] 3.09598 [2+] 3.09598 [3+] 3.09598 [4+] 3.09598 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.033878087997437,https://github.com/tensorflow/tensorflow/commit/96498f7fb36e8fcc660cc9444ab0b30f6064cb72,https://github.com/tensorflow/tensorflow/commit/43a408b8ac4776d0715fbdca7279cba59c1c2f73,tensorflow/core/framework/model.h,24,5,424,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_model.h:178:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n  string long_name() const { return strings::StrCat(name_, ""(id:"", id_, "")""); }\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 590 in approximately 0.01 seconds (91134 lines/second)\nPhysical Source Lines of Code (SLOC) = 323\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 3.09598 [1+] 3.09598 [2+] 3.09598 [3+] 3.09598 [4+] 3.09598 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.03015661239624,https://github.com/tensorflow/tensorflow/commit/e2f6723772345d6b83fac92cf5737f19a68dfca6,https://github.com/tensorflow/tensorflow/commit/f4eb302af826048b59706e0311764c6e87c1c6e2,third_party/mlir/lib/Parser/Lexer.cpp,93,93,239,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp:128:  [1] (buffer) equal:\n  Function does not check the second iterator for over-read conditions\n  (CWE-126). This function is often discouraged by most C++ coding standards\n  in favor of its safer alternatives provided since C++14. Consider using a\n  form of this function that checks the second iterator before potentially\n  overflowing it.\n    return formToken(Token::equal, tokStart);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 401 in approximately 0.01 seconds (76772 lines/second)\nPhysical Source Lines of Code (SLOC) = 267\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.74532 [1+] 3.74532 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.029174089431763,https://github.com/tensorflow/tensorflow/commit/e2f6723772345d6b83fac92cf5737f19a68dfca6,https://github.com/tensorflow/tensorflow/commit/9c08346505ca26fc77fc1fe4534169307f9a6e36,third_party/mlir/lib/Parser/Lexer.cpp,16,0,109,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp:126:  [1] (buffer) equal:\n  Function does not check the second iterator for over-read conditions\n  (CWE-126). This function is often discouraged by most C++ coding standards\n  in favor of its safer alternatives provided since C++14. Consider using a\n  form of this function that checks the second iterator before potentially\n  overflowing it.\n    return formToken(Token::equal, tokStart);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 385 in approximately 0.01 seconds (75244 lines/second)\nPhysical Source Lines of Code (SLOC) = 258\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.87597 [1+] 3.87597 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.029065608978272,https://github.com/tensorflow/tensorflow/commit/e2f6723772345d6b83fac92cf5737f19a68dfca6,https://github.com/tensorflow/tensorflow/commit/9c08346505ca26fc77fc1fe4534169307f9a6e36,third_party/mlir/lib/Parser/Lexer.cpp,16,0,110,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp:126:  [1] (buffer) equal:\n  Function does not check the second iterator for over-read conditions\n  (CWE-126). This function is often discouraged by most C++ coding standards\n  in favor of its safer alternatives provided since C++14. Consider using a\n  form of this function that checks the second iterator before potentially\n  overflowing it.\n    return formToken(Token::equal, tokStart);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 385 in approximately 0.01 seconds (75977 lines/second)\nPhysical Source Lines of Code (SLOC) = 258\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.87597 [1+] 3.87597 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.030846118927002,https://github.com/tensorflow/tensorflow/commit/e2f6723772345d6b83fac92cf5737f19a68dfca6,https://github.com/tensorflow/tensorflow/commit/f4eb302af826048b59706e0311764c6e87c1c6e2,third_party/mlir/lib/Parser/Lexer.cpp,93,93,244,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp:128:  [1] (buffer) equal:\n  Function does not check the second iterator for over-read conditions\n  (CWE-126). This function is often discouraged by most C++ coding standards\n  in favor of its safer alternatives provided since C++14. Consider using a\n  form of this function that checks the second iterator before potentially\n  overflowing it.\n    return formToken(Token::equal, tokStart);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 401 in approximately 0.01 seconds (76482 lines/second)\nPhysical Source Lines of Code (SLOC) = 267\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.74532 [1+] 3.74532 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.029433250427246,https://github.com/tensorflow/tensorflow/commit/e2f6723772345d6b83fac92cf5737f19a68dfca6,https://github.com/tensorflow/tensorflow/commit/f4eb302af826048b59706e0311764c6e87c1c6e2,third_party/mlir/lib/Parser/Lexer.cpp,93,93,229,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_Lexer.cpp:128:  [1] (buffer) equal:\n  Function does not check the second iterator for over-read conditions\n  (CWE-126). This function is often discouraged by most C++ coding standards\n  in favor of its safer alternatives provided since C++14. Consider using a\n  form of this function that checks the second iterator before potentially\n  overflowing it.\n    return formToken(Token::equal, tokStart);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 401 in approximately 0.01 seconds (77096 lines/second)\nPhysical Source Lines of Code (SLOC) = 267\nHits@level = [0]   0 [1]   1 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 3.74532 [1+] 3.74532 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,diff,tensorflow,0.0297110080719,https://github.com/tensorflow/tensorflow/commit/414470329b203158a7ac670e99d73e7d04dbd724,https://github.com/tensorflow/tensorflow/commit/61197393ab39929e945e9adf1378659a5c2bbab1,tensorflow/compiler/xla/service/backend.h,11,21,170,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_backend.h\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_backend.h:136:  [4] (buffer) StrCat:\n  Does not check for buffer overflows when concatenating to destination\n  [MS-banned] (CWE-120).\n    return tensorflow::strings::StrCat(platform_->Name(), "":"", device_ordinal);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 195 in approximately 0.00 seconds (44823 lines/second)\nPhysical Source Lines of Code (SLOC) = 88\nHits@level = [0]   0 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]   1 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 11.3636 [1+] 11.3636 [2+] 11.3636 [3+] 11.3636 [4+] 11.3636 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,mlpack,0.006026268005371,https://github.com/mlpack/mlpack/commit/331ef56c40686b9ad9b2cde238d438829dc431e7,https://github.com/mlpack/mlpack/commit/e06cfc8f950430060506bc895a94f69b1f3fb29d,src/mlpack/core/util/backtrace.cpp,2,2,94,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_backtrace.cpp</name>\n    <line>111</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,mlpack,0.006818771362305,https://github.com/mlpack/mlpack/commit/331ef56c40686b9ad9b2cde238d438829dc431e7,https://github.com/mlpack/mlpack/commit/a090df738c120e5feb2ef9fa1afe19cfffa93d12,src/mlpack/core/util/backtrace.cpp,2,1,52,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_backtrace.cpp</name>\n    <line>115</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,mlpack,0.008174419403076,https://github.com/mlpack/mlpack/commit/331ef56c40686b9ad9b2cde238d438829dc431e7,https://github.com/mlpack/mlpack/commit/a090df738c120e5feb2ef9fa1afe19cfffa93d12,src/mlpack/core/util/backtrace.cpp,2,1,51,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_backtrace.cpp</name>\n    <line>115</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,mlpack,0.007400751113892,https://github.com/mlpack/mlpack/commit/331ef56c40686b9ad9b2cde238d438829dc431e7,https://github.com/mlpack/mlpack/commit/59d07efe735a618ce10c636be3810ab7d1b02c18,src/mlpack/core/util/backtrace.cpp,9,9,148,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_backtrace.cpp</name>\n    <line>118</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009664058685303,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/3abe4fd00ab1eead3a5a35163821a3edac504a36,numpy/core/src/multiarray/common.c,92,30,219,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_common.c</name>\n    <line>375</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009579658508301,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/64edab687abce12c09b60ab78db2666738b37ef2,numpy/core/src/multiarray/item_selection.c,20,9,2225,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c</name>\n    <line>647</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.00980806350708,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/ef22bd4e22356df5c35b5a30a69c51d04ac33a3c,numpy/core/src/multiarray/mapping.c,550,559,2363,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>2043</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009766340255737,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/ef22bd4e22356df5c35b5a30a69c51d04ac33a3c,numpy/core/src/multiarray/mapping.c,550,559,2388,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>2043</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009595394134521,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/4b81a240a4ffffea8a502afbdea43d8bf2991228,numpy/core/src/umath/ufunc_type_resolution.c,49,0,2285,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_ufunc_type_resolution.c</name>\n    <line>1459</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009311676025391,https://github.com/numpy/numpy/commit/bc3c7176987a5017126abbc861458fe53cd099fc,https://github.com/numpy/numpy/commit/c5ee7f75d685ab520da528898df2e5570d0ee7f6,numpy/core/src/multiarray/item_selection.c,32,10,2589,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c</name>\n    <line>601</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009225130081177,https://github.com/numpy/numpy/commit/bc3c7176987a5017126abbc861458fe53cd099fc,https://github.com/numpy/numpy/commit/c5ee7f75d685ab520da528898df2e5570d0ee7f6,numpy/core/src/multiarray/item_selection.c,32,10,2644,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c</name>\n    <line>601</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009223937988281,https://github.com/numpy/numpy/commit/5a967c9d61f7c2ecce4e215065731a7ab2832574,https://github.com/numpy/numpy/commit/020ec9612e522f2bc6dffb54da00cc4919457541,numpy/core/src/multiarray/mapping.c,35,20,682,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1862</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.00803542137146,https://github.com/numpy/numpy/commit/c02f1ed4d649e65eb8e3caf2bcf0a1e2f46a16fa,https://github.com/numpy/numpy/commit/094992665c66ec66bb33042bfa1c1dc496e11b5c,numpy/core/src/multiarray/shape.c,12,12,160,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_shape.c</name>\n    <line>350</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.008304834365845,https://github.com/numpy/numpy/commit/c02f1ed4d649e65eb8e3caf2bcf0a1e2f46a16fa,https://github.com/numpy/numpy/commit/094992665c66ec66bb33042bfa1c1dc496e11b5c,numpy/core/src/multiarray/shape.c,12,12,144,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_shape.c</name>\n    <line>350</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.009204626083374,https://github.com/numpy/numpy/commit/d73f23b092c3b44c279412c4833eb6bd953b713a,https://github.com/numpy/numpy/commit/0ac3920c1c1a015deb416bd93c370f4f9ab0baf0,numpy/core/src/multiarray/item_selection.c,58,228,1244,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c</name>\n    <line>628</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,numpy,0.008392333984375,https://github.com/numpy/numpy/commit/d73f23b092c3b44c279412c4833eb6bd953b713a,https://github.com/numpy/numpy/commit/0ac3920c1c1a015deb416bd93c370f4f9ab0baf0,numpy/core/src/multiarray/item_selection.c,58,228,1233,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_item_selection.c</name>\n    <line>628</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.007724761962891,https://github.com/pytorch/pytorch/commit/02ae9a158334233064a795ca955ad465b3c374d7,https://github.com/pytorch/pytorch/commit/d5236f851714c5d40dbfe4340589036b27e013e7,torch/csrc/cuda/python_nccl.cpp,17,7,285,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_python_nccl.cpp</name>\n    <line>113</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.007129907608032,https://github.com/pytorch/pytorch/commit/02ae9a158334233064a795ca955ad465b3c374d7,https://github.com/pytorch/pytorch/commit/b4d0dc77bea77ea6704b10ec939c12782f41a7c8,torch/csrc/cuda/python_nccl.cpp,136,67,373,1,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_python_nccl.cpp</name>\n    <line>111</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.00857949256897,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/cb8b2f06366688a7cf0a5c472717a93856266486,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,214,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.00889253616333,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/cb8b2f06366688a7cf0a5c472717a93856266486,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,213,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008723974227905,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,206,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008582830429077,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/70f375becf97151edb5d44b773072b64d504c61f,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,105,21,219,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>191</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.00804615020752,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/cb8b2f06366688a7cf0a5c472717a93856266486,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,212,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008272171020508,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,214,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008880376815796,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/5af4e766835797622b444053776254f3c94c2bf8,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,8,16,214,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>249</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008844375610352,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/cb8b2f06366688a7cf0a5c472717a93856266486,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,205,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.009068489074707,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/cb8b2f06366688a7cf0a5c472717a93856266486,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,5,5,204,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>239</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.007845640182495,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/70f375becf97151edb5d44b773072b64d504c61f,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,105,21,219,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>191</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008405208587646,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/70f375becf97151edb5d44b773072b64d504c61f,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,105,21,217,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>191</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008797883987427,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/5af4e766835797622b444053776254f3c94c2bf8,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,8,16,216,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>249</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008617401123047,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/363a2d9455d461c6d46442bf32febf54dda8639a,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,16,8,224,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>241</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.010025501251221,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/423a00ad391dd95676497aeb393a6001906c8d7c,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,8,16,216,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>249</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.007831811904907,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/70f375becf97151edb5d44b773072b64d504c61f,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,105,21,220,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>191</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,pytorch,0.008929491043091,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/5af4e766835797622b444053776254f3c94c2bf8,torch/csrc/jit/passes/onnx/unpack_quantized_weights.cpp,8,16,214,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_unpack_quantized_weights.cpp</name>\n    <line>249</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,scipy,0.007213830947876,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/280524810d0e7ac16e2e77507f3e756ce87e4de1,scipy/signal/firfilter.c,1,1,68,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>108</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,scipy,0.007620096206665,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/f43cc928b453b9245123352795fa7f6f1f666a52,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,32,1,detected,['\n  <severity>High</severity>\n  <type>fprintf</type>\n  <message>\n    Check to be sure that the non-constant format string passed as argument 2 \n    to this function call does not come from an untrusted source that could\n    have added formatting characters that the code is not prepared to handle.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c</name>\n    <line>32</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,diff,scipy,0.00710940361023,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/51ff6dcdb111891a966b92f8eb294564c9b4947f,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,31,1,detected,['\n  <severity>High</severity>\n  <type>fprintf</type>\n  <message>\n    Check to be sure that the non-constant format string passed as argument 2 \n    to this function call does not come from an untrusted source that could\n    have added formatting characters that the code is not prepared to handle.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c</name>\n    <line>31</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,numpy,0.088720560073853,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/607863d7387e80dab4b064856b598a8c86e9bee4,numpy/core/src/multiarray/mapping.c,1134,1111,2036,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1662:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n        memcpy(coord, mit->bscoord, sizeof(npy_intp)*PyArray_NDIM(mit->ait->ao));","/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1719:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n            memcpy(coord, mit->bscoord,","/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:2026:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n        memcpy(mit->dimensions, PyArray_DIMS(arr), mit->nd*sizeof(npy_intp));\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 2230 in approximately 0.02 seconds (130414 lines/second)\nPhysical Source Lines of Code (SLOC) = 1724\nHits@level = [0]   0 [1]   0 [2]   3 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   3 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 1.74014 [1+] 1.74014 [2+] 1.74014 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,numpy,0.089505672454834,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/607863d7387e80dab4b064856b598a8c86e9bee4,numpy/core/src/multiarray/mapping.c,1134,1111,2055,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1662:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n        memcpy(coord, mit->bscoord, sizeof(npy_intp)*PyArray_NDIM(mit->ait->ao));","/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1719:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n            memcpy(coord, mit->bscoord,","/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:2026:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n        memcpy(mit->dimensions, PyArray_DIMS(arr), mit->nd*sizeof(npy_intp));\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 2230 in approximately 0.02 seconds (125272 lines/second)\nPhysical Source Lines of Code (SLOC) = 1724\nHits@level = [0]   0 [1]   0 [2]   3 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   3 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 1.74014 [1+] 1.74014 [2+] 1.74014 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,numpy,0.088296175003052,https://github.com/numpy/numpy/commit/5a967c9d61f7c2ecce4e215065731a7ab2832574,https://github.com/numpy/numpy/commit/607863d7387e80dab4b064856b598a8c86e9bee4,numpy/core/src/multiarray/mapping.c,1134,1111,626,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1662:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n        memcpy(coord, mit->bscoord, sizeof(npy_intp)*PyArray_NDIM(mit->ait->ao));","/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:1719:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n            memcpy(coord, mit->bscoord,","/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c:2026:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n        memcpy(mit->dimensions, PyArray_DIMS(arr), mit->nd*sizeof(npy_intp));\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 2230 in approximately 0.02 seconds (132023 lines/second)\nPhysical Source Lines of Code (SLOC) = 1724\nHits@level = [0]   0 [1]   0 [2]   3 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   3 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 1.74014 [1+] 1.74014 [2+] 1.74014 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,pytorch,0.064050436019898,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/7b5045be9d9f15acaf93dd265deafb01f50185e2,aten/src/ATen/core/dispatch/Dispatcher.h,18,51,180,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:186:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:208:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:218:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n    return backendFallbackKernels_.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) {\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 261 in approximately 0.01 seconds (46398 lines/second)\nPhysical Source Lines of Code (SLOC) = 148\nHits@level = [0]   0 [1]   3 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 20.2703 [1+] 20.2703 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,pytorch,0.064958810806275,https://github.com/pytorch/pytorch/commit/86b1afa039f3fba83f082382b7c62b896fb98e09,https://github.com/pytorch/pytorch/commit/7b5045be9d9f15acaf93dd265deafb01f50185e2,aten/src/ATen/core/dispatch/Dispatcher.h,18,51,180,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:186:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:208:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:218:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n    return backendFallbackKernels_.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) {\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 261 in approximately 0.01 seconds (46465 lines/second)\nPhysical Source Lines of Code (SLOC) = 148\nHits@level = [0]   0 [1]   3 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 20.2703 [1+] 20.2703 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,pytorch,0.065639495849609,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/7b5045be9d9f15acaf93dd265deafb01f50185e2,aten/src/ATen/core/dispatch/Dispatcher.h,18,51,180,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:186:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:208:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:218:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n    return backendFallbackKernels_.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) {\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 261 in approximately 0.01 seconds (44569 lines/second)\nPhysical Source Lines of Code (SLOC) = 148\nHits@level = [0]   0 [1]   3 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 20.2703 [1+] 20.2703 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,pytorch,0.064433097839356,https://github.com/pytorch/pytorch/commit/55cdd31bd049ea5313be18239ac1b4ae53f6c0f9,https://github.com/pytorch/pytorch/commit/7b5045be9d9f15acaf93dd265deafb01f50185e2,aten/src/ATen/core/dispatch/Dispatcher.h,18,51,180,3,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:186:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:208:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n  return backendFallbackKernels.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) -> Return {","/media/nimashiri/DATA/vsprojects/ICSE23/vul_Dispatcher.h:218:  [1] (buffer) read:\n  Check buffer boundaries if used in a loop including recursive loops\n  (CWE-120, CWE-20).\n    return backendFallbackKernels_.read([&] (const ska::flat_hash_map<TensorTypeId, KernelFunction>& backendFallbackKernels) {\n\nANALYSIS SUMMARY:\n\nHits = 3\nLines analyzed = 261 in approximately 0.01 seconds (46841 lines/second)\nPhysical Source Lines of Code (SLOC) = 148\nHits@level = [0]   0 [1]   3 [2]   0 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   3 [1+]   3 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 20.2703 [1+] 20.2703 [2+]   0 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.070056438446045,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,188,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.01 seconds (36701 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.066817283630371,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,184,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (39433 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.076150417327881,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,135,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.01 seconds (36797 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.070493459701538,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,205,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.01 seconds (38126 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.072180986404419,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,27,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.01 seconds (38471 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.07425594329834,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,68,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.01 seconds (38039 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.072685480117798,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,190,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (40062 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.067438840866089,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,28,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (39681 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.06828498840332,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,186,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (39269 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.06450891494751,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,24,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (41570 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.063568830490112,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,120,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (41662 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.061633586883545,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,182,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (41928 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.065006256103516,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,116,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.01 seconds (28581 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.061639785766602,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,211,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (40877 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.061824083328247,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,207,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (40994 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.061394929885864,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,30,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (40801 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.064053297042847,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,187,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (39891 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.062090396881104,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,212,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (41110 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.06151032447815,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,208,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (40949 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.060878038406372,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,204,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (39103 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.064090967178345,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,67,4,detected,"/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:164:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	  if (bounds_pad_flag) memcpy(value,fillvalue,type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:178:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    if (bounds_pad_flag) memcpy(value, fillvalue, type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:179:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	    else memcpy(value, in+ind0_memory+ind1*instr[1], type_size);","/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c:184:  [2] (buffer) memcpy:\n  Does not check for buffer overflows when copying to destination (CWE-120).\n  Make sure destination can always hold the source data.\n	memcpy(out+m*outstr[0]+n*outstr[1], sum, type_size);\n\nANALYSIS SUMMARY:\n\nHits = 4\nLines analyzed = 194 in approximately 0.00 seconds (40986 lines/second)\nPhysical Source Lines of Code (SLOC) = 157\nHits@level = [0]   0 [1]   0 [2]   4 [3]   0 [4]   0 [5]   0\nHits@level+ = [0+]   4 [1+]   4 [2+]   4 [3+]   0 [4+]   0 [5+]   0\nHits/KSLOC@level+ = [0+] 25.4777 [1+] 25.4777 [2+] 25.4777 [3+]   0 [4+]   0 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.068978309631348,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/f43cc928b453b9245123352795fa7f6f1f666a52,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,32,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c:32:  [4] (format) fprintf:\n  If format strings can be influenced by an attacker, they can be exploited\n  (CWE-134). Use a constant for the format specification.\n    fprintf(stderr, msg);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 485 in approximately 0.01 seconds (62373 lines/second)\nPhysical Source Lines of Code (SLOC) = 335\nHits@level = [0]  42 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]  43 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 128.358 [1+] 2.98507 [2+] 2.98507 [3+] 2.98507 [4+] 2.98507 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flawfinder,fixed,scipy,0.063505411148071,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/51ff6dcdb111891a966b92f8eb294564c9b4947f,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,31,1,detected,"Number of rules (primarily dangerous function names) in C/C++ ruleset: 222\nExamining /media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c\n\nFINAL RESULTS:\n\n/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c:31:  [4] (format) fprintf:\n  If format strings can be influenced by an attacker, they can be exploited\n  (CWE-134). Use a constant for the format specification.\n    fprintf(stderr, msg);\n\nANALYSIS SUMMARY:\n\nHits = 1\nLines analyzed = 392 in approximately 0.01 seconds (66978 lines/second)\nPhysical Source Lines of Code (SLOC) = 258\nHits@level = [0]  17 [1]   0 [2]   0 [3]   0 [4]   1 [5]   0\nHits@level+ = [0+]  18 [1+]   1 [2+]   1 [3+]   1 [4+]   1 [5+]   0\nHits/KSLOC@level+ = [0+] 69.7674 [1+] 3.87597 [2+] 3.87597 [3+] 3.87597 [4+] 3.87597 [5+]   0\nMinimum risk level = 1\n\nNot every hit is necessarily a security vulnerability.\nYou can inhibit a report by adding a comment in this form:\n// flawfinder: ignore\nMake *sure* it's a false positive!\nYou can use the option --neverignore to show these.\n\nThere may be other security vulnerabilities; review your code!\nSee 'Secure Programming HOWTO'\n(https://dwheeler.com/secure-programs) for more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,numpy,0.016172647476196,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/607863d7387e80dab4b064856b598a8c86e9bee4,numpy/core/src/multiarray/mapping.c,1134,1111,2036,3,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,numpy,0.016277313232422,https://github.com/numpy/numpy/commit/deea4983aedfa96905bbaee64e3d1de84144303f,https://github.com/numpy/numpy/commit/607863d7387e80dab4b064856b598a8c86e9bee4,numpy/core/src/multiarray/mapping.c,1134,1111,2055,3,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,numpy,0.014865159988403,https://github.com/numpy/numpy/commit/5a967c9d61f7c2ecce4e215065731a7ab2832574,https://github.com/numpy/numpy/commit/607863d7387e80dab4b064856b598a8c86e9bee4,numpy/core/src/multiarray/mapping.c,1134,1111,626,3,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_mapping.c</name>\n    <line>1662</line>\n    <line>1719</line>\n    <line>2026</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.014807462692261,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,188,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.012567758560181,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,184,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.015172719955444,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,135,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013138771057129,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,205,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013055562973023,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,27,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.01353669166565,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,68,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.01310658454895,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,190,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.01330304145813,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,28,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013042688369751,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,186,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013715028762817,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,24,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.01464581489563,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,120,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.012967348098755,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,182,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.018219470977783,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,116,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013552904129028,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,211,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.01301908493042,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,207,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013680696487427,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,30,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013421535491943,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,187,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.012833118438721,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,212,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013800382614136,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,208,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.01359748840332,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,204,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013098239898682,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/280524810d0e7ac16e2e77507f3e756ce87e4de1,scipy/signal/firfilter.c,1,1,68,1,detected,['\n  <severity>High</severity>\n  <type>fixed size global buffer</type>\n  <message>\n    Extra care should be taken to ensure that character arrays that are\n    allocated on the stack are used safely.  They are prime targets for\n    buffer overflow attacks.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>108</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.013613700866699,https://github.com/scipy/scipy/commit/fd3e8c0b871f6033bfd779e69ded86944f7f039c,https://github.com/scipy/scipy/commit/7f3c5c899de09d5c3ca6f89e63732feabe301fda,scipy/signal/firfilter.c,47,19,67,4,detected,"['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']","['\n  <severity>Low</severity>\n  <type>memcpy</type>\n  <message>\n    Double check that your buffer is as big as you specify.\nWhen using functions that accept a number n of bytes to copy, such as \nstrncpy, be aware that if the dest buffer size = n it may not NULL-terminate \nthe string.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_firfilter.c</name>\n    <line>164</line>\n    <line>178</line>\n    <line>179</line>\n    <line>184</line>\n  </file>\n']",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.012466669082642,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/f43cc928b453b9245123352795fa7f6f1f666a52,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,32,1,detected,['\n  <severity>High</severity>\n  <type>fprintf</type>\n  <message>\n    Check to be sure that the non-constant format string passed as argument 2 \n    to this function call does not come from an untrusted source that could\n    have added formatting characters that the code is not prepared to handle.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c</name>\n    <line>32</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rats,fixed,scipy,0.015378952026367,https://github.com/scipy/scipy/commit/973e3432b26aef4a7df198d5ea0696eaf0649db3,https://github.com/scipy/scipy/commit/51ff6dcdb111891a966b92f8eb294564c9b4947f,scipy/sparse/linalg/dsolve/SuperLU/SRC/util.c,1,1,31,1,detected,['\n  <severity>High</severity>\n  <type>fprintf</type>\n  <message>\n    Check to be sure that the non-constant format string passed as argument 2 \n    to this function call does not come from an untrusted source that could\n    have added formatting characters that the code is not prepared to handle.\n  </message>\n  <file>\n    <name>/media/nimashiri/DATA/vsprojects/ICSE23/vul_util.c</name>\n    <line>31</line>\n  </file>\n'],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
